{"version":3,"file":"battle-tooltips.js","names":["ModifiableValue","battle","pokemon","serverPokemon","value","maxValue","comment","itemName","abilityName","weatherName","isAccuracy","Dex","items","get","item","name","ability","baseAbility","abilities","weather","moves","exists","reset","tryItem","hasPseudoWeather","push","volatiles","ignoreKlutz","tryAbility","includes","effectiveAbility","tryWeather","sides","side","active","itemModify","factor","modify","abilityModify","weatherModify","round","set","reason","setRange","Number","toFixed","toString","valueString","join","BattleTooltips","clickTooltipEvent","e","isLocked","preventDefault","stopImmediatePropagation","holdLockTooltipEvent","hideTooltip","target","currentTarget","showTooltip","type","tagName","longTapTimeout","setTimeout","lockTooltip","LONG_TAP_DELAY","showTooltipEvent","elem","cancelLongTap","parentNode","removeChild","parentElem","$","removeClass","clearTimeout","isPressed","addClass","handleTouchEnd","listen","$elem","on","unshowTooltip","click","args","dataset","tooltip","split","ownHeight","ownheight","buf","move","dex","teamIndex","parseInt","nearSide","pokemonControlled","Math","floor","mySide","n","gmaxMove","undefined","myPokemon","showMoveTooltip","sideIndex","species","getBaseSpecies","baseSpecies","index","otherPokemon","showPokemonTooltip","sidesSwitched","activeIndex","pokemonIndex","length","ally","myAllyPokemon","showFieldTooltip","Promise","resolve","Error","stack","placeTooltip","innerHTML","hoveredElem","notRelativeToParent","scene","$turn","hoveredX1","offset","left","parent","hoveredY1","top","hoveredY2","outerHeight","x","max","y","$wrapper","document","body","append","selection","window","getSelection","err","css","html","appendTo","find","height","documentElement","clientHeight","width","outerWidth","clientWidth","getStatusZMoveEffect","zMove","effect","zMoveEffects","boostText","boost","boosts","Object","keys","map","stat","BattleTextParser","getMaxMoveFromType","maxMoveTable","isZOrMax","text","zEffect","foeActive","foe","gameType","filter","toID","getMoveType","moveType","category","zMoveFrom","Move","id","moveName","zMoveTable","zMoveType","movePower","basePower","startsWith","maxMove","getTypeIcon","getCategoryIcon","showingMultipleBasePowers","prevBasePower","difference","basePowers","getMoveBasePower","activeTarget","accuracy","getMoveAccuracy","calls","gen","calledMove","hardcoreMode","shortDesc","priority","desc","flags","defrost","protect","bypasssub","reflectable","contact","sound","powder","punch","pulse","bite","recoil","hasCrashDamage","bullet","slicing","wind","clientPokemon","isActive","illusionIndex","genderBuf","gender","fxPrefix","toLowerCase","BattleLog","escapeHTML","speciesForme","levelBuf","level","formechange","transform","types","getPokemonTypes","typechange","typeadd","fainted","hp","maxhp","status","toUpperCase","exacthp","Pokemon","getHPText","min","statusData","toxicTurns","sleepTurns","supportsAbilities","tier","abilityText","getPokemonAbilityText","itemText","itemEffect","prevItem","prevItemEffect","renderStats","battlePokemon","findCorrespondingPokemon","moveid","moveTrack","row","getPPUseText","charAt","isZ","isMax","pokemonHasClones","atLeastOne","sideConditions","sideConditionsLeft","weatherbuf","weatherLeft","slice","speciesClause","searchid","calculateModifiedStats","stats","isPowerTrick","statNamesExceptHP","statName","sourceStatName","clientStatName","spc","boostLevel","boostTable","atk","spe","speedHalvingEVItems","isTransform","speciesName","speedModifiers","spa","def","spd","abilityActive","pokemonHasType","allyActive","allyAbility","getAllyAbility","getSpecies","isNFE","evos","some","evo","evoSpecies","isNonstandard","chainedSpeedModifier","modifier","ceil","short","isTransformed","getSpeedRange","modifiedStats","hasModifiedStat","statLabel","BattleText","statShortName","moveTrackRow","showKnown","ppUsed","maxpp","substr","pp","noPPBoosts","Infinity","tr","trunc","baseSpe","baseStats","rules","bstWithoutHp","bst","scale","isRandomBattle","minNature","maxNature","maxIv","maxIvEvOffset","forMaxMove","pokemonTypes","getTypeList","onMemory","onPlate","onDrive","naturalGift","isGrounded","teraType","getSpeciesForme","noTypeOverride","getTypes","i","isSound","getGen3Category","ohko","accuracyModifiers","chain","mod","accuracyAfterChain","multiplier","ratios","ratio","faintCounter","boostCount","values","ppLeft","minSpe","maxSpe","minRatio","maxRatio","fling","isGKLK","targetWeight","getWeightKg","pokemonWeight","timesAttacked","secondaries","auraBoosted","auraBroken","getItemBoost","incenseTypes","itemTypes","orbUsers","orbTypes","noGemMoves","curType","slot","getPokemonAbilityData","abilityData","possibilities","hidePossible","baseAbilityName","Poison","Fighting","Dark","Grass","Normal","Rock","Steel","Dragon","Electric","Water","Fire","Ghost","Bug","Psychic","Ice","Flying","Ground","Fairy","BattleStatGuesser","formatid","moveCount","hasMove","ignoreEVLimits","supportsEVs","supportsAVs","endsWith","guess","role","guessRole","comboEVs","guessEVs","evs","plusStat","minusStat","itemid","abilityid","megaEvolves","megaStone","needsFourMoves","moveids","len","heal","isFast","physicalBulk","specialBulk","bulk","ultrafast","offenseBias","ensureMinEVs","evTotal","diff","change","evPriority","prioStat","ensureMaxEVs","statChart","primaryStat","getStat","ev","secondaryStat","SRweaknesses","SRresistances","SRweak","indexOf","hpDivisibility","hpShouldBeDivisible","remaining","evOverride","natureOverride","baseStat","iv","ivs","val","BattleNatures","nature","plus","minus","friendshipValue","require","global"],"sources":["../src/battle-tooltips.ts"],"sourcesContent":["/**\n * Pokemon Showdown Tooltips\n *\n * A file for generating tooltips for battles. This should be IE7+ and\n * use the DOM directly.\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nclass ModifiableValue {\n\tvalue = 0;\n\tmaxValue = 0;\n\tcomment: string[];\n\tbattle: Battle;\n\tpokemon: Pokemon;\n\tserverPokemon: ServerPokemon;\n\titemName: string;\n\tabilityName: string;\n\tweatherName: string;\n\tisAccuracy = false;\n\tconstructor(battle: Battle, pokemon: Pokemon, serverPokemon: ServerPokemon) {\n\t\tthis.comment = [];\n\t\tthis.battle = battle;\n\t\tthis.pokemon = pokemon;\n\t\tthis.serverPokemon = serverPokemon;\n\n\t\tthis.itemName = Dex.items.get(serverPokemon.item).name;\n\t\tconst ability = serverPokemon.ability || pokemon?.ability || serverPokemon.baseAbility;\n\t\tthis.abilityName = Dex.abilities.get(ability).name;\n\t\tthis.weatherName = battle.weather === 'snow' ? 'Snow' : Dex.moves.get(battle.weather).exists ?\n\t\t\tDex.moves.get(battle.weather).name : Dex.abilities.get(battle.weather).name;\n\t}\n\treset(value = 0, isAccuracy?: boolean) {\n\t\tthis.value = value;\n\t\tthis.maxValue = 0;\n\t\tthis.isAccuracy = !!isAccuracy;\n\t\tthis.comment = [];\n\t}\n\ttryItem(itemName: string) {\n\t\tif (itemName !== this.itemName) return false;\n\t\tif (this.battle.hasPseudoWeather('Magic Room')) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Magic Room)`);\n\t\t\treturn false;\n\t\t}\n\t\tif (this.pokemon?.volatiles['embargo']) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Embargo)`);\n\t\t\treturn false;\n\t\t}\n\t\tconst ignoreKlutz = [\n\t\t\t\"Macho Brace\", \"Power Anklet\", \"Power Band\", \"Power Belt\", \"Power Bracer\", \"Power Lens\", \"Power Weight\",\n\t\t];\n\t\tif (this.tryAbility('Klutz') && !ignoreKlutz.includes(itemName)) {\n\t\t\tthis.comment.push(` (${itemName} suppressed by Klutz)`);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\ttryAbility(abilityName: string) {\n\t\tif (abilityName !== this.abilityName) return false;\n\t\tif (this.pokemon?.volatiles['gastroacid']) {\n\t\t\tthis.comment.push(` (${abilityName} suppressed by Gastro Acid)`);\n\t\t\treturn false;\n\t\t}\n\t\t// Check for Neutralizing Gas\n\t\tif (!this.pokemon?.effectiveAbility(this.serverPokemon)) return false;\n\t\treturn true;\n\t}\n\ttryWeather(weatherName?: string) {\n\t\tif (!this.weatherName) return false;\n\t\tif (!weatherName) weatherName = this.weatherName;\n\t\telse if (weatherName !== this.weatherName) return false;\n\t\tfor (const side of this.battle.sides) {\n\t\t\tfor (const active of side.active) {\n\t\t\t\tif (active && ['Air Lock', 'Cloud Nine'].includes(active.ability)) {\n\t\t\t\t\tthis.comment.push(` (${weatherName} suppressed by ${active.ability})`);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\titemModify(factor: number, itemName?: string) {\n\t\tif (!itemName) itemName = this.itemName;\n\t\tif (!itemName) return false;\n\t\tif (!this.tryItem(itemName)) return false;\n\t\treturn this.modify(factor, itemName);\n\t}\n\tabilityModify(factor: number, abilityName: string) {\n\t\tif (!this.tryAbility(abilityName)) return false;\n\t\treturn this.modify(factor, abilityName);\n\t}\n\tweatherModify(factor: number, weatherName?: string, name?: string) {\n\t\tif (!weatherName) weatherName = this.weatherName;\n\t\tif (!weatherName) return false;\n\t\tif (!this.tryWeather(weatherName)) return false;\n\t\treturn this.modify(factor, name || weatherName);\n\t}\n\tmodify(factor: number, name?: string) {\n\t\tif (factor === 0) {\n\t\t\tif (name) this.comment.push(` (${name})`);\n\t\t\tthis.value = 0;\n\t\t\tthis.maxValue = 0;\n\t\t\treturn true;\n\t\t}\n\t\tif (name) this.comment.push(` (${this.round(factor)}&times; from ${name})`);\n\t\tthis.value *= factor;\n\t\tif (!(name === 'Technician' && this.maxValue > 60)) this.maxValue *= factor;\n\t\treturn true;\n\t}\n\tset(value: number, reason?: string) {\n\t\tif (reason) this.comment.push(` (${reason})`);\n\t\tthis.value = value;\n\t\tthis.maxValue = 0;\n\t\treturn true;\n\t}\n\tsetRange(value: number, maxValue: number, reason?: string) {\n\t\tif (reason) this.comment.push(` (${reason})`);\n\t\tthis.value = value;\n\t\tthis.maxValue = maxValue;\n\t\treturn true;\n\t}\n\tround(value: number) {\n\t\treturn value ? Number(value.toFixed(2)) : 0;\n\t}\n\ttoString() {\n\t\tlet valueString;\n\t\tif (this.isAccuracy) {\n\t\t\tvalueString = this.value ? `${this.round(this.value)}%` : `can't miss`;\n\t\t} else {\n\t\t\tvalueString = this.value ? `${this.round(this.value)}` : ``;\n\t\t}\n\t\tif (this.maxValue) {\n\t\t\tvalueString += ` to ${this.round(this.maxValue)}` + (this.isAccuracy ? '%' : '');\n\t\t}\n\t\treturn valueString + this.comment.join('');\n\t}\n}\n\nclass BattleTooltips {\n\tbattle: Battle;\n\n\tconstructor(battle: Battle) {\n\t\tthis.battle = battle;\n\t}\n\n\t// tooltips\n\t// Touch delay, pressing finger more than that time will cause the tooltip to open.\n\t// Shorter time will cause the button to click\n\tstatic LONG_TAP_DELAY = 350; // ms\n\tstatic longTapTimeout = 0;\n\tstatic elem: HTMLDivElement | null = null;\n\tstatic parentElem: HTMLElement | null = null;\n\tstatic isLocked = false;\n\tstatic isPressed = false;\n\n\tstatic hideTooltip() {\n\t\tif (!BattleTooltips.elem) return;\n\t\tBattleTooltips.cancelLongTap();\n\t\tBattleTooltips.elem.parentNode!.removeChild(BattleTooltips.elem);\n\t\tBattleTooltips.elem = null;\n\t\tBattleTooltips.parentElem = null;\n\t\tBattleTooltips.isLocked = false;\n\t\t$('#tooltipwrapper').removeClass('tooltip-locked');\n\t}\n\n\tstatic cancelLongTap() {\n\t\tif (BattleTooltips.longTapTimeout) {\n\t\t\tclearTimeout(BattleTooltips.longTapTimeout);\n\t\t\tBattleTooltips.longTapTimeout = 0;\n\t\t}\n\t}\n\n\tlockTooltip() {\n\t\tif (BattleTooltips.elem && !BattleTooltips.isLocked) {\n\t\t\tBattleTooltips.isLocked = true;\n\t\t\tif (BattleTooltips.isPressed) {\n\t\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\n\t\t\t\tBattleTooltips.isPressed = false;\n\t\t\t}\n\t\t\t$('#tooltipwrapper').addClass('tooltip-locked');\n\t\t}\n\t}\n\n\thandleTouchEnd(e: TouchEvent) {\n\t\tBattleTooltips.cancelLongTap();\n\n\t\tif (!BattleTooltips.isLocked) BattleTooltips.hideTooltip();\n\t}\n\n\tlisten(elem: HTMLElement | JQuery<HTMLElement>) {\n\t\tconst $elem = $(elem);\n\t\t$elem.on('mouseover', '.has-tooltip', this.showTooltipEvent);\n\t\t$elem.on('click', '.has-tooltip', this.clickTooltipEvent);\n\t\t$elem.on('focus', '.has-tooltip', this.showTooltipEvent);\n\t\t$elem.on('mouseout', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('mousedown', '.has-tooltip', this.holdLockTooltipEvent);\n\t\t$elem.on('blur', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('mouseup', '.has-tooltip', BattleTooltips.unshowTooltip);\n\n\t\t$elem.on('touchstart', '.has-tooltip', e => {\n\t\t\te.preventDefault();\n\t\t\tthis.holdLockTooltipEvent(e);\n\t\t\tif (!BattleTooltips.parentElem) {\n\t\t\t\t// should never happen, but in case there's a bug in the tooltip handler\n\t\t\t\tBattleTooltips.parentElem = e.currentTarget;\n\t\t\t}\n\t\t\t$(BattleTooltips.parentElem!).addClass('pressed');\n\t\t\tBattleTooltips.isPressed = true;\n\t\t});\n\t\t$elem.on('touchend', '.has-tooltip', e => {\n\t\t\te.preventDefault();\n\t\t\tif (e.currentTarget === BattleTooltips.parentElem && BattleTooltips.isPressed) {\n\t\t\t\tBattleTooltips.parentElem!.click();\n\t\t\t}\n\t\t\tBattleTooltips.unshowTooltip();\n\t\t});\n\t\t$elem.on('touchleave', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t\t$elem.on('touchcancel', '.has-tooltip', BattleTooltips.unshowTooltip);\n\t}\n\n\tclickTooltipEvent = (e: Event) => {\n\t\tif (BattleTooltips.isLocked) {\n\t\t\te.preventDefault();\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\t};\n\t/**\n\t * An event that will lock a tooltip if held down\n\t *\n\t * (Namely, a long-tap or long-click)\n\t */\n\tholdLockTooltipEvent = (e: JQuery.TriggeredEvent) => {\n\t\tif (BattleTooltips.isLocked) BattleTooltips.hideTooltip();\n\t\tconst target = e.currentTarget as HTMLElement;\n\t\tthis.showTooltip(target);\n\t\tlet factor = (e.type === 'mousedown' && target.tagName === 'BUTTON' ? 2 : 1);\n\n\t\tBattleTooltips.longTapTimeout = setTimeout(() => {\n\t\t\tBattleTooltips.longTapTimeout = 0;\n\t\t\tthis.lockTooltip();\n\t\t}, BattleTooltips.LONG_TAP_DELAY * factor);\n\t};\n\n\tshowTooltipEvent = (e: Event) => {\n\t\tif (BattleTooltips.isLocked) return;\n\t\tthis.showTooltip(e.currentTarget as HTMLElement);\n\t};\n\n\t/**\n\t * Only hides tooltips if they're not locked\n\t */\n\tstatic unshowTooltip() {\n\t\tif (BattleTooltips.isLocked) return;\n\t\tif (BattleTooltips.isPressed) {\n\t\t\t$(BattleTooltips.parentElem!).removeClass('pressed');\n\t\t\tBattleTooltips.isPressed = false;\n\t\t}\n\t\tBattleTooltips.hideTooltip();\n\t}\n\n\tshowTooltip(elem: HTMLElement) {\n\t\tconst args = (elem.dataset.tooltip || '').split('|');\n\t\tconst [type] = args;\n\t\t/**\n\t\t * If false, we instead attach the tooltip above the parent element.\n\t\t * This is important for the move/switch menus so the tooltip doesn't\n\t\t * cover up buttons above the hovered button.\n\t\t */\n\t\tlet ownHeight = !!elem.dataset.ownheight;\n\n\t\tlet buf: string;\n\t\tswitch (type) {\n\t\tcase 'move':\n\t\tcase 'zmove':\n\t\tcase 'maxmove': { // move|MOVE|ACTIVEPOKEMON|[GMAXMOVE]\n\t\t\tlet move = this.battle.dex.moves.get(args[1]);\n\t\t\tlet teamIndex = parseInt(args[2], 10);\n\t\t\tlet pokemon = this.battle.nearSide.active[\n\t\t\t\tteamIndex + this.battle.pokemonControlled * Math.floor(this.battle.mySide.n / 2)\n\t\t\t];\n\t\t\tlet gmaxMove = args[3] ? this.battle.dex.moves.get(args[3]) : undefined;\n\t\t\tif (!pokemon) return false;\n\t\t\tlet serverPokemon = this.battle.myPokemon![teamIndex];\n\t\t\tbuf = this.showMoveTooltip(move, type, pokemon, serverPokemon, gmaxMove);\n\t\t\tbreak;\n\t\t}\n\n\t\tcase 'pokemon': { // pokemon|SIDE|POKEMON\n\t\t\t// mouse over sidebar pokemon\n\t\t\t// pokemon definitely exists, serverPokemon always ignored\n\t\t\tlet sideIndex = parseInt(args[1], 10);\n\t\t\tlet side = this.battle.sides[sideIndex];\n\t\t\tlet pokemon = side.pokemon[parseInt(args[2], 10)];\n\t\t\tif (args[3] === 'illusion') {\n\t\t\t\tbuf = '';\n\t\t\t\tconst species = pokemon.getBaseSpecies().baseSpecies;\n\t\t\t\tlet index = 1;\n\t\t\t\tfor (const otherPokemon of side.pokemon) {\n\t\t\t\t\tif (otherPokemon.getBaseSpecies().baseSpecies === species) {\n\t\t\t\t\t\tbuf += this.showPokemonTooltip(otherPokemon, null, false, index);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbuf = this.showPokemonTooltip(pokemon);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'activepokemon': { // activepokemon|SIDE|ACTIVE\n\t\t\t// mouse over active pokemon\n\t\t\t// pokemon definitely exists, serverPokemon maybe\n\t\t\tlet sideIndex = parseInt(args[1], 10);\n\t\t\tlet side = this.battle.sides[+this.battle.sidesSwitched ^ sideIndex];\n\t\t\tlet activeIndex = parseInt(args[2], 10);\n\t\t\tlet pokemonIndex = activeIndex;\n\t\t\tif (activeIndex >= 1 && this.battle.sides.length > 2) {\n\t\t\t\tpokemonIndex -= 1;\n\t\t\t\tside = this.battle.sides[side.n + 2];\n\t\t\t}\n\t\t\tlet pokemon = side.active[activeIndex];\n\t\t\tlet serverPokemon = null;\n\t\t\tif (side === this.battle.mySide && this.battle.myPokemon) {\n\t\t\t\tserverPokemon = this.battle.myPokemon[pokemonIndex];\n\t\t\t}\n\t\t\tif (side === this.battle.mySide.ally && this.battle.myAllyPokemon) {\n\t\t\t\tserverPokemon = this.battle.myAllyPokemon[pokemonIndex];\n\t\t\t}\n\t\t\tif (!pokemon) return false;\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon, true);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'switchpokemon': { // switchpokemon|POKEMON\n\t\t\t// mouse over switchable pokemon\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\n\t\t\t// let side = this.battle.mySide;\n\t\t\tlet activeIndex = parseInt(args[1], 10);\n\t\t\tlet pokemon = null;\n\t\t\t/* if (activeIndex < side.active.length && activeIndex < this.battle.pokemonControlled) {\n\t\t\t\tpokemon = side.active[activeIndex];\n\t\t\t\tif (pokemon && pokemon.side === side.ally) pokemon = null;\n\t\t\t} */\n\t\t\tlet serverPokemon = this.battle.myPokemon![activeIndex];\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'allypokemon': { // allypokemon|POKEMON\n\t\t\t// mouse over ally's pokemon in multi battles\n\t\t\t// serverPokemon definitely exists, sidePokemon maybe\n\t\t\t// let side = this.battle.mySide.ally;\n\t\t\tlet activeIndex = parseInt(args[1], 10);\n\t\t\tlet pokemon = null;\n\t\t\t/*if (activeIndex < side.pokemon.length) {\n\t\t\t\tpokemon = side.pokemon[activeIndex] || side.ally ? side.ally.pokemon[activeIndex] : null;\n\t\t\t}*/\n\t\t\tlet serverPokemon = this.battle.myAllyPokemon ? this.battle.myAllyPokemon[activeIndex] : null;\n\t\t\tbuf = this.showPokemonTooltip(pokemon, serverPokemon);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'field': {\n\t\t\tbuf = this.showFieldTooltip();\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\t// \"throws\" an error without crashing\n\t\t\tPromise.resolve(new Error(`unrecognized type`));\n\t\t\tbuf = `<p class=\"message-error\" style=\"white-space: pre-wrap\">${new Error(`unrecognized type`).stack}</p>`;\n\t\t}\n\n\t\tthis.placeTooltip(buf, elem, ownHeight, type);\n\t\treturn true;\n\t}\n\n\tplaceTooltip(innerHTML: string, hoveredElem?: HTMLElement, notRelativeToParent?: boolean, type?: string) {\n\t\tlet $elem;\n\t\tif (hoveredElem) {\n\t\t\t$elem = $(hoveredElem);\n\t\t} else {\n\t\t\t$elem = (this.battle.scene as BattleScene).$turn;\n\t\t\tnotRelativeToParent = true;\n\t\t}\n\n\t\tlet hoveredX1 = $elem.offset()!.left;\n\n\t\tif (!notRelativeToParent) {\n\t\t\t$elem = $elem.parent();\n\t\t}\n\n\t\tlet hoveredY1 = $elem.offset()!.top;\n\t\tlet hoveredY2 = hoveredY1 + $elem.outerHeight()!;\n\n\t\t// (x, y) are the left and top offsets of #tooltipwrapper, which mark the\n\t\t// BOTTOM LEFT CORNER of the tooltip\n\n\t\tlet x = Math.max(hoveredX1 - 2, 0);\n\t\tlet y = Math.max(hoveredY1 - 5, 0);\n\n\t\tlet $wrapper = $('#tooltipwrapper');\n\t\tif (!$wrapper.length) {\n\t\t\t$wrapper = $(`<div id=\"tooltipwrapper\" role=\"tooltip\"></div>`);\n\t\t\t$(document.body).append($wrapper);\n\t\t\t$wrapper.on('click', e => {\n\t\t\t\ttry {\n\t\t\t\t\tconst selection = window.getSelection()!;\n\t\t\t\t\tif (selection.type === 'Range') return;\n\t\t\t\t} catch (err) {}\n\t\t\t\tBattleTooltips.hideTooltip();\n\t\t\t});\n\t\t} else {\n\t\t\t$wrapper.removeClass('tooltip-locked');\n\t\t}\n\t\t$wrapper.css({\n\t\t\tleft: x,\n\t\t\ttop: y,\n\t\t});\n\t\tinnerHTML = `<div class=\"tooltipinner\"><div class=\"tooltip tooltip-${type}\">${innerHTML}</div></div>`;\n\t\t$wrapper.html(innerHTML).appendTo(document.body);\n\t\tBattleTooltips.elem = $wrapper.find('.tooltip')[0] as HTMLDivElement;\n\t\tBattleTooltips.isLocked = false;\n\n\t\tlet height = $(BattleTooltips.elem).outerHeight()!;\n\t\tif (y - height < 1) {\n\t\t\t// tooltip is too tall to fit above the element:\n\t\t\t// try to fit it below it instead\n\t\t\ty = hoveredY2 + height + 5;\n\t\t\tif (y > document.documentElement.clientHeight) {\n\t\t\t\t// tooltip is also too tall to fit below the element:\n\t\t\t\t// just place it at the top of the screen\n\t\t\t\ty = height + 1;\n\t\t\t}\n\t\t\t$wrapper.css('top', y);\n\t\t} else if (y < 75) {\n\t\t\t// tooltip is pretty high up, put it below the element if it fits\n\t\t\ty = hoveredY2 + height + 5;\n\t\t\tif (y < document.documentElement.clientHeight) {\n\t\t\t\t// it fits\n\t\t\t\t$wrapper.css('top', y);\n\t\t\t}\n\t\t}\n\n\t\tlet width = $(BattleTooltips.elem).outerWidth()!;\n\t\tif (x > document.documentElement.clientWidth - width - 2) {\n\t\t\tx = document.documentElement.clientWidth - width - 2;\n\t\t\t$wrapper.css('left', x);\n\t\t}\n\n\t\tBattleTooltips.parentElem = hoveredElem || null;\n\t\treturn true;\n\t}\n\n\thideTooltip() {\n\t\tBattleTooltips.hideTooltip();\n\t}\n\n\tstatic zMoveEffects: {[zEffect: string]: string} = {\n\t\t'clearnegativeboost': \"Restores negative stat stages to 0\",\n\t\t'crit2': \"Crit ratio +2\",\n\t\t'heal': \"Restores HP 100%\",\n\t\t'curse': \"Restores HP 100% if user is Ghost type, otherwise Attack +1\",\n\t\t'redirect': \"Redirects opposing attacks to user\",\n\t\t'healreplacement': \"Restores replacement's HP 100%\",\n\t};\n\n\tgetStatusZMoveEffect(move: Move) {\n\t\tif (move.zMove!.effect! in BattleTooltips.zMoveEffects) {\n\t\t\treturn BattleTooltips.zMoveEffects[move.zMove!.effect!];\n\t\t}\n\t\tlet boostText = '';\n\t\tif (move.zMove!.boost) {\n\t\t\tlet boosts = Object.keys(move.zMove!.boost) as StatName[];\n\t\t\tboostText = boosts.map(stat =>\n\t\t\t\tBattleTextParser.stat(stat) + ' +' + move.zMove!.boost![stat]\n\t\t\t).join(', ');\n\t\t}\n\t\treturn boostText;\n\t}\n\n\tstatic zMoveTable: {[type in TypeName]: string} = {\n\t\tPoison: \"Acid Downpour\",\n\t\tFighting: \"All-Out Pummeling\",\n\t\tDark: \"Black Hole Eclipse\",\n\t\tGrass: \"Bloom Doom\",\n\t\tNormal: \"Breakneck Blitz\",\n\t\tRock: \"Continental Crush\",\n\t\tSteel: \"Corkscrew Crash\",\n\t\tDragon: \"Devastating Drake\",\n\t\tElectric: \"Gigavolt Havoc\",\n\t\tWater: \"Hydro Vortex\",\n\t\tFire: \"Inferno Overdrive\",\n\t\tGhost: \"Never-Ending Nightmare\",\n\t\tBug: \"Savage Spin-Out\",\n\t\tPsychic: \"Shattered Psyche\",\n\t\tIce: \"Subzero Slammer\",\n\t\tFlying: \"Supersonic Skystrike\",\n\t\tGround: \"Tectonic Rage\",\n\t\tFairy: \"Twinkle Tackle\",\n\t\t\"???\": \"\",\n\t};\n\n\tstatic maxMoveTable: {[type in TypeName]: string} = {\n\t\tPoison: \"Max Ooze\",\n\t\tFighting: \"Max Knuckle\",\n\t\tDark: \"Max Darkness\",\n\t\tGrass: \"Max Overgrowth\",\n\t\tNormal: \"Max Strike\",\n\t\tRock: \"Max Rockfall\",\n\t\tSteel: \"Max Steelspike\",\n\t\tDragon: \"Max Wyrmwind\",\n\t\tElectric: \"Max Lightning\",\n\t\tWater: \"Max Geyser\",\n\t\tFire: \"Max Flare\",\n\t\tGhost: \"Max Phantasm\",\n\t\tBug: \"Max Flutterby\",\n\t\tPsychic: \"Max Mindstorm\",\n\t\tIce: \"Max Hailstorm\",\n\t\tFlying: \"Max Airstream\",\n\t\tGround: \"Max Quake\",\n\t\tFairy: \"Max Starfall\",\n\t\t\"???\": \"\",\n\t};\n\n\tgetMaxMoveFromType(type: TypeName, gmaxMove?: string | Move) {\n\t\tif (gmaxMove) {\n\t\t\tgmaxMove = Dex.moves.get(gmaxMove);\n\t\t\tif (type === gmaxMove.type) return gmaxMove;\n\t\t}\n\t\treturn Dex.moves.get(BattleTooltips.maxMoveTable[type]);\n\t}\n\n\tshowMoveTooltip(move: Move, isZOrMax: string, pokemon: Pokemon, serverPokemon: ServerPokemon, gmaxMove?: Move) {\n\t\tlet text = '';\n\n\t\tlet zEffect = '';\n\t\tlet foeActive = pokemon.side.foe.active;\n\t\tif (this.battle.gameType === 'freeforall') {\n\t\t\tfoeActive = [...foeActive, ...pokemon.side.active].filter(active => active !== pokemon);\n\t\t}\n\t\t// TODO: move this somewhere it makes more sense\n\t\tif (pokemon.ability === '(suppressed)') serverPokemon.ability = '(suppressed)';\n\t\tlet ability = toID(serverPokemon.ability || pokemon.ability || serverPokemon.baseAbility);\n\t\tlet item = this.battle.dex.items.get(serverPokemon.item);\n\n\t\tlet value = new ModifiableValue(this.battle, pokemon, serverPokemon);\n\t\tlet [moveType, category] = this.getMoveType(move, value, gmaxMove || isZOrMax === 'maxmove');\n\n\t\tif (isZOrMax === 'zmove') {\n\t\t\tif (item.zMoveFrom === move.name) {\n\t\t\t\tmove = this.battle.dex.moves.get(item.zMove as string);\n\t\t\t} else if (move.category === 'Status') {\n\t\t\t\tmove = new Move(move.id, \"\", {\n\t\t\t\t\t...move,\n\t\t\t\t\tname: 'Z-' + move.name,\n\t\t\t\t});\n\t\t\t\tzEffect = this.getStatusZMoveEffect(move);\n\t\t\t} else {\n\t\t\t\tlet moveName = BattleTooltips.zMoveTable[item.zMoveType as TypeName];\n\t\t\t\tlet zMove = this.battle.dex.moves.get(moveName);\n\t\t\t\tlet movePower = move.zMove!.basePower;\n\t\t\t\t// the different Hidden Power types don't have a Z power set, fall back on base move\n\t\t\t\tif (!movePower && move.id.startsWith('hiddenpower')) {\n\t\t\t\t\tmovePower = this.battle.dex.moves.get('hiddenpower').zMove!.basePower;\n\t\t\t\t}\n\t\t\t\tif (move.id === 'weatherball') {\n\t\t\t\t\tswitch (this.battle.weather) {\n\t\t\t\t\tcase 'sunnyday':\n\t\t\t\t\tcase 'desolateland':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Fire']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'raindance':\n\t\t\t\t\tcase 'primordialsea':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Water']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'sandstorm':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Rock']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hail':\n\t\t\t\t\tcase 'snow':\n\t\t\t\t\t\tzMove = this.battle.dex.moves.get(BattleTooltips.zMoveTable['Ice']);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmove = new Move(zMove.id, zMove.name, {\n\t\t\t\t\t...zMove,\n\t\t\t\t\tcategory: move.category,\n\t\t\t\t\tbasePower: movePower,\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (isZOrMax === 'maxmove') {\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tmove = this.battle.dex.moves.get('Max Guard');\n\t\t\t} else {\n\t\t\t\tlet maxMove = this.getMaxMoveFromType(moveType, gmaxMove);\n\t\t\t\tconst basePower = ['gmaxdrumsolo', 'gmaxfireball', 'gmaxhydrosnipe'].includes(maxMove.id) ?\n\t\t\t\t\tmaxMove.basePower : move.maxMove.basePower;\n\t\t\t\tmove = new Move(maxMove.id, maxMove.name, {\n\t\t\t\t\t...maxMove,\n\t\t\t\t\tcategory: move.category,\n\t\t\t\t\tbasePower,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\ttext += '<h2>' + move.name + '<br />';\n\n\t\ttext += Dex.getTypeIcon(moveType);\n\t\ttext += ` ${Dex.getCategoryIcon(category)}</h2>`;\n\n\t\t// Check if there are more than one active Pokémon to check for multiple possible BPs.\n\t\tlet showingMultipleBasePowers = false;\n\t\tif (category !== 'Status' && foeActive.length > 1) {\n\t\t\t// We check if there is a difference in base powers to note it.\n\t\t\t// Otherwise, it is just shown as in singles.\n\t\t\t// The trick is that we need to calculate it first for each Pokémon to see if it changes.\n\t\t\tlet prevBasePower: string | null = null;\n\t\t\tlet basePower: string = '';\n\t\t\tlet difference = false;\n\t\t\tlet basePowers = [];\n\t\t\tfor (const active of foeActive) {\n\t\t\t\tif (!active) continue;\n\t\t\t\tvalue = this.getMoveBasePower(move, moveType, value, active);\n\t\t\t\tbasePower = '' + value;\n\t\t\t\tif (prevBasePower === null) prevBasePower = basePower;\n\t\t\t\tif (prevBasePower !== basePower) difference = true;\n\t\t\t\tbasePowers.push('Base power vs ' + active.name + ': ' + basePower);\n\t\t\t}\n\t\t\tif (difference) {\n\t\t\t\ttext += '<p>' + basePowers.join('<br />') + '</p>';\n\t\t\t\tshowingMultipleBasePowers = true;\n\t\t\t}\n\t\t\t// Falls through to not to repeat code on showing the base power.\n\t\t}\n\t\tif (!showingMultipleBasePowers && category !== 'Status') {\n\t\t\tlet activeTarget = foeActive[0] || foeActive[1] || foeActive[2];\n\t\t\tvalue = this.getMoveBasePower(move, moveType, value, activeTarget);\n\t\t\ttext += '<p>Base power: ' + value + '</p>';\n\t\t}\n\n\t\tlet accuracy = this.getMoveAccuracy(move, value);\n\n\t\t// Deal with Nature Power special case, indicating which move it calls.\n\t\tif (move.id === 'naturepower') {\n\t\t\tlet calls;\n\t\t\tif (this.battle.gen > 5) {\n\t\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\t\tcalls = 'Thunderbolt';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\t\tcalls = 'Energy Ball';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\t\t\tcalls = 'Moonblast';\n\t\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\n\t\t\t\t\tcalls = 'Psychic';\n\t\t\t\t} else {\n\t\t\t\t\tcalls = 'Tri Attack';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gen > 3) {\n\t\t\t\t// In gens 4 and 5 it calls Earthquake.\n\t\t\t\tcalls = 'Earthquake';\n\t\t\t} else {\n\t\t\t\t// In gen 3 it calls Swift, so it retains its normal typing.\n\t\t\t\tcalls = 'Swift';\n\t\t\t}\n\t\t\tlet calledMove = this.battle.dex.moves.get(calls);\n\t\t\ttext += 'Calls ' + Dex.getTypeIcon(this.getMoveType(calledMove, value)[0]) + ' ' + calledMove.name;\n\t\t}\n\n\t\ttext += '<p>Accuracy: ' + accuracy + '</p>';\n\t\tif (zEffect) text += '<p>Z-Effect: ' + zEffect + '</p>';\n\n\t\tif (this.battle.hardcoreMode) {\n\t\t\ttext += '<p class=\"section\">' + move.shortDesc + '</p>';\n\t\t} else {\n\t\t\ttext += '<p class=\"section\">';\n\t\t\tif (move.priority > 1) {\n\t\t\t\ttext += 'Nearly always moves first <em>(priority +' + move.priority + ')</em>.</p><p>';\n\t\t\t} else if (move.priority <= -1) {\n\t\t\t\ttext += 'Nearly always moves last <em>(priority &minus;' + (-move.priority) + ')</em>.</p><p>';\n\t\t\t} else if (move.priority === 1) {\n\t\t\t\ttext += 'Usually moves first <em>(priority +' + move.priority + ')</em>.</p><p>';\n\t\t\t} else {\n\t\t\t\tif (move.id === 'grassyglide' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\t\ttext += 'Usually moves first <em>(priority +1)</em>.</p><p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext += '' + (move.desc || move.shortDesc || '') + '</p>';\n\n\t\t\tif (this.battle.gameType === 'doubles' || this.battle.gameType === 'multi') {\n\t\t\t\tif (move.target === 'allAdjacent') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes and ally.</p>';\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits both foes.</p>';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gameType === 'triples') {\n\t\t\t\tif (move.target === 'allAdjacent') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes and allies.</p>';\n\t\t\t\t} else if (move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits adjacent foes.</p>';\n\t\t\t\t} else if (move.target === 'any') {\n\t\t\t\t\ttext += '<p>&#x25ce; Can target distant Pok&eacute;mon in Triples.</p>';\n\t\t\t\t}\n\t\t\t} else if (this.battle.gameType === 'freeforall') {\n\t\t\t\tif (move.target === 'allAdjacent' || move.target === 'allAdjacentFoes') {\n\t\t\t\t\ttext += '<p>&#x25ce; Hits all foes.</p>';\n\t\t\t\t} else if (move.target === 'adjacentAlly') {\n\t\t\t\t\ttext += '<p>&#x25ce; Can target any foe in Free-For-All.</p>';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (move.flags.defrost) {\n\t\t\t\ttext += `<p class=\"movetag\">The user thaws out if it is frozen.</p>`;\n\t\t\t}\n\t\t\tif (!move.flags.protect && !['self', 'allySide'].includes(move.target)) {\n\t\t\t\ttext += `<p class=\"movetag\">Not blocked by Protect <small>(and Detect, King's Shield, Spiky Shield)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bypasssub) {\n\t\t\t\ttext += `<p class=\"movetag\">Bypasses Substitute <small>(but does not break it)</small></p>`;\n\t\t\t}\n\t\t\tif (!move.flags.reflectable && !['self', 'allySide'].includes(move.target) && move.category === 'Status') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Not bounceable <small>(can't be bounced by Magic Coat/Bounce)</small></p>`;\n\t\t\t}\n\n\t\t\tif (move.flags.contact) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Contact <small>(triggers Iron Barbs, Spiky Shield, etc)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.sound) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Sound <small>(doesn't affect Soundproof pokemon)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.powder && this.battle.gen > 5) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Powder <small>(doesn't affect Grass, Overcoat, Safety Goggles)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.punch && ability === 'ironfist') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Fist <small>(boosted by Iron Fist)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.pulse && ability === 'megalauncher') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Pulse <small>(boosted by Mega Launcher)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bite && ability === 'strongjaw') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bite <small>(boosted by Strong Jaw)</small></p>`;\n\t\t\t}\n\t\t\tif ((move.recoil || move.hasCrashDamage) && ability === 'reckless') {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Recoil <small>(boosted by Reckless)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.bullet) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Bullet-like <small>(doesn't affect Bulletproof pokemon)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.slicing) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Slicing <small>(boosted by Sharpness)</small></p>`;\n\t\t\t}\n\t\t\tif (move.flags.wind) {\n\t\t\t\ttext += `<p class=\"movetag\">&#x2713; Wind <small>(activates Wind Power and Wind Rider)</small></p>`;\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\t/**\n\t * Needs either a Pokemon or a ServerPokemon, but note that neither\n\t * are guaranteed: If you hover over a possible switch-in that's\n\t * never been switched in before, you'll only have a ServerPokemon,\n\t * and if you hover over an opponent's pokemon, you'll only have a\n\t * Pokemon.\n\t *\n\t * isActive is true if hovering over a pokemon in the battlefield,\n\t * and false if hovering over a pokemon in the Switch menu.\n\t *\n\t * @param clientPokemon\n\t * @param serverPokemon\n\t * @param isActive\n\t */\n\tshowPokemonTooltip(\n\t\tclientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, isActive?: boolean, illusionIndex?: number\n\t) {\n\t\tconst pokemon = clientPokemon || serverPokemon!;\n\t\tlet text = '';\n\t\tlet genderBuf = '';\n\t\tconst gender = pokemon.gender;\n\t\tif (gender === 'M' || gender === 'F') {\n\t\t\tgenderBuf = ` <img src=\"${Dex.fxPrefix}gender-${gender.toLowerCase()}.png\" alt=\"${gender}\" width=\"7\" height=\"10\" class=\"pixelated\" /> `;\n\t\t}\n\n\t\tlet name = BattleLog.escapeHTML(pokemon.name);\n\t\tif (pokemon.speciesForme !== pokemon.name) {\n\t\t\tname += ' <small>(' + BattleLog.escapeHTML(pokemon.speciesForme) + ')</small>';\n\t\t}\n\n\t\tlet levelBuf = (pokemon.level !== 100 ? ` <small>L${pokemon.level}</small>` : ``);\n\t\tif (!illusionIndex || illusionIndex === 1) {\n\t\t\ttext += `<h2>${name}${genderBuf}${illusionIndex ? '' : levelBuf}<br />`;\n\n\t\t\tif (clientPokemon?.volatiles.formechange) {\n\t\t\t\tif (clientPokemon.volatiles.transform) {\n\t\t\t\t\ttext += `<small>(Transformed into ${clientPokemon.volatiles.formechange[1]})</small><br />`;\n\t\t\t\t} else {\n\t\t\t\t\ttext += `<small>(Changed forme: ${clientPokemon.volatiles.formechange[1]})</small><br />`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet types = this.getPokemonTypes(pokemon);\n\n\t\t\tif (clientPokemon && (clientPokemon.volatiles.typechange || clientPokemon.volatiles.typeadd)) {\n\t\t\t\ttext += `<small>(Type changed)</small><br />`;\n\t\t\t}\n\t\t\ttext += types.map(type => Dex.getTypeIcon(type)).join(' ');\n\t\t\ttext += `</h2>`;\n\t\t}\n\n\t\tif (illusionIndex) {\n\t\t\ttext += `<p class=\"section\"><strong>Possible Illusion #${illusionIndex}</strong>${levelBuf}</p>`;\n\t\t}\n\n\t\tif (pokemon.fainted) {\n\t\t\ttext += '<p><small>HP:</small> (fainted)</p>';\n\t\t} else if (this.battle.hardcoreMode) {\n\t\t\tif (serverPokemon) {\n\t\t\t\ttext += '<p><small>HP:</small> ' + serverPokemon.hp + '/' + serverPokemon.maxhp + (pokemon.status ? ' <span class=\"status ' + pokemon.status + '\">' + pokemon.status.toUpperCase() + '</span>' : '') + '</p>';\n\t\t\t}\n\t\t} else {\n\t\t\tlet exacthp = '';\n\t\t\tif (serverPokemon) {\n\t\t\t\texacthp = ' (' + serverPokemon.hp + '/' + serverPokemon.maxhp + ')';\n\t\t\t} else if (pokemon.maxhp === 48) {\n\t\t\t\texacthp = ' <small>(' + pokemon.hp + '/' + pokemon.maxhp + ' pixels)</small>';\n\t\t\t}\n\t\t\ttext += '<p><small>HP:</small> ' + Pokemon.getHPText(pokemon) + exacthp + (pokemon.status ? ' <span class=\"status ' + pokemon.status + '\">' + pokemon.status.toUpperCase() + '</span>' : '');\n\t\t\tif (clientPokemon) {\n\t\t\t\tif (pokemon.status === 'tox') {\n\t\t\t\t\tif (pokemon.ability === 'Poison Heal' || pokemon.ability === 'Magic Guard') {\n\t\t\t\t\t\ttext += ' <small>Would take if ability removed: ' + Math.floor(100 / 16 * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)) + '%</small>';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += ' Next damage: ' + Math.floor(100 / (clientPokemon.volatiles['dynamax'] ? 32 : 16) * Math.min(clientPokemon.statusData.toxicTurns + 1, 15)) + '%';\n\t\t\t\t\t}\n\t\t\t\t} else if (pokemon.status === 'slp') {\n\t\t\t\t\ttext += ' Turns asleep: ' + clientPokemon.statusData.sleepTurns;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttext += '</p>';\n\t\t}\n\n\t\tconst supportsAbilities = this.battle.gen > 2 && !this.battle.tier.includes(\"Let's Go\");\n\n\t\tlet abilityText = '';\n\t\tif (supportsAbilities) {\n\t\t\tabilityText = this.getPokemonAbilityText(\n\t\t\t\tclientPokemon, serverPokemon, isActive, !!illusionIndex && illusionIndex > 1\n\t\t\t);\n\t\t}\n\n\t\tlet itemText = '';\n\t\tif (serverPokemon) {\n\t\t\tlet item = '';\n\t\t\tlet itemEffect = '';\n\t\t\tif (clientPokemon?.prevItem) {\n\t\t\t\titem = 'None';\n\t\t\t\tlet prevItem = Dex.items.get(clientPokemon.prevItem).name;\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\n\t\t\t}\n\t\t\tif (serverPokemon.item) item = Dex.items.get(serverPokemon.item).name;\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\n\t\t} else if (clientPokemon) {\n\t\t\tlet item = '';\n\t\t\tlet itemEffect = clientPokemon.itemEffect || '';\n\t\t\tif (clientPokemon.prevItem) {\n\t\t\t\titem = 'None';\n\t\t\t\tif (itemEffect) itemEffect += '; ';\n\t\t\t\tlet prevItem = Dex.items.get(clientPokemon.prevItem).name;\n\t\t\t\titemEffect += clientPokemon.prevItemEffect ? prevItem + ' was ' + clientPokemon.prevItemEffect : 'was ' + prevItem;\n\t\t\t}\n\t\t\tif (pokemon.item) item = Dex.items.get(pokemon.item).name;\n\t\t\tif (itemEffect) itemEffect = ' (' + itemEffect + ')';\n\t\t\tif (item) itemText = '<small>Item:</small> ' + item + itemEffect;\n\t\t}\n\n\t\tif (abilityText || itemText) {\n\t\t\ttext += '<p>';\n\t\t\ttext += abilityText;\n\t\t\tif (abilityText && itemText) {\n\t\t\t\t// ability/item on one line for your own switch tooltips, two lines everywhere else\n\t\t\t\ttext += (!isActive && serverPokemon ? ' / ' : '</p><p>');\n\t\t\t}\n\t\t\ttext += itemText;\n\t\t\ttext += '</p>';\n\t\t}\n\n\t\ttext += this.renderStats(clientPokemon, serverPokemon, !isActive);\n\n\t\tif (serverPokemon && !isActive) {\n\t\t\t// move list\n\t\t\ttext += `<p class=\"section\">`;\n\t\t\tconst battlePokemon = clientPokemon || this.battle.findCorrespondingPokemon(pokemon);\n\t\t\tfor (const moveid of serverPokemon.moves) {\n\t\t\t\tconst move = Dex.moves.get(moveid);\n\t\t\t\tlet moveName = `&#8226; ${move.name}`;\n\t\t\t\tif (battlePokemon?.moveTrack) {\n\t\t\t\t\tfor (const row of battlePokemon.moveTrack) {\n\t\t\t\t\t\tif (moveName === row[0]) {\n\t\t\t\t\t\t\tmoveName = this.getPPUseText(row, true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttext += `${moveName}<br />`;\n\t\t\t}\n\t\t\ttext += '</p>';\n\t\t} else if (!this.battle.hardcoreMode && clientPokemon?.moveTrack.length) {\n\t\t\t// move list (guessed)\n\t\t\ttext += `<p class=\"section\">`;\n\t\t\tfor (const row of clientPokemon.moveTrack) {\n\t\t\t\ttext += `${this.getPPUseText(row)}<br />`;\n\t\t\t}\n\t\t\tif (clientPokemon.moveTrack.filter(([moveName]) => {\n\t\t\t\tif (moveName.charAt(0) === '*') return false;\n\t\t\t\tconst move = this.battle.dex.moves.get(moveName);\n\t\t\t\treturn !move.isZ && !move.isMax && move.name !== 'Mimic';\n\t\t\t}).length > 4) {\n\t\t\t\ttext += `(More than 4 moves is usually a sign of Illusion Zoroark/Zorua.) `;\n\t\t\t}\n\t\t\tif (this.battle.gen === 3) {\n\t\t\t\ttext += `(Pressure is not visible in Gen 3, so in certain situations, more PP may have been lost than shown here.) `;\n\t\t\t}\n\t\t\tif (this.pokemonHasClones(clientPokemon)) {\n\t\t\t\ttext += `(Your opponent has two indistinguishable Pokémon, making it impossible for you to tell which one has which moves/ability/item.) `;\n\t\t\t}\n\t\t\ttext += `</p>`;\n\t\t}\n\t\treturn text;\n\t}\n\n\tshowFieldTooltip() {\n\t\tconst scene = this.battle.scene as BattleScene;\n\t\tlet buf = `<table style=\"border: 0; border-collapse: collapse; vertical-align: top; padding: 0; width: 100%\"><tr>`;\n\n\t\tlet atLeastOne = false;\n\t\tfor (const side of this.battle.sides) {\n\t\t\tconst sideConditions = scene.sideConditionsLeft(side, true);\n\t\t\tif (sideConditions) atLeastOne = true;\n\t\t\tbuf += `<td><p class=\"section\"><strong>${BattleLog.escapeHTML(side.name)}</strong>${sideConditions || \"<br />(no conditions)\"}</p></td>`;\n\t\t}\n\t\tbuf += `</tr><table>`;\n\t\tif (!atLeastOne) buf = ``;\n\n\t\tlet weatherbuf = scene.weatherLeft() || `(no weather)`;\n\t\tif (weatherbuf.startsWith('<br />')) {\n\t\t\tweatherbuf = weatherbuf.slice(6);\n\t\t}\n\t\tbuf = `<p>${weatherbuf}</p>` + buf;\n\t\treturn `<p>${buf}</p>`;\n\t}\n\n\t/**\n\t * Does this Pokémon's trainer have two of these Pokémon that are\n\t * indistinguishable? (Same nickname, species, forme, level, gender,\n\t * and shininess.)\n\t */\n\tpokemonHasClones(pokemon: Pokemon) {\n\t\tconst side = pokemon.side;\n\t\tif (side.battle.speciesClause) return false;\n\t\tfor (const ally of side.pokemon) {\n\t\t\tif (pokemon !== ally && pokemon.searchid === ally.searchid) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tcalculateModifiedStats(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon) {\n\t\tlet stats = {...serverPokemon.stats};\n\t\tlet pokemon = clientPokemon || serverPokemon;\n\t\tconst isPowerTrick = clientPokemon?.volatiles['powertrick'];\n\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\tlet sourceStatName = statName;\n\t\t\tif (isPowerTrick) {\n\t\t\t\tif (statName === 'atk') sourceStatName = 'def';\n\t\t\t\tif (statName === 'def') sourceStatName = 'atk';\n\t\t\t}\n\t\t\tstats[statName] = serverPokemon.stats[sourceStatName];\n\t\t\tif (!clientPokemon) continue;\n\n\t\t\tconst clientStatName = clientPokemon.boosts.spc && (statName === 'spa' || statName === 'spd') ? 'spc' : statName;\n\t\t\tconst boostLevel = clientPokemon.boosts[clientStatName];\n\t\t\tif (boostLevel) {\n\t\t\t\tlet boostTable = [1, 1.5, 2, 2.5, 3, 3.5, 4];\n\t\t\t\tif (boostLevel > 0) {\n\t\t\t\t\tstats[statName] *= boostTable[boostLevel];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.battle.gen <= 2) boostTable = [1, 100 / 66, 2, 2.5, 100 / 33, 100 / 28, 4];\n\t\t\t\t\tstats[statName] /= boostTable[-boostLevel];\n\t\t\t\t}\n\t\t\t\tstats[statName] = Math.floor(stats[statName]);\n\t\t\t}\n\t\t}\n\n\t\tconst ability = toID(\n\t\t\tclientPokemon?.effectiveAbility(serverPokemon) ?? (serverPokemon.ability || serverPokemon.baseAbility)\n\t\t);\n\n\t\t// check for burn, paralysis, guts, quick feet\n\t\tif (pokemon.status) {\n\t\t\tif (this.battle.gen > 2 && ability === 'guts') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t} else if (this.battle.gen < 2 && pokemon.status === 'brn') {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\t}\n\n\t\t\tif (this.battle.gen > 2 && ability === 'quickfeet') {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 1.5);\n\t\t\t}\n\t\t}\n\n\t\t// gen 1 doesn't support items\n\t\tif (this.battle.gen <= 1) {\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (stats[statName] > 999) stats[statName] = 999;\n\t\t\t}\n\t\t\treturn stats;\n\t\t}\n\n\t\tlet item = toID(serverPokemon.item);\n\t\tlet speedHalvingEVItems = ['machobrace', 'poweranklet', 'powerband', 'powerbelt', 'powerbracer', 'powerlens', 'powerweight'];\n\t\tif (\n\t\t\t(ability === 'klutz' && !speedHalvingEVItems.includes(item)) ||\n\t\t\tthis.battle.hasPseudoWeather('Magic Room') ||\n\t\t\tclientPokemon?.volatiles['embargo']\n\t\t) {\n\t\t\titem = '' as ID;\n\t\t}\n\n\t\tconst species = Dex.species.get(serverPokemon.speciesForme).baseSpecies;\n\t\tconst isTransform = clientPokemon?.volatiles.transform;\n\t\tconst speciesName = isTransform && clientPokemon?.volatiles.formechange?.[1] && this.battle.gen <= 4 ?\n\t\t\tthis.battle.dex.species.get(clientPokemon.volatiles.formechange[1]).baseSpecies : species;\n\n\t\tlet speedModifiers = [];\n\n\t\t// check for light ball, thick club, metal/quick powder\n\t\t// the only stat modifying items in gen 2 were light ball, thick club, metal powder\n\t\tif (item === 'lightball' && speciesName === 'Pikachu' && this.battle.gen !== 4) {\n\t\t\tif (this.battle.gen > 4) stats.atk *= 2;\n\t\t\tstats.spa *= 2;\n\t\t}\n\n\t\tif (item === 'thickclub') {\n\t\t\tif (speciesName === 'Marowak' || speciesName === 'Cubone') {\n\t\t\t\tstats.atk *= 2;\n\t\t\t}\n\t\t}\n\n\t\tif (speciesName === 'Ditto' && !(clientPokemon && 'transform' in clientPokemon.volatiles)) {\n\t\t\tif (item === 'quickpowder') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (item === 'metalpowder') {\n\t\t\t\tif (this.battle.gen === 2) {\n\t\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t} else {\n\t\t\t\t\tstats.def *= 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check abilities other than Guts and Quick Feet\n\t\t// check items other than light ball, thick club, metal/quick powder\n\t\tif (this.battle.gen <= 2) {\n\t\t\treturn stats;\n\t\t}\n\n\t\tlet weather = this.battle.weather;\n\t\tif (this.battle.abilityActive(['Air Lock', 'Cloud Nine'])) {\n\t\t\tweather = '' as ID;\n\t\t}\n\n\t\tif (item === 'choiceband' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t}\n\t\tif (ability === 'purepower' || ability === 'hugepower') {\n\t\t\tstats.atk *= 2;\n\t\t}\n\t\tif (ability === 'hustle' || (ability === 'gorillatactics' && !clientPokemon?.volatiles['dynamax'])) {\n\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t}\n\t\tif (weather) {\n\t\t\tif (this.battle.gen >= 4 && this.pokemonHasType(pokemon, 'Rock') && weather === 'sandstorm') {\n\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t}\n\t\t\tif (this.pokemonHasType(pokemon, 'Ice') && weather === 'snow') {\n\t\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\t}\n\t\t\tif (ability === 'sandrush' && weather === 'sandstorm') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (ability === 'slushrush' && (weather === 'hail' || weather === 'snow')) {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (item !== 'utilityumbrella') {\n\t\t\t\tif (weather === 'sunnyday' || weather === 'desolateland') {\n\t\t\t\t\tif (ability === 'chlorophyll') {\n\t\t\t\t\t\tspeedModifiers.push(2);\n\t\t\t\t\t}\n\t\t\t\t\tif (ability === 'solarpower') {\n\t\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t\t}\n\t\t\t\t\tif (ability === 'orichalcumpulse') {\n\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.3);\n\t\t\t\t\t}\n\t\t\t\t\tlet allyActive = clientPokemon?.side.active;\n\t\t\t\t\tif (allyActive) {\n\t\t\t\t\t\tfor (const ally of allyActive) {\n\t\t\t\t\t\t\tif (!ally || ally.fainted) continue;\n\t\t\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\t\t\t\tif (allyAbility === 'Flower Gift' && (ally.getSpecies().baseSpecies === 'Cherrim' || this.battle.gen <= 4)) {\n\t\t\t\t\t\t\t\tstats.atk = Math.floor(stats.atk * 1.5);\n\t\t\t\t\t\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (weather === 'raindance' || weather === 'primordialsea') {\n\t\t\t\t\tif (ability === 'swiftswim') {\n\t\t\t\t\t\tspeedModifiers.push(2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ability === 'defeatist' && serverPokemon.hp <= serverPokemon.maxhp / 2) {\n\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\tstats.spa = Math.floor(stats.spa * 0.5);\n\t\t}\n\t\tif (clientPokemon) {\n\t\t\tif (clientPokemon.volatiles['slowstart']) {\n\t\t\t\tstats.atk = Math.floor(stats.atk * 0.5);\n\t\t\t\tspeedModifiers.push(0.5);\n\t\t\t}\n\t\t\tif (ability === 'unburden' && clientPokemon.volatiles['itemremoved'] && !item) {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (clientPokemon.volatiles['protosynthesis' + statName] || clientPokemon.volatiles['quarkdrive' + statName]) {\n\t\t\t\t\tif (statName === 'spe') {\n\t\t\t\t\t\tspeedModifiers.push(1.5);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstats[statName] = Math.floor(stats[statName] * 1.3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (ability === 'marvelscale' && pokemon.status) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t}\n\t\tconst isNFE = this.battle.dex.species.get(serverPokemon.speciesForme).evos?.some(evo => {\n\t\t\tconst evoSpecies = this.battle.dex.species.get(evo);\n\t\t\treturn !evoSpecies.isNonstandard ||\n\t\t\t\t\tevoSpecies.isNonstandard === this.battle.dex.species.get(serverPokemon.speciesForme)?.isNonstandard ||\n\t\t\t\t\t// Pokemon with Hisui evolutions\n\t\t\t\t\tevoSpecies.isNonstandard === \"Unobtainable\";\n\t\t});\n\t\tif (item === 'eviolite' && isNFE) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (ability === 'grasspelt' && this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\tstats.def = Math.floor(stats.def * 1.5);\n\t\t}\n\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\tif (ability === 'surgesurfer') {\n\t\t\t\tspeedModifiers.push(2);\n\t\t\t}\n\t\t\tif (ability === 'hadronengine') {\n\t\t\t\tstats.spa = Math.floor(stats.spa * 1.3);\n\t\t\t}\n\t\t}\n\t\tif (item === 'choicespecs' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t}\n\t\tif (item === 'deepseatooth' && species === 'Clamperl') {\n\t\t\tstats.spa *= 2;\n\t\t}\n\t\tif (item === 'souldew' && this.battle.gen <= 6 && (species === 'Latios' || species === 'Latias')) {\n\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (clientPokemon && (ability === 'plus' || ability === 'minus')) {\n\t\t\tlet allyActive = clientPokemon.side.active;\n\t\t\tif (allyActive.length > 1) {\n\t\t\t\tlet abilityName = (ability === 'plus' ? 'Plus' : 'Minus');\n\t\t\t\tfor (const ally of allyActive) {\n\t\t\t\t\tif (!ally || ally === clientPokemon || ally.fainted) continue;\n\t\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\t\tif (allyAbility !== 'Plus' && allyAbility !== 'Minus') continue;\n\t\t\t\t\tif (this.battle.gen <= 4 && allyAbility === abilityName) continue;\n\t\t\t\t\tstats.spa = Math.floor(stats.spa * 1.5);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (item === 'assaultvest') {\n\t\t\tstats.spd = Math.floor(stats.spd * 1.5);\n\t\t}\n\t\tif (item === 'deepseascale' && species === 'Clamperl') {\n\t\t\tstats.spd *= 2;\n\t\t}\n\t\tif (item === 'choicescarf' && !clientPokemon?.volatiles['dynamax']) {\n\t\t\tspeedModifiers.push(1.5);\n\t\t}\n\t\tif (item === 'ironball' || speedHalvingEVItems.includes(item)) {\n\t\t\tspeedModifiers.push(0.5);\n\t\t}\n\t\tif (ability === 'furcoat') {\n\t\t\tstats.def *= 2;\n\t\t}\n\t\tif (this.battle.abilityActive('Vessel of Ruin', pokemon)) {\n\t\t\tstats.spa = Math.floor(stats.spa * 0.75);\n\t\t}\n\t\tif (this.battle.abilityActive('Sword of Ruin', pokemon)) {\n\t\t\tstats.def = Math.floor(stats.def * 0.75);\n\t\t}\n\t\tif (this.battle.abilityActive('Tablets of Ruin', pokemon)) {\n\t\t\tstats.atk = Math.floor(stats.atk * 0.75);\n\t\t}\n\t\tif (this.battle.abilityActive('Beads of Ruin', pokemon)) {\n\t\t\tstats.spd = Math.floor(stats.spd * 0.75);\n\t\t}\n\t\tconst sideConditions = this.battle.mySide.sideConditions;\n\t\tif (sideConditions['tailwind']) {\n\t\t\tspeedModifiers.push(2);\n\t\t}\n\t\tif (sideConditions['grasspledge']) {\n\t\t\tspeedModifiers.push(0.25);\n\t\t}\n\n\t\tlet chainedSpeedModifier = 1;\n\t\tfor (const modifier of speedModifiers) {\n\t\t\tchainedSpeedModifier *= modifier;\n\t\t}\n\t\t// Chained modifiers round down on 0.5\n\t\tstats.spe = stats.spe * chainedSpeedModifier;\n\t\tstats.spe = stats.spe % 1 > 0.5 ? Math.ceil(stats.spe) : Math.floor(stats.spe);\n\n\t\tif (pokemon.status === 'par' && ability !== 'quickfeet') {\n\t\t\tif (this.battle.gen > 6) {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.5);\n\t\t\t} else {\n\t\t\t\tstats.spe = Math.floor(stats.spe * 0.25);\n\t\t\t}\n\t\t}\n\n\t\treturn stats;\n\t}\n\n\trenderStats(clientPokemon: Pokemon | null, serverPokemon?: ServerPokemon | null, short?: boolean) {\n\t\tconst isTransformed = clientPokemon?.volatiles.transform;\n\t\tif (!serverPokemon || isTransformed) {\n\t\t\tif (!clientPokemon) throw new Error('Must pass either clientPokemon or serverPokemon');\n\t\t\tlet [min, max] = this.getSpeedRange(clientPokemon);\n\t\t\treturn '<p><small>Spe</small> ' + min + ' to ' + max + ' <small>(before items/abilities/modifiers)</small></p>';\n\t\t}\n\t\tconst stats = serverPokemon.stats;\n\t\tconst modifiedStats = this.calculateModifiedStats(clientPokemon, serverPokemon);\n\n\t\tlet buf = '<p>';\n\n\t\tif (!short) {\n\t\t\tlet hasModifiedStat = false;\n\t\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\n\t\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\n\t\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\n\t\t\t\tbuf += '' + BattleText[statLabel].statShortName + '&nbsp;</small>';\n\t\t\t\tbuf += '' + stats[statName];\n\t\t\t\tif (modifiedStats[statName] !== stats[statName]) hasModifiedStat = true;\n\t\t\t}\n\t\t\tbuf += '</p>';\n\n\t\t\tif (!hasModifiedStat) return buf;\n\n\t\t\tbuf += '<p><small>(After stat modifiers:)</small></p>';\n\t\t\tbuf += '<p>';\n\t\t}\n\n\t\tfor (const statName of Dex.statNamesExceptHP) {\n\t\t\tif (this.battle.gen === 1 && statName === 'spd') continue;\n\t\t\tlet statLabel = this.battle.gen === 1 && statName === 'spa' ? 'spc' : statName;\n\t\t\tbuf += statName === 'atk' ? '<small>' : '<small> / ';\n\t\t\tbuf += '' + BattleText[statLabel].statShortName + '&nbsp;</small>';\n\t\t\tif (modifiedStats[statName] === stats[statName]) {\n\t\t\t\tbuf += '' + modifiedStats[statName];\n\t\t\t} else if (modifiedStats[statName] < stats[statName]) {\n\t\t\t\tbuf += '<strong class=\"stat-lowered\">' + modifiedStats[statName] + '</strong>';\n\t\t\t} else {\n\t\t\t\tbuf += '<strong class=\"stat-boosted\">' + modifiedStats[statName] + '</strong>';\n\t\t\t}\n\t\t}\n\t\tbuf += '</p>';\n\t\treturn buf;\n\t}\n\n\tgetPPUseText(moveTrackRow: [string, number], showKnown?: boolean) {\n\t\tlet [moveName, ppUsed] = moveTrackRow;\n\t\tlet move;\n\t\tlet maxpp;\n\t\tif (moveName.charAt(0) === '*') {\n\t\t\t// Transformed move\n\t\t\tmove = this.battle.dex.moves.get(moveName.substr(1));\n\t\t\tmaxpp = 5;\n\t\t} else {\n\t\t\tmove = this.battle.dex.moves.get(moveName);\n\t\t\tmaxpp = (move.pp === 1 || move.noPPBoosts ? move.pp : move.pp * 8 / 5);\n\t\t\tif (this.battle.gen < 3) maxpp = Math.min(61, maxpp);\n\t\t}\n\t\tconst bullet = moveName.charAt(0) === '*' || move.isZ ? '<span style=\"color:#888\">&#8226;</span>' : '&#8226;';\n\t\tif (ppUsed === Infinity) {\n\t\t\treturn `${bullet} ${move.name} <small>(0/${maxpp})</small>`;\n\t\t}\n\t\tif (ppUsed || moveName.charAt(0) === '*') {\n\t\t\treturn `${bullet} ${move.name} <small>(${maxpp - ppUsed}/${maxpp})</small>`;\n\t\t}\n\t\treturn `${bullet} ${move.name} ${showKnown ? ' <small>(revealed)</small>' : ''}`;\n\t}\n\n\tppUsed(move: Move, pokemon: Pokemon) {\n\t\tfor (let [moveName, ppUsed] of pokemon.moveTrack) {\n\t\t\tif (moveName.charAt(0) === '*') moveName = moveName.substr(1);\n\t\t\tif (move.name === moveName) return ppUsed;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Calculates possible Speed stat range of an opponent\n\t */\n\tgetSpeedRange(pokemon: Pokemon): [number, number] {\n\t\tconst tr = Math.trunc || Math.floor;\n\t\tconst species = pokemon.getSpecies();\n\t\tlet baseSpe = species.baseStats.spe;\n\t\tif (this.battle.rules['Scalemons Mod']) {\n\t\t\tconst bstWithoutHp = species.bst - species.baseStats.hp;\n\t\t\tconst scale = 600 - species.baseStats.hp;\n\t\t\tbaseSpe = tr(baseSpe * scale / bstWithoutHp);\n\t\t\tif (baseSpe < 1) baseSpe = 1;\n\t\t\tif (baseSpe > 255) baseSpe = 255;\n\t\t}\n\t\tlet level = pokemon.volatiles.transform?.[4] || pokemon.level;\n\t\tlet tier = this.battle.tier;\n\t\tlet gen = this.battle.gen;\n\t\tlet isRandomBattle = tier.includes('Random Battle') ||\n\t\t\t(tier.includes('Random') && tier.includes('Battle') && gen >= 6);\n\n\t\tlet minNature = (isRandomBattle || gen < 3) ? 1 : 0.9;\n\t\tlet maxNature = (isRandomBattle || gen < 3) ? 1 : 1.1;\n\t\tlet maxIv = (gen < 3) ? 30 : 31;\n\n\t\tlet min;\n\t\tlet max;\n\t\tif (tier.includes(\"Let's Go\")) {\n\t\t\tmin = tr(tr(tr(2 * baseSpe * level / 100 + 5) * minNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\n\t\t\tmax = tr(tr(tr((2 * baseSpe + maxIv) * level / 100 + 5) * maxNature) * tr((70 / 255 / 10 + 1) * 100) / 100);\n\t\t\tif (tier.includes('No Restrictions')) max += 200;\n\t\t\telse if (tier.includes('Random')) max += 20;\n\t\t} else {\n\t\t\tlet maxIvEvOffset = maxIv + ((isRandomBattle && gen >= 3) ? 21 : 63);\n\t\t\tmin = tr(tr(2 * baseSpe * level / 100 + 5) * minNature);\n\t\t\tmax = tr(tr((2 * baseSpe + maxIvEvOffset) * level / 100 + 5) * maxNature);\n\t\t}\n\t\treturn [min, max];\n\t}\n\n\t/**\n\t * Gets the proper current type for moves with a variable type.\n\t */\n\tgetMoveType(move: Move, value: ModifiableValue, forMaxMove?: boolean | Move): [TypeName, 'Physical' | 'Special' | 'Status'] {\n\t\tconst pokemon = value.pokemon;\n\t\tconst serverPokemon = value.serverPokemon;\n\n\t\tlet moveType = move.type;\n\t\tlet category = move.category;\n\t\tif (category === 'Status' && forMaxMove) return ['Normal', 'Status']; // Max Guard\n\t\t// can happen in obscure situations\n\t\tif (!pokemon) return [moveType, category];\n\n\t\tlet pokemonTypes = pokemon.getTypeList(serverPokemon);\n\t\tvalue.reset();\n\t\tif (move.id === 'revelationdance') {\n\t\t\tmoveType = pokemonTypes[0];\n\t\t}\n\t\t// Moves that require an item to change their type.\n\t\tlet item = Dex.items.get(value.itemName);\n\t\tif (move.id === 'multiattack' && item.onMemory) {\n\t\t\tif (value.itemModify(0)) moveType = item.onMemory;\n\t\t}\n\t\tif (move.id === 'judgment' && item.onPlate && !item.zMoveType) {\n\t\t\tif (value.itemModify(0)) moveType = item.onPlate;\n\t\t}\n\t\tif (move.id === 'technoblast' && item.onDrive) {\n\t\t\tif (value.itemModify(0)) moveType = item.onDrive;\n\t\t}\n\t\tif (move.id === 'naturalgift' && item.naturalGift) {\n\t\t\tif (value.itemModify(0)) moveType = item.naturalGift.type;\n\t\t}\n\t\t// Weather and pseudo-weather type changes.\n\t\tif (move.id === 'weatherball' && value.weatherModify(0)) {\n\t\t\tswitch (this.battle.weather) {\n\t\t\tcase 'sunnyday':\n\t\t\tcase 'desolateland':\n\t\t\t\tif (item.id === 'utilityumbrella') break;\n\t\t\t\tmoveType = 'Fire';\n\t\t\t\tbreak;\n\t\t\tcase 'raindance':\n\t\t\tcase 'primordialsea':\n\t\t\t\tif (item.id === 'utilityumbrella') break;\n\t\t\t\tmoveType = 'Water';\n\t\t\t\tbreak;\n\t\t\tcase 'sandstorm':\n\t\t\t\tmoveType = 'Rock';\n\t\t\t\tbreak;\n\t\t\tcase 'hail':\n\t\t\tcase 'snow':\n\t\t\t\tmoveType = 'Ice';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terrainpulse' && pokemon.isGrounded(serverPokemon)) {\n\t\t\tif (this.battle.hasPseudoWeather('Electric Terrain')) {\n\t\t\t\tmoveType = 'Electric';\n\t\t\t} else if (this.battle.hasPseudoWeather('Grassy Terrain')) {\n\t\t\t\tmoveType = 'Grass';\n\t\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\t\tmoveType = 'Fairy';\n\t\t\t} else if (this.battle.hasPseudoWeather('Psychic Terrain')) {\n\t\t\t\tmoveType = 'Psychic';\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terablast' && pokemon.teraType) {\n\t\t\tmoveType = pokemon.teraType as TypeName;\n\t\t}\n\n\t\t// Aura Wheel as Morpeko-Hangry changes the type to Dark\n\t\tif (move.id === 'aurawheel' && pokemon.getSpeciesForme() === 'Morpeko-Hangry') {\n\t\t\tmoveType = 'Dark';\n\t\t}\n\t\t// Raging Bull's type depends on the Tauros forme\n\t\tif (move.id === 'ragingbull') {\n\t\t\tswitch (pokemon.getSpeciesForme()) {\n\t\t\tcase 'Tauros-Paldea':\n\t\t\t\tmoveType = 'Fighting';\n\t\t\t\tbreak;\n\t\t\tcase 'Tauros-Paldea-Fire':\n\t\t\t\tmoveType = 'Fire';\n\t\t\t\tbreak;\n\t\t\tcase 'Tauros-Paldea-Water':\n\t\t\t\tmoveType = 'Water';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Other abilities that change the move type.\n\t\tconst noTypeOverride = [\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terablast', 'terrainpulse', 'weatherball',\n\t\t];\n\t\tif (!noTypeOverride.includes(move.id)) {\n\t\t\tif (this.battle.rules['Revelationmons Mod']) {\n\t\t\t\tconst [types] = pokemon.getTypes(serverPokemon);\n\t\t\t\tfor (let i = 0; i < types.length; i++) {\n\t\t\t\t\tif (serverPokemon.moves[i] && move.id === toID(serverPokemon.moves[i])) {\n\t\t\t\t\t\tmoveType = types[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (category !== 'Status' && !move.isZ && !move.id.startsWith('hiddenpower')) {\n\t\t\t\tif (moveType === 'Normal') {\n\t\t\t\t\tif (value.abilityModify(0, 'Aerilate')) moveType = 'Flying';\n\t\t\t\t\tif (value.abilityModify(0, 'Galvanize')) moveType = 'Electric';\n\t\t\t\t\tif (value.abilityModify(0, 'Pixilate')) moveType = 'Fairy';\n\t\t\t\t\tif (value.abilityModify(0, 'Refrigerate')) moveType = 'Ice';\n\t\t\t\t}\n\t\t\t\tif (value.abilityModify(0, 'Normalize')) moveType = 'Normal';\n\t\t\t}\n\n\t\t\t// There aren't any max moves with the sound flag, but if there were, Liquid Voice would make them water type\n\t\t\tconst isSound = !!(\n\t\t\t\tforMaxMove ?\n\t\t\t\tthis.getMaxMoveFromType(moveType, forMaxMove !== true && forMaxMove || undefined) : move\n\t\t\t).flags['sound'];\n\t\t\tif (isSound && value.abilityModify(0, 'Liquid Voice')) {\n\t\t\t\tmoveType = 'Water';\n\t\t\t}\n\t\t}\n\n\t\tif (this.battle.gen <= 3 && category !== 'Status') {\n\t\t\tcategory = Dex.getGen3Category(moveType);\n\t\t}\n\t\treturn [moveType, category];\n\t}\n\n\t// Gets the current accuracy for a move.\n\tgetMoveAccuracy(move: Move, value: ModifiableValue, target?: Pokemon) {\n\t\tvalue.reset(move.accuracy === true ? 0 : move.accuracy, true);\n\n\t\tlet pokemon = value.pokemon!;\n\t\t// Sure-hit accuracy\n\t\tif (move.id === 'toxic' && this.battle.gen >= 6 && this.pokemonHasType(pokemon, 'Poison')) {\n\t\t\tvalue.set(0, \"Poison type\");\n\t\t\treturn value;\n\t\t}\n\t\tif (move.id === 'blizzard' && this.battle.gen >= 4) {\n\t\t\tvalue.weatherModify(0, 'Hail');\n\t\t\tvalue.weatherModify(0, 'Snow');\n\t\t}\n\t\tif (move.id === 'hurricane' || move.id === 'thunder') {\n\t\t\tvalue.weatherModify(0, 'Rain Dance');\n\t\t\tvalue.weatherModify(0, 'Primordial Sea');\n\t\t}\n\t\tvalue.abilityModify(0, 'No Guard');\n\t\tif (!value.value) return value;\n\n\t\t// OHKO moves don't use standard accuracy / evasion modifiers\n\t\tif (move.ohko) {\n\t\t\tif (this.battle.gen === 1) {\n\t\t\t\tvalue.set(value.value, `fails if target's Speed is higher`);\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (move.id === 'sheercold' && this.battle.gen >= 7 && !this.pokemonHasType(pokemon, 'Ice')) {\n\t\t\t\tvalue.set(20, 'not Ice-type');\n\t\t\t}\n\t\t\tif (target) {\n\t\t\t\tif (pokemon.level < target.level) {\n\t\t\t\t\tvalue.reset(0);\n\t\t\t\t\tvalue.set(0, \"FAILS: target's level is higher\");\n\t\t\t\t} else if (pokemon.level > target.level) {\n\t\t\t\t\tvalue.set(value.value + pokemon.level - target.level, \"+1% per level above target\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (pokemon.level < 100) value.set(value.value, \"fails if target's level is higher\");\n\t\t\t\tif (pokemon.level > 1) value.set(value.value, \"+1% per level above target\");\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\t// Accuracy modifiers start\n\n\t\tlet accuracyModifiers = [];\n\t\tif (this.battle.hasPseudoWeather('Gravity')) {\n\t\t\taccuracyModifiers.push(6840);\n\t\t\tvalue.modify(5 / 3, \"Gravity\");\n\t\t}\n\n\t\tfor (const active of pokemon.side.active) {\n\t\t\tif (!active || active.fainted) continue;\n\t\t\tconst ability = this.getAllyAbility(active);\n\t\t\tif (ability === 'Victory Star') {\n\t\t\t\taccuracyModifiers.push(4506);\n\t\t\t\tvalue.modify(1.1, \"Victory Star\");\n\t\t\t}\n\t\t}\n\n\t\tif (value.tryAbility('Hustle') && move.category === 'Physical') {\n\t\t\taccuracyModifiers.push(3277);\n\t\t\tvalue.abilityModify(0.8, \"Hustle\");\n\t\t} else if (value.tryAbility('Compound Eyes')) {\n\t\t\taccuracyModifiers.push(5325);\n\t\t\tvalue.abilityModify(1.3, \"Compound Eyes\");\n\t\t}\n\n\t\tif (value.tryItem('Wide Lens')) {\n\t\t\taccuracyModifiers.push(4505);\n\t\t\tvalue.itemModify(1.1, \"Wide Lens\");\n\t\t}\n\n\t\t// Chaining modifiers\n\t\tlet chain = 4096;\n\t\tfor (const mod of accuracyModifiers) {\n\t\t\tif (mod !== 4096) {\n\t\t\t\tchain = (chain * mod + 2048) >> 12;\n\t\t\t}\n\t\t}\n\n\t\t// Applying modifiers\n\t\tvalue.set(move.accuracy as number);\n\n\t\tif (move.id === 'hurricane' || move.id === 'thunder') {\n\t\t\tif (value.tryWeather('Sunny Day')) value.set(50, 'Sunny Day');\n\t\t\tif (value.tryWeather('Desolate Land')) value.set(50, 'Desolate Land');\n\t\t}\n\n\t\t// Chained modifiers round down on 0.5\n\t\tlet accuracyAfterChain = (value.value * chain) / 4096;\n\t\taccuracyAfterChain = accuracyAfterChain % 1 > 0.5 ? Math.ceil(accuracyAfterChain) : Math.floor(accuracyAfterChain);\n\t\tvalue.set(accuracyAfterChain);\n\n\t\t// Unlike for Atk, Def, etc. accuracy and evasion boosts are applied after modifiers\n\t\tif (pokemon?.boosts.accuracy) {\n\t\t\tif (pokemon.boosts.accuracy > 0) {\n\t\t\t\tvalue.set(Math.floor(value.value * (pokemon.boosts.accuracy + 3) / 3));\n\t\t\t} else {\n\t\t\t\tvalue.set(Math.floor(value.value * 3 / (3 - pokemon.boosts.accuracy)));\n\t\t\t}\n\t\t}\n\n\t\t// 1/256 glitch\n\t\tif (this.battle.gen === 1 && !toID(this.battle.tier).includes('stadium')) {\n\t\t\tvalue.set((Math.floor(value.value * 255 / 100) / 256) * 100);\n\t\t}\n\t\treturn value;\n\t}\n\n\t// Gets the proper current base power for moves which have a variable base power.\n\t// Takes into account the target for some moves.\n\t// If it is unsure of the actual base power, it gives an estimate.\n\tgetMoveBasePower(move: Move, moveType: TypeName, value: ModifiableValue, target: Pokemon | null = null) {\n\t\tconst pokemon = value.pokemon!;\n\t\tconst serverPokemon = value.serverPokemon;\n\n\t\t// apply modifiers for moves that depend on the actual stats\n\t\tconst modifiedStats = this.calculateModifiedStats(pokemon, serverPokemon);\n\n\t\tvalue.reset(move.basePower);\n\n\t\tif (move.id === 'acrobatics') {\n\t\t\tif (!serverPokemon.item) {\n\t\t\t\tvalue.modify(2, \"Acrobatics + no item\");\n\t\t\t}\n\t\t}\n\t\tif (['crushgrip', 'wringout'].includes(move.id) && target) {\n\t\t\tvalue.set(\n\t\t\t\tMath.floor(Math.floor((120 * (100 * Math.floor(target.hp * 4096 / target.maxhp)) + 2048 - 1) / 4096) / 100) || 1,\n\t\t\t\t'approximate'\n\t\t\t);\n\t\t}\n\t\tif (move.id === 'brine' && target && target.hp * 2 <= target.maxhp) {\n\t\t\tvalue.modify(2, 'Brine + target below half HP');\n\t\t}\n\t\tif (move.id === 'eruption' || move.id === 'waterspout' || move.id === 'dragonenergy') {\n\t\t\tvalue.set(Math.floor(150 * pokemon.hp / pokemon.maxhp) || 1);\n\t\t}\n\t\tif (move.id === 'facade' && !['', 'slp', 'frz'].includes(pokemon.status)) {\n\t\t\tvalue.modify(2, 'Facade + status');\n\t\t}\n\t\tif (move.id === 'flail' || move.id === 'reversal') {\n\t\t\tlet multiplier;\n\t\t\tlet ratios;\n\t\t\tif (this.battle.gen > 4) {\n\t\t\t\tmultiplier = 48;\n\t\t\t\tratios = [2, 5, 10, 17, 33];\n\t\t\t} else {\n\t\t\t\tmultiplier = 64;\n\t\t\t\tratios = [2, 6, 13, 22, 43];\n\t\t\t}\n\t\t\tlet ratio = pokemon.hp * multiplier / pokemon.maxhp;\n\t\t\tlet basePower;\n\t\t\tif (ratio < ratios[0]) basePower = 200;\n\t\t\telse if (ratio < ratios[1]) basePower = 150;\n\t\t\telse if (ratio < ratios[2]) basePower = 100;\n\t\t\telse if (ratio < ratios[3]) basePower = 80;\n\t\t\telse if (ratio < ratios[4]) basePower = 40;\n\t\t\telse basePower = 20;\n\t\t\tvalue.set(basePower);\n\t\t}\n\t\tif (['hex', 'infernalparade'].includes(move.id) && target?.status) {\n\t\t\tvalue.modify(2, move.name + ' + status');\n\t\t}\n\t\tif (move.id === 'lastrespects') {\n\t\t\tvalue.set(Math.min(50 + 50 * pokemon.side.faintCounter));\n\t\t}\n\t\tif (move.id === 'punishment' && target) {\n\t\t\tlet boostCount = 0;\n\t\t\tfor (const boost of Object.values(target.boosts)) {\n\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t}\n\t\t\tvalue.set(Math.min(60 + 20 * boostCount, 200));\n\t\t}\n\t\tif (move.id === 'smellingsalts' && target) {\n\t\t\tif (target.status === 'par') {\n\t\t\t\tvalue.modify(2, 'Smelling Salts + Paralysis');\n\t\t\t}\n\t\t}\n\t\tif (['storedpower', 'powertrip'].includes(move.id) && target) {\n\t\t\tlet boostCount = 0;\n\t\t\tfor (const boost of Object.values(pokemon.boosts)) {\n\t\t\t\tif (boost > 0) boostCount += boost;\n\t\t\t}\n\t\t\tvalue.set(20 + 20 * boostCount);\n\t\t}\n\t\tif (move.id === 'trumpcard') {\n\t\t\tconst ppLeft = 5 - this.ppUsed(move, pokemon);\n\t\t\tlet basePower = 40;\n\t\t\tif (ppLeft === 1) basePower = 200;\n\t\t\telse if (ppLeft === 2) basePower = 80;\n\t\t\telse if (ppLeft === 3) basePower = 60;\n\t\t\telse if (ppLeft === 4) basePower = 50;\n\t\t\tvalue.set(basePower);\n\t\t}\n\t\tif (move.id === 'magnitude') {\n\t\t\tvalue.setRange(10, 150);\n\t\t}\n\t\tif (['venoshock', 'barbbarrage'].includes(move.id) && target) {\n\t\t\tif (['psn', 'tox'].includes(target.status)) {\n\t\t\t\tvalue.modify(2, move.name + ' + Poison');\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'wakeupslap' && target) {\n\t\t\tif (target.status === 'slp') {\n\t\t\t\tvalue.modify(2, 'Wake-Up Slap + Sleep');\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'weatherball') {\n\t\t\tif (this.battle.weather !== 'deltastream') {\n\t\t\t\tvalue.weatherModify(2);\n\t\t\t}\n\t\t}\n\t\tif (move.id === 'terrainpulse' && pokemon.isGrounded(serverPokemon)) {\n\t\t\tif (\n\t\t\t\tthis.battle.hasPseudoWeather('Electric Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Misty Terrain') ||\n\t\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain')\n\t\t\t) {\n\t\t\t\tvalue.modify(2, 'Terrain Pulse boost');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'watershuriken' && pokemon.getSpeciesForme() === 'Greninja-Ash' && pokemon.ability === 'Battle Bond'\n\t\t) {\n\t\t\tvalue.set(20, 'Battle Bond');\n\t\t}\n\t\t// Moves that check opponent speed\n\t\tif (move.id === 'electroball' && target) {\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\n\t\t\tlet minRatio = (modifiedStats.spe / maxSpe);\n\t\t\tlet maxRatio = (modifiedStats.spe / minSpe);\n\t\t\tlet min;\n\t\t\tlet max;\n\n\t\t\tif (minRatio >= 4) min = 150;\n\t\t\telse if (minRatio >= 3) min = 120;\n\t\t\telse if (minRatio >= 2) min = 80;\n\t\t\telse if (minRatio >= 1) min = 60;\n\t\t\telse min = 40;\n\n\t\t\tif (maxRatio >= 4) max = 150;\n\t\t\telse if (maxRatio >= 3) max = 120;\n\t\t\telse if (maxRatio >= 2) max = 80;\n\t\t\telse if (maxRatio >= 1) max = 60;\n\t\t\telse max = 40;\n\n\t\t\tvalue.setRange(min, max);\n\t\t}\n\t\tif (move.id === 'gyroball' && target) {\n\t\t\tlet [minSpe, maxSpe] = this.getSpeedRange(target);\n\t\t\tlet min = (Math.floor(25 * minSpe / modifiedStats.spe) || 1);\n\t\t\tif (min > 150) min = 150;\n\t\t\tlet max = (Math.floor(25 * maxSpe / modifiedStats.spe) || 1);\n\t\t\tif (max > 150) max = 150;\n\t\t\tvalue.setRange(min, max);\n\t\t}\n\t\t// Moves which have base power changed due to items\n\t\tif (serverPokemon.item) {\n\t\t\tlet item = Dex.items.get(serverPokemon.item);\n\t\t\tif (move.id === 'fling' && item.fling) {\n\t\t\t\tvalue.itemModify(item.fling.basePower);\n\t\t\t}\n\t\t\tif (move.id === 'naturalgift') {\n\t\t\t\tvalue.itemModify(item.naturalGift.basePower);\n\t\t\t}\n\t\t}\n\t\t// Moves which have base power changed according to weight\n\t\tif (['lowkick', 'grassknot', 'heavyslam', 'heatcrash'].includes(move.id)) {\n\t\t\tlet isGKLK = ['lowkick', 'grassknot'].includes(move.id);\n\t\t\tif (target) {\n\t\t\t\tlet targetWeight = target.getWeightKg();\n\t\t\t\tlet pokemonWeight = pokemon.getWeightKg(serverPokemon);\n\t\t\t\tlet basePower;\n\t\t\t\tif (isGKLK) {\n\t\t\t\t\tbasePower = 20;\n\t\t\t\t\tif (targetWeight >= 200) basePower = 120;\n\t\t\t\t\telse if (targetWeight >= 100) basePower = 100;\n\t\t\t\t\telse if (targetWeight >= 50) basePower = 80;\n\t\t\t\t\telse if (targetWeight >= 25) basePower = 60;\n\t\t\t\t\telse if (targetWeight >= 10) basePower = 40;\n\t\t\t\t} else {\n\t\t\t\t\tbasePower = 40;\n\t\t\t\t\tif (pokemonWeight >= targetWeight * 5) basePower = 120;\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 4) basePower = 100;\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 3) basePower = 80;\n\t\t\t\t\telse if (pokemonWeight >= targetWeight * 2) basePower = 60;\n\t\t\t\t}\n\t\t\t\tif (target.volatiles['dynamax']) {\n\t\t\t\t\tvalue.set(0, 'blocked by target\\'s Dynamax');\n\t\t\t\t} else {\n\t\t\t\t\tvalue.set(basePower);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvalue.setRange(isGKLK ? 20 : 40, 120);\n\t\t\t}\n\t\t}\n\t\t// Base power based on times hit\n\t\tif (move.id === 'ragefist') {\n\t\t\tvalue.set(Math.min(350, 50 + 50 * pokemon.timesAttacked),\n\t\t\t\tpokemon.timesAttacked > 0\n\t\t\t\t\t? `Hit ${pokemon.timesAttacked} time${pokemon.timesAttacked > 1 ? 's' : ''}`\n\t\t\t\t\t: undefined);\n\t\t}\n\t\tif (!value.value) return value;\n\n\t\t// Other ability boosts\n\t\tif (pokemon.status === 'brn' && move.category === 'Special') {\n\t\t\tvalue.abilityModify(1.5, \"Flare Boost\");\n\t\t}\n\t\tif (move.flags['punch']) {\n\t\t\tvalue.abilityModify(1.2, 'Iron Fist');\n\t\t}\n\t\tif (move.flags['pulse']) {\n\t\t\tvalue.abilityModify(1.5, \"Mega Launcher\");\n\t\t}\n\t\tif (move.flags['bite']) {\n\t\t\tvalue.abilityModify(1.5, \"Strong Jaw\");\n\t\t}\n\t\tif (value.value <= 60) {\n\t\t\tvalue.abilityModify(1.5, \"Technician\");\n\t\t}\n\t\tif (['psn', 'tox'].includes(pokemon.status) && move.category === 'Physical') {\n\t\t\tvalue.abilityModify(1.5, \"Toxic Boost\");\n\t\t}\n\t\tif (this.battle.gen > 2 && serverPokemon.status === 'brn' && move.id !== 'facade' && move.category === 'Physical') {\n\t\t\tif (!value.tryAbility(\"Guts\")) value.modify(0.5, 'Burn');\n\t\t}\n\t\tif (['Rock', 'Ground', 'Steel'].includes(moveType) && this.battle.weather === 'sandstorm') {\n\t\t\tif (value.tryAbility(\"Sand Force\")) value.weatherModify(1.3, \"Sandstorm\", \"Sand Force\");\n\t\t}\n\t\tif (move.secondaries) {\n\t\t\tvalue.abilityModify(1.3, \"Sheer Force\");\n\t\t}\n\t\tif (move.flags['contact']) {\n\t\t\tvalue.abilityModify(1.3, \"Tough Claws\");\n\t\t}\n\t\tif (moveType === 'Steel') {\n\t\t\tvalue.abilityModify(1.5, \"Steely Spirit\");\n\t\t}\n\t\tif (move.flags['sound']) {\n\t\t\tvalue.abilityModify(1.3, \"Punk Rock\");\n\t\t}\n\t\tif (move.flags['slicing']) {\n\t\t\tvalue.abilityModify(1.5, \"Sharpness\");\n\t\t}\n\t\tfor (let i = 1; i <= 5 && i <= pokemon.side.faintCounter; i++) {\n\t\t\tif (pokemon.volatiles[`fallen${i}`]) {\n\t\t\t\tvalue.abilityModify(1 + 0.1 * i, \"Supreme Overlord\");\n\t\t\t}\n\t\t}\n\t\tif (target) {\n\t\t\tif ([\"MF\", \"FM\"].includes(pokemon.gender + target.gender)) {\n\t\t\t\tvalue.abilityModify(0.75, \"Rivalry\");\n\t\t\t} else if ([\"MM\", \"FF\"].includes(pokemon.gender + target.gender)) {\n\t\t\t\tvalue.abilityModify(1.25, \"Rivalry\");\n\t\t\t}\n\t\t}\n\t\tconst noTypeOverride = [\n\t\t\t'judgment', 'multiattack', 'naturalgift', 'revelationdance', 'struggle', 'technoblast', 'terablast', 'terrainpulse', 'weatherball',\n\t\t];\n\t\tif (\n\t\t\tmove.category !== 'Status' && !noTypeOverride.includes(move.id) && !move.isZ && !move.isMax &&\n\t\t\t!move.id.startsWith('hiddenpower')\n\t\t) {\n\t\t\tif (move.type === 'Normal') {\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Aerilate\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Galvanize\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Pixilate\");\n\t\t\t\tvalue.abilityModify(this.battle.gen > 6 ? 1.2 : 1.3, \"Refrigerate\");\n\t\t\t}\n\t\t\tif (this.battle.gen > 6) {\n\t\t\t\tvalue.abilityModify(1.2, \"Normalize\");\n\t\t\t}\n\t\t}\n\t\tif (move.recoil || move.hasCrashDamage) {\n\t\t\tvalue.abilityModify(1.2, 'Reckless');\n\t\t}\n\n\t\tif (move.category !== 'Status') {\n\t\t\tlet auraBoosted = '';\n\t\t\tlet auraBroken = false;\n\t\t\tfor (const ally of pokemon.side.active) {\n\t\t\t\tif (!ally || ally.fainted) continue;\n\t\t\t\tlet allyAbility = this.getAllyAbility(ally);\n\t\t\t\tif (moveType === 'Fairy' && allyAbility === 'Fairy Aura') {\n\t\t\t\t\tauraBoosted = 'Fairy Aura';\n\t\t\t\t} else if (moveType === 'Dark' && allyAbility === 'Dark Aura') {\n\t\t\t\t\tauraBoosted = 'Dark Aura';\n\t\t\t\t} else if (allyAbility === 'Aura Break') {\n\t\t\t\t\tauraBroken = true;\n\t\t\t\t} else if (allyAbility === 'Battery') {\n\t\t\t\t\tif (ally !== pokemon && move.category === 'Special') {\n\t\t\t\t\t\tvalue.modify(1.3, 'Battery');\n\t\t\t\t\t}\n\t\t\t\t} else if (allyAbility === 'Power Spot') {\n\t\t\t\t\tif (ally !== pokemon) {\n\t\t\t\t\t\tvalue.modify(1.3, 'Power Spot');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const foe of pokemon.side.foe.active) {\n\t\t\t\tif (!foe || foe.fainted) continue;\n\t\t\t\tif (foe.ability === 'Fairy Aura') {\n\t\t\t\t\tif (moveType === 'Fairy') auraBoosted = 'Fairy Aura';\n\t\t\t\t} else if (foe.ability === 'Dark Aura') {\n\t\t\t\t\tif (moveType === 'Dark') auraBoosted = 'Dark Aura';\n\t\t\t\t} else if (foe.ability === 'Aura Break') {\n\t\t\t\t\tauraBroken = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (auraBoosted) {\n\t\t\t\tif (auraBroken) {\n\t\t\t\t\tvalue.modify(0.75, auraBoosted + ' + Aura Break');\n\t\t\t\t} else {\n\t\t\t\t\tvalue.modify(1.33, auraBoosted);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Terrain\n\t\tif ((this.battle.hasPseudoWeather('Electric Terrain') && moveType === 'Electric') ||\n\t\t\t(this.battle.hasPseudoWeather('Grassy Terrain') && moveType === 'Grass') ||\n\t\t\t(this.battle.hasPseudoWeather('Psychic Terrain') && moveType === 'Psychic')) {\n\t\t\tif (pokemon.isGrounded(serverPokemon)) {\n\t\t\t\tvalue.modify(this.battle.gen > 7 ? 1.3 : 1.5, 'Terrain boost');\n\t\t\t}\n\t\t} else if (this.battle.hasPseudoWeather('Misty Terrain') && moveType === 'Dragon') {\n\t\t\tif (target ? target.isGrounded() : true) {\n\t\t\t\tvalue.modify(0.5, 'Misty Terrain + grounded target');\n\t\t\t}\n\t\t} else if (\n\t\t\tthis.battle.hasPseudoWeather('Grassy Terrain') && ['earthquake', 'bulldoze', 'magnitude'].includes(move.id)\n\t\t) {\n\t\t\tif (target ? target.isGrounded() : true) {\n\t\t\t\tvalue.modify(0.5, 'Grassy Terrain + grounded target');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'expandingforce' &&\n\t\t\tthis.battle.hasPseudoWeather('Psychic Terrain') &&\n\t\t\tpokemon.isGrounded(serverPokemon)\n\t\t) {\n\t\t\tvalue.modify(1.5, 'Expanding Force + Psychic Terrain boost');\n\t\t}\n\t\tif (move.id === 'mistyexplosion' && this.battle.hasPseudoWeather('Misty Terrain')) {\n\t\t\tvalue.modify(1.5, 'Misty Explosion + Misty Terrain boost');\n\t\t}\n\t\tif (move.id === 'risingvoltage' && this.battle.hasPseudoWeather('Electric Terrain') && target?.isGrounded()) {\n\t\t\tvalue.modify(2, 'Rising Voltage + Electric Terrain boost');\n\t\t}\n\t\tif (\n\t\t\tmove.id === 'steelroller' &&\n\t\t\t!this.battle.hasPseudoWeather('Electric Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Grassy Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Misty Terrain') &&\n\t\t\t!this.battle.hasPseudoWeather('Psychic Terrain')\n\t\t) {\n\t\t\tvalue.set(0, 'no Terrain');\n\t\t}\n\n\t\t// Item\n\t\tvalue = this.getItemBoost(move, value, moveType);\n\n\t\treturn value;\n\t}\n\n\tstatic incenseTypes: {[itemName: string]: TypeName} = {\n\t\t'Odd Incense': 'Psychic',\n\t\t'Rock Incense': 'Rock',\n\t\t'Rose Incense': 'Grass',\n\t\t'Sea Incense': 'Water',\n\t\t'Wave Incense': 'Water',\n\t};\n\tstatic itemTypes: {[itemName: string]: TypeName} = {\n\t\t'Black Belt': 'Fighting',\n\t\t'Black Glasses': 'Dark',\n\t\t'Charcoal': 'Fire',\n\t\t'Dragon Fang': 'Dragon',\n\t\t'Hard Stone': 'Rock',\n\t\t'Magnet': 'Electric',\n\t\t'Metal Coat': 'Steel',\n\t\t'Miracle Seed': 'Grass',\n\t\t'Mystic Water': 'Water',\n\t\t'Never-Melt Ice': 'Ice',\n\t\t'Poison Barb': 'Poison',\n\t\t'Sharp Beak': 'Flying',\n\t\t'Silk Scarf': 'Normal',\n\t\t'Silver Powder': 'Bug',\n\t\t'Soft Sand': 'Ground',\n\t\t'Spell Tag': 'Ghost',\n\t\t'Twisted Spoon': 'Psychic',\n\t};\n\tstatic orbUsers: {[speciesForme: string]: string} = {\n\t\t'Latias': 'Soul Dew',\n\t\t'Latios': 'Soul Dew',\n\t\t'Dialga': 'Adamant Orb',\n\t\t'Palkia': 'Lustrous Orb',\n\t\t'Giratina': 'Griseous Orb',\n\t};\n\tstatic orbTypes: {[itemName: string]: TypeName} = {\n\t\t'Soul Dew': 'Psychic',\n\t\t'Adamant Orb': 'Steel',\n\t\t'Lustrous Orb': 'Water',\n\t\t'Griseous Orb': 'Ghost',\n\t};\n\tstatic noGemMoves = [\n\t\t'Fire Pledge',\n\t\t'Fling',\n\t\t'Grass Pledge',\n\t\t'Struggle',\n\t\t'Water Pledge',\n\t];\n\tgetItemBoost(move: Move, value: ModifiableValue, moveType: TypeName) {\n\t\tlet item = this.battle.dex.items.get(value.serverPokemon.item);\n\t\tlet itemName = item.name;\n\t\tlet moveName = move.name;\n\t\tlet species = this.battle.dex.species.get(value.serverPokemon.speciesForme);\n\t\tlet isTransform = value.pokemon.volatiles.transform;\n\t\tlet speciesName = isTransform && value.pokemon.volatiles.formechange?.[1] && this.battle.gen <= 4 ?\n\t\t\tthis.battle.dex.species.get(value.pokemon.volatiles.formechange[1]).baseSpecies : species.baseSpecies;\n\n\t\t// Plates\n\t\tif (item.onPlate === moveType && !item.zMove) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Incenses\n\t\tif (BattleTooltips.incenseTypes[item.name] === moveType) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Type-enhancing items\n\t\tif (BattleTooltips.itemTypes[item.name] === moveType) {\n\t\t\tvalue.itemModify(this.battle.gen < 4 ? 1.1 : 1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Light ball is a base power modifier in gen 4 only\n\t\tif (item.name === 'Light Ball' && this.battle.gen === 4 && speciesName === 'Pikachu') {\n\t\t\tvalue.itemModify(2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Pokemon-specific items\n\t\tif (item.name === 'Soul Dew' && this.battle.gen < 7) return value;\n\t\tif (BattleTooltips.orbUsers[speciesName] === item.name &&\n\t\t\t[BattleTooltips.orbTypes[item.name], 'Dragon'].includes(moveType)) {\n\t\t\tvalue.itemModify(1.2);\n\t\t\treturn value;\n\t\t}\n\n\t\t// Gems\n\t\tif (BattleTooltips.noGemMoves.includes(moveName)) return value;\n\t\tif (itemName === moveType + ' Gem') {\n\t\t\tvalue.itemModify(this.battle.gen < 6 ? 1.5 : 1.3);\n\t\t\treturn value;\n\t\t}\n\n\t\tif (itemName === 'Punching Glove' && move.flags['punch']) {\n\t\t\tvalue.itemModify(1.1);\n\t\t}\n\n\t\treturn value;\n\t}\n\tgetPokemonTypes(pokemon: Pokemon | ServerPokemon): ReadonlyArray<TypeName> {\n\t\tif (!(pokemon as Pokemon).getTypes) {\n\t\t\treturn this.battle.dex.species.get(pokemon.speciesForme).types;\n\t\t}\n\n\t\treturn (pokemon as Pokemon).getTypeList();\n\t}\n\tpokemonHasType(pokemon: Pokemon | ServerPokemon, type: TypeName, types?: ReadonlyArray<TypeName>) {\n\t\tif (!types) types = this.getPokemonTypes(pokemon);\n\t\tfor (const curType of types) {\n\t\t\tif (curType === type) return true;\n\t\t}\n\t\treturn false;\n\t}\n\tgetAllyAbility(ally: Pokemon) {\n\t\t// this will only be available if the ability announced itself in some way\n\t\tlet allyAbility = Dex.abilities.get(ally.ability).name;\n\t\t// otherwise fall back on the original set data sent from the server\n\t\tif (!allyAbility) {\n\t\t\tif (this.battle.myAllyPokemon) { // multi battle ally\n\t\t\t\tallyAbility = Dex.abilities.get(this.battle.myAllyPokemon[ally.slot].ability).name;\n\t\t\t} else if (this.battle.myPokemon) {\n\t\t\t\tallyAbility = Dex.abilities.get(this.battle.myPokemon[ally.slot].ability).name;\n\t\t\t}\n\t\t}\n\t\treturn allyAbility;\n\t}\n\tgetPokemonAbilityData(clientPokemon: Pokemon | null, serverPokemon: ServerPokemon | null | undefined) {\n\t\tconst abilityData: {ability: string, baseAbility: string, possibilities: string[]} = {\n\t\t\tability: '', baseAbility: '', possibilities: [],\n\t\t};\n\t\tif (clientPokemon) {\n\t\t\tif (clientPokemon.ability) {\n\t\t\t\tabilityData.ability = clientPokemon.ability || clientPokemon.baseAbility;\n\t\t\t\tif (clientPokemon.baseAbility) {\n\t\t\t\t\tabilityData.baseAbility = clientPokemon.baseAbility;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst speciesForme = clientPokemon.getSpeciesForme() || serverPokemon?.speciesForme || '';\n\t\t\t\tconst species = this.battle.dex.species.get(speciesForme);\n\t\t\t\tif (species.exists && species.abilities) {\n\t\t\t\t\tabilityData.possibilities = [species.abilities['0']];\n\t\t\t\t\tif (species.abilities['1']) abilityData.possibilities.push(species.abilities['1']);\n\t\t\t\t\tif (species.abilities['H']) abilityData.possibilities.push(species.abilities['H']);\n\t\t\t\t\tif (species.abilities['S']) abilityData.possibilities.push(species.abilities['S']);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (serverPokemon) {\n\t\t\tif (!abilityData.ability) abilityData.ability = serverPokemon.ability || serverPokemon.baseAbility;\n\t\t\tif (!abilityData.baseAbility && serverPokemon.baseAbility) {\n\t\t\t\tabilityData.baseAbility = serverPokemon.baseAbility;\n\t\t\t}\n\t\t}\n\t\treturn abilityData;\n\t}\n\tgetPokemonAbilityText(\n\t\tclientPokemon: Pokemon | null,\n\t\tserverPokemon: ServerPokemon | null | undefined,\n\t\tisActive: boolean | undefined,\n\t\thidePossible?: boolean\n\t) {\n\t\tlet text = '';\n\t\tconst abilityData = this.getPokemonAbilityData(clientPokemon, serverPokemon);\n\t\tif (!isActive) {\n\t\t\t// for switch tooltips, only show the original ability\n\t\t\tconst ability = abilityData.baseAbility || abilityData.ability;\n\t\t\tif (ability) text = '<small>Ability:</small> ' + Dex.abilities.get(ability).name;\n\t\t} else {\n\t\t\tif (abilityData.ability) {\n\t\t\t\tconst abilityName = Dex.abilities.get(abilityData.ability).name;\n\t\t\t\ttext = '<small>Ability:</small> ' + abilityName;\n\t\t\t\tconst baseAbilityName = Dex.abilities.get(abilityData.baseAbility).name;\n\t\t\t\tif (baseAbilityName && baseAbilityName !== abilityName) text += ' (base: ' + baseAbilityName + ')';\n\t\t\t}\n\t\t}\n\t\tif (!text && abilityData.possibilities.length && !hidePossible) {\n\t\t\ttext = '<small>Possible abilities:</small> ' + abilityData.possibilities.join(', ');\n\t\t}\n\t\treturn text;\n\t}\n}\n\ntype StatsTable = {hp: number, atk: number, def: number, spa: number, spd: number, spe: number};\n\n/**\n * PokemonSet can be sparse, in which case that entry should be\n * inferred from the rest of the set, according to sensible\n * defaults.\n */\ninterface PokemonSet {\n\t/** Defaults to species name (not including forme), like in games */\n\tname?: string;\n\tspecies: string;\n\t/** Defaults to no item */\n\titem?: string;\n\t/** Defaults to no ability (error in Gen 3+) */\n\tability?: string;\n\tmoves: string[];\n\t/** Defaults to no nature (error in Gen 3+) */\n\tnature?: NatureName;\n\t/** Defaults to random legal gender, NOT subject to gender ratios */\n\tgender?: string;\n\t/** Defaults to flat 252's (200's/0's in Let's Go) (error in gen 3+) */\n\tevs?: StatsTable;\n\t/** Defaults to whatever makes sense - flat 31's unless you have Gyro Ball etc */\n\tivs?: StatsTable;\n\t/** Defaults as you'd expect (100 normally, 50 in VGC-likes, 5 in LC) */\n\tlevel?: number;\n\t/** Defaults to no (error if shiny event) */\n\tshiny?: boolean;\n\t/** Defaults to 255 unless you have Frustration, in which case 0 */\n\thappiness?: number;\n\t/** Defaults to event required ball, otherwise Poké Ball */\n\tpokeball?: string;\n\t/** Defaults to the type of your Hidden Power in Moves, otherwise Dark */\n\thpType?: string;\n\t/** Defaults to 10 */\n\tdynamaxLevel?: number;\n\t/** Defaults to no (can only be yes for certain Pokemon) */\n\tgigantamax?: boolean;\n\t/** Defaults to the primary type */\n\tteraType?: string;\n}\n\nclass BattleStatGuesser {\n\tformatid: ID;\n\tdex: ModdedDex;\n\tmoveCount: any = null;\n\thasMove: any = null;\n\n\tignoreEVLimits: boolean;\n\tsupportsEVs: boolean;\n\tsupportsAVs: boolean;\n\n\tconstructor(formatid: ID) {\n\t\tthis.formatid = formatid;\n\t\tthis.dex = formatid ? Dex.mod(formatid.slice(0, 4) as ID) : Dex;\n\t\tthis.ignoreEVLimits = (\n\t\t\tthis.dex.gen < 3 ||\n\t\t\t(this.formatid.endsWith('hackmons') && this.dex.gen !== 6) ||\n\t\t\tthis.formatid.includes('metronomebattle') ||\n\t\t\tthis.formatid.endsWith('norestrictions')\n\t\t);\n\t\tthis.supportsEVs = !this.formatid.includes('letsgo');\n\t\tthis.supportsAVs = !this.supportsEVs && this.formatid.endsWith('norestrictions');\n\t}\n\tguess(set: PokemonSet) {\n\t\tlet role = this.guessRole(set);\n\t\tlet comboEVs = this.guessEVs(set, role);\n\t\tlet evs = {hp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0};\n\t\tfor (let stat in evs) {\n\t\t\tevs[stat as StatName] = comboEVs[stat as StatName] || 0;\n\t\t}\n\t\tlet plusStat = comboEVs.plusStat || '';\n\t\tlet minusStat = comboEVs.minusStat || '';\n\t\treturn {role, evs, plusStat, minusStat, moveCount: this.moveCount, hasMove: this.hasMove};\n\t}\n\tguessRole(set: PokemonSet) {\n\t\tif (!set) return '?';\n\t\tif (!set.moves) return '?';\n\n\t\tlet moveCount = {\n\t\t\t'Physical': 0,\n\t\t\t'Special': 0,\n\t\t\t'PhysicalAttack': 0,\n\t\t\t'SpecialAttack': 0,\n\t\t\t'PhysicalSetup': 0,\n\t\t\t'SpecialSetup': 0,\n\t\t\t'Support': 0,\n\t\t\t'Setup': 0,\n\t\t\t'Restoration': 0,\n\t\t\t'Offense': 0,\n\t\t\t'Stall': 0,\n\t\t\t'SpecialStall': 0,\n\t\t\t'PhysicalStall': 0,\n\t\t\t'Fast': 0,\n\t\t\t'Ultrafast': 0,\n\t\t\t'bulk': 0,\n\t\t\t'specialBulk': 0,\n\t\t\t'physicalBulk': 0,\n\t\t};\n\t\tlet hasMove: {[moveid: string]: 1} = {};\n\t\tlet itemid = toID(set.item);\n\t\tlet item = this.dex.items.get(itemid);\n\t\tlet abilityid = toID(set.ability);\n\n\t\tlet species = this.dex.species.get(set.species || set.name!);\n\t\tif (item.megaEvolves === species.name) species = this.dex.species.get(item.megaStone);\n\t\tif (!species.exists) return '?';\n\t\tlet stats = species.baseStats;\n\n\t\tif (set.moves.length < 1) return '?';\n\t\tlet needsFourMoves = !['unown', 'ditto'].includes(species.id);\n\t\tlet moveids = set.moves.map(toID);\n\t\tif (moveids.includes('lastresort' as ID)) needsFourMoves = false;\n\t\tif (set.moves.length < 4 && needsFourMoves && !this.formatid.includes('metronomebattle')) {\n\t\t\treturn '?';\n\t\t}\n\n\t\tfor (let i = 0, len = set.moves.length; i < len; i++) {\n\t\t\tlet move = this.dex.moves.get(set.moves[i]);\n\t\t\thasMove[move.id] = 1;\n\t\t\tif (move.category === 'Status') {\n\t\t\t\tif (['batonpass', 'healingwish', 'lunardance'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t} else if (['metronome', 'assist', 'copycat', 'mefirst', 'photongeyser', 'shellsidearm'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Physical'] += 0.5;\n\t\t\t\t\tmoveCount['Special'] += 0.5;\n\t\t\t\t} else if (move.id === 'naturepower') {\n\t\t\t\t\tmoveCount['Special']++;\n\t\t\t\t} else if (['protect', 'detect', 'spikyshield', 'kingsshield'].includes(move.id)) {\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t} else if (move.id === 'wish') {\n\t\t\t\t\tmoveCount['Restoration']++;\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t} else if (move.heal) {\n\t\t\t\t\tmoveCount['Restoration']++;\n\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t} else if (move.target === 'self') {\n\t\t\t\t\tif (['agility', 'rockpolish', 'shellsmash', 'growth', 'workup'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\n\t\t\t\t\t} else if (['dragondance', 'swordsdance', 'coil', 'bulkup', 'curse', 'bellydrum'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\t\t} else if (['nastyplot', 'tailglow', 'quiverdance', 'calmmind', 'geomancy'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['SpecialSetup']++;\n\t\t\t\t\t}\n\t\t\t\t\tif (move.id === 'substitute') moveCount['Stall']++;\n\t\t\t\t\tmoveCount['Setup']++;\n\t\t\t\t} else {\n\t\t\t\t\tif (['toxic', 'leechseed', 'willowisp'].includes(move.id)) {\n\t\t\t\t\t\tmoveCount['Stall']++;\n\t\t\t\t\t}\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t}\n\t\t\t} else if (['counter', 'endeavor', 'metalburst', 'mirrorcoat', 'rapidspin'].includes(move.id)) {\n\t\t\t\tmoveCount['Support']++;\n\t\t\t} else if ([\n\t\t\t\t'nightshade', 'seismictoss', 'psywave', 'superfang', 'naturesmadness', 'foulplay', 'endeavor', 'finalgambit', 'bodypress',\n\t\t\t].includes(move.id)) {\n\t\t\t\tmoveCount['Offense']++;\n\t\t\t} else if (move.id === 'fellstinger') {\n\t\t\t\tmoveCount['PhysicalSetup']++;\n\t\t\t\tmoveCount['Setup']++;\n\t\t\t} else {\n\t\t\t\tmoveCount[move.category]++;\n\t\t\t\tmoveCount['Offense']++;\n\t\t\t\tif (move.id === 'knockoff') {\n\t\t\t\t\tmoveCount['Support']++;\n\t\t\t\t}\n\t\t\t\tif (['scald', 'voltswitch', 'uturn', 'flipturn'].includes(move.id)) {\n\t\t\t\t\tmoveCount[move.category] -= 0.2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (hasMove['batonpass']) moveCount['Support'] += moveCount['Setup'];\n\t\tmoveCount['PhysicalAttack'] = moveCount['Physical'];\n\t\tmoveCount['Physical'] += moveCount['PhysicalSetup'];\n\t\tmoveCount['SpecialAttack'] = moveCount['Special'];\n\t\tmoveCount['Special'] += moveCount['SpecialSetup'];\n\n\t\tif (hasMove['dragondance'] || hasMove['quiverdance']) moveCount['Ultrafast'] = 1;\n\n\t\tlet isFast = (stats.spe >= 80);\n\t\tlet physicalBulk = (stats.hp + 75) * (stats.def + 87);\n\t\tlet specialBulk = (stats.hp + 75) * (stats.spd + 87);\n\n\t\tif (hasMove['willowisp'] || hasMove['acidarmor'] || hasMove['irondefense'] || hasMove['cottonguard']) {\n\t\t\tphysicalBulk *= 1.6;\n\t\t\tmoveCount['PhysicalStall']++;\n\t\t} else if (hasMove['scald'] || hasMove['bulkup'] || hasMove['coil'] || hasMove['cosmicpower']) {\n\t\t\tphysicalBulk *= 1.3;\n\t\t\tif (hasMove['scald']) { // partial stall goes in reverse\n\t\t\t\tmoveCount['SpecialStall']++;\n\t\t\t} else {\n\t\t\t\tmoveCount['PhysicalStall']++;\n\t\t\t}\n\t\t}\n\t\tif (abilityid === 'flamebody') physicalBulk *= 1.1;\n\n\t\tif (hasMove['calmmind'] || hasMove['quiverdance'] || hasMove['geomancy']) {\n\t\t\tspecialBulk *= 1.3;\n\t\t\tmoveCount['SpecialStall']++;\n\t\t}\n\t\tif (abilityid === 'sandstream' && species.types.includes('Rock')) {\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\n\t\tif (hasMove['bellydrum']) {\n\t\t\tphysicalBulk *= 0.6;\n\t\t\tspecialBulk *= 0.6;\n\t\t}\n\t\tif (moveCount['Restoration']) {\n\t\t\tphysicalBulk *= 1.5;\n\t\t\tspecialBulk *= 1.5;\n\t\t} else if (hasMove['painsplit'] && hasMove['substitute']) {\n\t\t\t// SubSplit isn't generally a stall set\n\t\t\tmoveCount['Stall']--;\n\t\t} else if (hasMove['painsplit'] || hasMove['rest']) {\n\t\t\tphysicalBulk *= 1.4;\n\t\t\tspecialBulk *= 1.4;\n\t\t}\n\t\tif ((hasMove['bodyslam'] || hasMove['thunder']) && abilityid === 'serenegrace' || hasMove['thunderwave']) {\n\t\t\tphysicalBulk *= 1.1;\n\t\t\tspecialBulk *= 1.1;\n\t\t}\n\t\tif ((hasMove['ironhead'] || hasMove['airslash']) && abilityid === 'serenegrace') {\n\t\t\tphysicalBulk *= 1.1;\n\t\t\tspecialBulk *= 1.1;\n\t\t}\n\t\tif (hasMove['gigadrain'] || hasMove['drainpunch'] || hasMove['hornleech']) {\n\t\t\tphysicalBulk *= 1.15;\n\t\t\tspecialBulk *= 1.15;\n\t\t}\n\t\tif (itemid === 'leftovers' || itemid === 'blacksludge') {\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t}\n\t\tif (hasMove['leechseed']) {\n\t\t\tphysicalBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t\tspecialBulk *= 1 + 0.1 * (1 + moveCount['Stall'] / 1.5);\n\t\t}\n\t\tif ((itemid === 'flameorb' || itemid === 'toxicorb') && abilityid !== 'magicguard') {\n\t\t\tif (itemid === 'toxicorb' && abilityid === 'poisonheal') {\n\t\t\t\tphysicalBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\n\t\t\t\tspecialBulk *= 1 + 0.1 * (2 + moveCount['Stall']);\n\t\t\t} else {\n\t\t\t\tphysicalBulk *= 0.8;\n\t\t\t\tspecialBulk *= 0.8;\n\t\t\t}\n\t\t}\n\t\tif (itemid === 'lifeorb') {\n\t\t\tphysicalBulk *= 0.7;\n\t\t\tspecialBulk *= 0.7;\n\t\t}\n\t\tif (abilityid === 'multiscale' || abilityid === 'magicguard' || abilityid === 'regenerator') {\n\t\t\tphysicalBulk *= 1.4;\n\t\t\tspecialBulk *= 1.4;\n\t\t}\n\t\tif (itemid === 'eviolite') {\n\t\t\tphysicalBulk *= 1.5;\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\t\tif (itemid === 'assaultvest') {\n\t\t\tspecialBulk *= 1.5;\n\t\t}\n\n\t\tlet bulk = physicalBulk + specialBulk;\n\t\tif (bulk < 46000 && stats.spe >= 70) isFast = true;\n\t\tif (hasMove['trickroom']) isFast = false;\n\t\tmoveCount['bulk'] = bulk;\n\t\tmoveCount['physicalBulk'] = physicalBulk;\n\t\tmoveCount['specialBulk'] = specialBulk;\n\n\t\tif (\n\t\t\thasMove['agility'] || hasMove['dragondance'] || hasMove['quiverdance'] ||\n\t\t\thasMove['rockpolish'] || hasMove['shellsmash'] || hasMove['flamecharge']\n\t\t) {\n\t\t\tisFast = true;\n\t\t} else if (abilityid === 'unburden' || abilityid === 'speedboost' || abilityid === 'motordrive') {\n\t\t\tisFast = true;\n\t\t\tmoveCount['Ultrafast'] = 1;\n\t\t} else if (abilityid === 'chlorophyll' || abilityid === 'swiftswim' || abilityid === 'sandrush') {\n\t\t\tisFast = true;\n\t\t\tmoveCount['Ultrafast'] = 2;\n\t\t} else if (itemid === 'salacberry') {\n\t\t\tisFast = true;\n\t\t}\n\t\tconst ultrafast = hasMove['agility'] || hasMove['shellsmash'] ||\n\t\t\thasMove['autotomize'] || hasMove['shiftgear'] || hasMove['rockpolish'];\n\t\tif (ultrafast) {\n\t\t\tmoveCount['Ultrafast'] = 2;\n\t\t}\n\t\tmoveCount['Fast'] = isFast ? 1 : 0;\n\n\t\tthis.moveCount = moveCount;\n\t\tthis.hasMove = hasMove;\n\n\t\tif (species.id === 'ditto') return abilityid === 'imposter' ? 'Physically Defensive' : 'Fast Bulky Support';\n\t\tif (species.id === 'shedinja') return 'Fast Physical Sweeper';\n\n\t\tif (itemid === 'choiceband' && moveCount['PhysicalAttack'] >= 2) {\n\t\t\tif (!isFast) return 'Bulky Band';\n\t\t\treturn 'Fast Band';\n\t\t} else if (itemid === 'choicespecs' && moveCount['SpecialAttack'] >= 2) {\n\t\t\tif (!isFast) return 'Bulky Specs';\n\t\t\treturn 'Fast Specs';\n\t\t} else if (itemid === 'choicescarf') {\n\t\t\tif (moveCount['PhysicalAttack'] === 0) return 'Special Scarf';\n\t\t\tif (moveCount['SpecialAttack'] === 0) return 'Physical Scarf';\n\t\t\tif (moveCount['PhysicalAttack'] > moveCount['SpecialAttack']) return 'Physical Biased Mixed Scarf';\n\t\t\tif (moveCount['PhysicalAttack'] < moveCount['SpecialAttack']) return 'Special Biased Mixed Scarf';\n\t\t\tif (stats.atk < stats.spa) return 'Special Biased Mixed Scarf';\n\t\t\treturn 'Physical Biased Mixed Scarf';\n\t\t}\n\n\t\tif (species.id === 'unown') return 'Fast Special Sweeper';\n\n\t\tif (moveCount['PhysicalStall'] && moveCount['Restoration']) {\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\n\t\t\treturn 'Specially Defensive';\n\t\t}\n\t\tif (moveCount['SpecialStall'] && moveCount['Restoration'] && itemid !== 'lifeorb') {\n\t\t\tif (stats.spe > 110 && abilityid !== 'prankster') return 'Fast Bulky Support';\n\t\t\treturn 'Physically Defensive';\n\t\t}\n\n\t\tlet offenseBias: 'Physical' | 'Special' = 'Physical';\n\t\tif (stats.spa > stats.atk && moveCount['Special'] > 1) offenseBias = 'Special';\n\t\telse if (stats.atk > stats.spa && moveCount['Physical'] > 1) offenseBias = 'Physical';\n\t\telse if (moveCount['Special'] > moveCount['Physical']) offenseBias = 'Special';\n\n\t\tif (moveCount['Stall'] + moveCount['Support'] / 2 <= 2 && bulk < 135000 && moveCount[offenseBias] >= 1.5) {\n\t\t\tif (isFast) {\n\t\t\t\tif (bulk > 80000 && !moveCount['Ultrafast']) return 'Bulky ' + offenseBias + ' Sweeper';\n\t\t\t\treturn 'Fast ' + offenseBias + ' Sweeper';\n\t\t\t} else {\n\t\t\t\tif (moveCount[offenseBias] >= 3 || moveCount['Stall'] <= 0) {\n\t\t\t\t\treturn 'Bulky ' + offenseBias + ' Sweeper';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (isFast && abilityid !== 'prankster') {\n\t\t\tif (stats.spe > 100 || bulk < 55000 || moveCount['Ultrafast']) {\n\t\t\t\treturn 'Fast Bulky Support';\n\t\t\t}\n\t\t}\n\t\tif (moveCount['SpecialStall']) return 'Physically Defensive';\n\t\tif (moveCount['PhysicalStall']) return 'Specially Defensive';\n\t\tif (species.id === 'blissey' || species.id === 'chansey') return 'Physically Defensive';\n\t\tif (specialBulk >= physicalBulk) return 'Specially Defensive';\n\t\treturn 'Physically Defensive';\n\t}\n\tensureMinEVs(evs: StatsTable, stat: StatName, min: number, evTotal: number) {\n\t\tif (!evs[stat]) evs[stat] = 0;\n\t\tlet diff = min - evs[stat];\n\t\tif (diff <= 0) return evTotal;\n\t\tif (evTotal <= 504) {\n\t\t\tlet change = Math.min(508 - evTotal, diff);\n\t\t\tevTotal += change;\n\t\t\tevs[stat] += change;\n\t\t\tdiff -= change;\n\t\t}\n\t\tif (diff <= 0) return evTotal;\n\t\tlet evPriority = {def: 1, spd: 1, hp: 1, atk: 1, spa: 1, spe: 1};\n\t\tlet prioStat: StatName;\n\t\tfor (prioStat in evPriority) {\n\t\t\tif (prioStat === stat) continue;\n\t\t\tif (evs[prioStat] && evs[prioStat] > 128) {\n\t\t\t\tevs[prioStat] -= diff;\n\t\t\t\tevs[stat] += diff;\n\t\t\t\treturn evTotal;\n\t\t\t}\n\t\t}\n\t\treturn evTotal; // can't do it :(\n\t}\n\tensureMaxEVs(evs: StatsTable, stat: StatName, min: number, evTotal: number) {\n\t\tif (!evs[stat]) evs[stat] = 0;\n\t\tlet diff = evs[stat] - min;\n\t\tif (diff <= 0) return evTotal;\n\t\tevs[stat] -= diff;\n\t\tevTotal -= diff;\n\t\treturn evTotal; // can't do it :(\n\t}\n\tguessEVs(set: PokemonSet, role: string): Partial<StatsTable> & {plusStat?: StatName | '', minusStat?: StatName | ''} {\n\t\tif (!set) return {};\n\t\tif (role === '?') return {};\n\t\tlet species = this.dex.species.get(set.species || set.name!);\n\t\tlet stats = species.baseStats;\n\n\t\tlet hasMove = this.hasMove;\n\t\tlet moveCount = this.moveCount;\n\n\t\tlet evs: StatsTable & {plusStat?: StatName | '', minusStat?: StatName | ''} = {\n\t\t\thp: 0, atk: 0, def: 0, spa: 0, spd: 0, spe: 0,\n\t\t};\n\t\tlet plusStat: StatName | '' = '';\n\t\tlet minusStat: StatName | '' = '';\n\n\t\tlet statChart: {[role: string]: [StatName, StatName]} = {\n\t\t\t'Bulky Band': ['atk', 'hp'],\n\t\t\t'Fast Band': ['spe', 'atk'],\n\t\t\t'Bulky Specs': ['spa', 'hp'],\n\t\t\t'Fast Specs': ['spe', 'spa'],\n\t\t\t'Physical Scarf': ['spe', 'atk'],\n\t\t\t'Special Scarf': ['spe', 'spa'],\n\t\t\t'Physical Biased Mixed Scarf': ['spe', 'atk'],\n\t\t\t'Special Biased Mixed Scarf': ['spe', 'spa'],\n\t\t\t'Fast Physical Sweeper': ['spe', 'atk'],\n\t\t\t'Fast Special Sweeper': ['spe', 'spa'],\n\t\t\t'Bulky Physical Sweeper': ['atk', 'hp'],\n\t\t\t'Bulky Special Sweeper': ['spa', 'hp'],\n\t\t\t'Fast Bulky Support': ['spe', 'hp'],\n\t\t\t'Physically Defensive': ['def', 'hp'],\n\t\t\t'Specially Defensive': ['spd', 'hp'],\n\t\t};\n\n\t\tplusStat = statChart[role][0];\n\t\tif (role === 'Fast Bulky Support') moveCount['Ultrafast'] = 0;\n\t\tif (plusStat === 'spe' && moveCount['Ultrafast']) {\n\t\t\tif (statChart[role][1] === 'atk' || statChart[role][1] === 'spa') {\n\t\t\t\tplusStat = statChart[role][1];\n\t\t\t} else if (moveCount['Physical'] >= 3) {\n\t\t\t\tplusStat = 'atk';\n\t\t\t} else if (stats.spd > stats.def) {\n\t\t\t\tplusStat = 'spd';\n\t\t\t} else {\n\t\t\t\tplusStat = 'def';\n\t\t\t}\n\t\t}\n\n\t\tif (this.supportsAVs) {\n\t\t\t// Let's Go, AVs enabled\n\t\t\tevs = {hp: 200, atk: 200, def: 200, spa: 200, spd: 200, spe: 200};\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\n\t\t\tif (!moveCount['SpecialAttack']) evs.spa = 0;\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\n\t\t} else if (!this.supportsEVs) {\n\t\t\t// Let's Go, AVs disabled\n\t\t\t// no change\n\t\t} else if (this.ignoreEVLimits) {\n\t\t\t// Gen 1-2, hackable EVs (like Hackmons)\n\t\t\tevs = {hp: 252, atk: 252, def: 252, spa: 252, spd: 252, spe: 252};\n\t\t\tif (!moveCount['PhysicalAttack']) evs.atk = 0;\n\t\t\tif (!moveCount['SpecialAttack'] && this.dex.gen > 1) evs.spa = 0;\n\t\t\tif (hasMove['gyroball'] || hasMove['trickroom']) evs.spe = 0;\n\t\t\tif (this.dex.gen === 1) evs.spd = 0;\n\t\t\tif (this.dex.gen < 3) return evs;\n\t\t} else {\n\t\t\t// Normal Gen 3-7\n\t\t\tif (!statChart[role]) return {};\n\n\t\t\tlet evTotal = 0;\n\n\t\t\tlet primaryStat = statChart[role][0];\n\t\t\tlet stat = this.getStat(primaryStat, set, 252, plusStat === primaryStat ? 1.1 : 1.0);\n\t\t\tlet ev = 252;\n\t\t\twhile (ev > 0 && stat <= this.getStat(primaryStat, set, ev - 4, plusStat === primaryStat ? 1.1 : 1.0)) ev -= 4;\n\t\t\tevs[primaryStat] = ev;\n\t\t\tevTotal += ev;\n\n\t\t\tlet secondaryStat: StatName | null = statChart[role][1];\n\t\t\tif (secondaryStat === 'hp' && set.level && set.level < 20) secondaryStat = 'spd';\n\t\t\tstat = this.getStat(secondaryStat, set, 252, plusStat === secondaryStat ? 1.1 : 1.0);\n\t\t\tev = 252;\n\t\t\twhile (ev > 0 && stat <= this.getStat(secondaryStat, set, ev - 4, plusStat === secondaryStat ? 1.1 : 1.0)) ev -= 4;\n\t\t\tevs[secondaryStat] = ev;\n\t\t\tevTotal += ev;\n\n\t\t\tlet SRweaknesses = ['Fire', 'Flying', 'Bug', 'Ice'];\n\t\t\tlet SRresistances = ['Ground', 'Steel', 'Fighting'];\n\t\t\tlet SRweak = 0;\n\t\t\tif (set.ability !== 'Magic Guard' && set.ability !== 'Mountaineer') {\n\t\t\t\tif (SRweaknesses.indexOf(species.types[0]) >= 0) {\n\t\t\t\t\tSRweak++;\n\t\t\t\t} else if (SRresistances.indexOf(species.types[0]) >= 0) {\n\t\t\t\t\tSRweak--;\n\t\t\t\t}\n\t\t\t\tif (SRweaknesses.indexOf(species.types[1]) >= 0) {\n\t\t\t\t\tSRweak++;\n\t\t\t\t} else if (SRresistances.indexOf(species.types[1]) >= 0) {\n\t\t\t\t\tSRweak--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet hpDivisibility = 0;\n\t\t\tlet hpShouldBeDivisible = false;\n\t\t\tlet hp = evs['hp'] || 0;\n\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\tif ((set.item === 'Leftovers' || set.item === 'Black Sludge') && hasMove['substitute'] && stat !== 404) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t} else if (set.item === 'Leftovers' || set.item === 'Black Sludge') {\n\t\t\t\thpDivisibility = 0;\n\t\t\t} else if (hasMove['bellydrum'] && (set.item || '').slice(-5) === 'Berry') {\n\t\t\t\thpDivisibility = 2;\n\t\t\t\thpShouldBeDivisible = true;\n\t\t\t} else if (hasMove['substitute'] && (set.item || '').slice(-5) === 'Berry') {\n\t\t\t\thpDivisibility = 4;\n\t\t\t\thpShouldBeDivisible = true;\n\t\t\t} else if (SRweak >= 2 || hasMove['bellydrum']) {\n\t\t\t\thpDivisibility = 2;\n\t\t\t} else if (SRweak >= 1 || hasMove['substitute'] || hasMove['transform']) {\n\t\t\t\thpDivisibility = 4;\n\t\t\t} else if (set.ability !== 'Magic Guard') {\n\t\t\t\thpDivisibility = 8;\n\t\t\t}\n\n\t\t\tif (hpDivisibility) {\n\t\t\t\twhile (hp < 252 && evTotal < 508 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\n\t\t\t\t\thp += 4;\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\t\t\tevTotal += 4;\n\t\t\t\t}\n\t\t\t\twhile (hp > 0 && !(stat % hpDivisibility) !== hpShouldBeDivisible) {\n\t\t\t\t\thp -= 4;\n\t\t\t\t\tstat = this.getStat('hp', set, hp, 1);\n\t\t\t\t\tevTotal -= 4;\n\t\t\t\t}\n\t\t\t\twhile (hp > 0 && stat === this.getStat('hp', set, hp - 4, 1)) {\n\t\t\t\t\thp -= 4;\n\t\t\t\t\tevTotal -= 4;\n\t\t\t\t}\n\t\t\t\tif (hp || evs['hp']) evs['hp'] = hp;\n\t\t\t}\n\n\t\t\tif (species.id === 'tentacruel') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 16, evTotal);\n\t\t\t} else if (species.id === 'skarmory') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 24, evTotal);\n\t\t\t} else if (species.id === 'jirachi') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 32, evTotal);\n\t\t\t} else if (species.id === 'celebi') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 36, evTotal);\n\t\t\t} else if (species.id === 'volcarona') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 52, evTotal);\n\t\t\t} else if (species.id === 'gliscor') {\n\t\t\t\tevTotal = this.ensureMinEVs(evs, 'spe', 72, evTotal);\n\t\t\t} else if (species.id === 'dragonite' && evs['hp']) {\n\t\t\t\tevTotal = this.ensureMaxEVs(evs, 'spe', 220, evTotal);\n\t\t\t}\n\n\t\t\tif (evTotal < 508) {\n\t\t\t\tlet remaining = 508 - evTotal;\n\t\t\t\tif (remaining > 252) remaining = 252;\n\t\t\t\tsecondaryStat = null;\n\t\t\t\tif (!evs['atk'] && moveCount['PhysicalAttack'] >= 1) {\n\t\t\t\t\tsecondaryStat = 'atk';\n\t\t\t\t} else if (!evs['spa'] && moveCount['SpecialAttack'] >= 1) {\n\t\t\t\t\tsecondaryStat = 'spa';\n\t\t\t\t} else if (stats.hp === 1 && !evs['def']) {\n\t\t\t\t\tsecondaryStat = 'def';\n\t\t\t\t} else if (stats.def === stats.spd && !evs['spd']) {\n\t\t\t\t\tsecondaryStat = 'spd';\n\t\t\t\t} else if (!evs['spd']) {\n\t\t\t\t\tsecondaryStat = 'spd';\n\t\t\t\t} else if (!evs['def']) {\n\t\t\t\t\tsecondaryStat = 'def';\n\t\t\t\t}\n\t\t\t\tif (secondaryStat) {\n\t\t\t\t\tev = remaining;\n\t\t\t\t\tstat = this.getStat(secondaryStat, set, ev);\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat(secondaryStat, set, ev - 4)) ev -= 4;\n\t\t\t\t\tif (ev) evs[secondaryStat] = ev;\n\t\t\t\t\tremaining -= ev;\n\t\t\t\t}\n\t\t\t\tif (remaining && !evs['spe']) {\n\t\t\t\t\tev = remaining;\n\t\t\t\t\tstat = this.getStat('spe', set, ev);\n\t\t\t\t\twhile (ev > 0 && stat === this.getStat('spe', set, ev - 4)) ev -= 4;\n\t\t\t\t\tif (ev) evs['spe'] = ev;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tif (hasMove['gyroball'] || hasMove['trickroom']) {\n\t\t\tminusStat = 'spe';\n\t\t} else if (!moveCount['PhysicalAttack']) {\n\t\t\tminusStat = 'atk';\n\t\t} else if (moveCount['SpecialAttack'] < 1 && !evs['spa']) {\n\t\t\tif (moveCount['SpecialAttack'] < moveCount['PhysicalAttack']) {\n\t\t\t\tminusStat = 'spa';\n\t\t\t} else if (!evs['atk']) {\n\t\t\t\tminusStat = 'atk';\n\t\t\t}\n\t\t} else if (moveCount['PhysicalAttack'] < 1 && !evs['atk']) {\n\t\t\tminusStat = 'atk';\n\t\t} else if (stats.def > stats.spe && stats.spd > stats.spe && !evs['spe']) {\n\t\t\tminusStat = 'spe';\n\t\t} else if (stats.def > stats.spd) {\n\t\t\tminusStat = 'spd';\n\t\t} else {\n\t\t\tminusStat = 'def';\n\t\t}\n\n\t\tif (plusStat === minusStat) {\n\t\t\tminusStat = (plusStat === 'spe' ? 'spd' : 'spe');\n\t\t}\n\n\t\tevs.plusStat = plusStat;\n\t\tevs.minusStat = minusStat;\n\n\t\treturn evs;\n\t}\n\n\tgetStat(stat: StatName, set: PokemonSet, evOverride?: number, natureOverride?: number) {\n\t\tlet species = this.dex.species.get(set.species);\n\t\tif (!species.exists) return 0;\n\n\t\tlet level = set.level || 100;\n\n\t\tlet baseStat = species.baseStats[stat];\n\n\t\tlet iv = (set.ivs && set.ivs[stat]);\n\t\tif (typeof iv !== 'number') iv = 31;\n\t\tif (this.dex.gen <= 2) iv &= 30;\n\n\t\tlet ev = (set.evs && set.evs[stat]);\n\t\tif (typeof ev !== 'number') ev = (this.dex.gen > 2 ? 0 : 252);\n\t\tif (evOverride !== undefined) ev = evOverride;\n\n\t\tif (stat === 'hp') {\n\t\t\tif (baseStat === 1) return 1;\n\t\t\tif (!this.supportsEVs) return ~~(~~(2 * baseStat + iv + 100) * level / 100 + 10) + (this.supportsAVs ? ev : 0);\n\t\t\treturn ~~(~~(2 * baseStat + iv + ~~(ev / 4) + 100) * level / 100 + 10);\n\t\t}\n\t\tlet val = ~~(~~(2 * baseStat + iv + ~~(ev / 4)) * level / 100 + 5);\n\t\tif (!this.supportsEVs) {\n\t\t\tval = ~~(~~(2 * baseStat + iv) * level / 100 + 5);\n\t\t}\n\t\tif (natureOverride) {\n\t\t\tval *= natureOverride;\n\t\t} else if (BattleNatures[set.nature!]?.plus === stat) {\n\t\t\tval *= 1.1;\n\t\t} else if (BattleNatures[set.nature!]?.minus === stat) {\n\t\t\tval *= 0.9;\n\t\t}\n\t\tif (!this.supportsEVs) {\n\t\t\tlet friendshipValue = ~~((70 / 255 / 10 + 1) * 100);\n\t\t\tval = ~~(val) * friendshipValue / 100 + (this.supportsAVs ? ev : 0);\n\t\t}\n\t\treturn ~~(val);\n\t}\n}\n\nif (typeof require === 'function') {\n\t// in Node\n\t(global as any).BattleStatGuesser = BattleStatGuesser;\n}\n"],"mappings":"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"}