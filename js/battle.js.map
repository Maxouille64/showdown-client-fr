{"version":3,"file":"battle.js","names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","teraType","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","timesAttacked","sprite","battle","scene","addPokemonSprite","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","args","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","get","charAt","transform","entry","push","rememberAbility","isNotBase","abilities","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copySource","removeTransform","copyTypesFrom","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","effectiveAbility","getTypeList","dex","ngasActive","isPermanent","concat","getSpeciesForme","formechange","species","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","sideid","isFar","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","faintCounter","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","setAvatar","setName","addSideCondition","effect","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","poke1i","poke1","poke2i","poke2","illusionFound","curPoke","updateSidebar","switchIn","kwArgs","getEffect","from","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","animUnsummon","switchOut","log","swapTo","target","oslot","swapWith","nslot","faint","animFaint","Battle","options","sidesSwitched","stepQueue","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","subscription","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","teamPreviewCount","gameType","rated","rules","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","debug","joinButtons","paused","$frame","$logFrame","BattleScene","BattleSceneStub","Error","resetStep","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","pseudoWeatherName","getAllActive","pokemonList","abilityActive","excludePokemon","a","slice","pause","resetTurnsSinceMoved","nextStep","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","prematureEnd","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","swapSideConditions","side1","side2","pWeather","cond","useMove","move","fromeffect","callerMoveForPressure","isZ","items","zMoveFrom","window","BattleItems","zMoveType","type","foeTargets","moveTarget","pressureTarget","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","category","damageinfo","hover","damageAnim","trackedMove","runResidualAnim","parsePokemonId","siden","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","tmp","frompoke","volatilesToCopy","timeOffset","Config","server","afd","moveid","thaw","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","sp","getSpriteData","isFrontSprite","mod","oldsp","animTransform","tpoke","targetForme","endsWith","isCustomAnim","sanitizeName","typeAnim","already","block","interrupt","time","Number","number","pokeability","targetability","ability2","foeActive","maybeTarget","broken","getSide","upkeep","maxTimeLeft","pwID","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","curhp","colorchar","test","slotChart","b","c","d","e","f","getSwitchedPokemon","parsedPokemonid","rememberTeamPreviewPokemon","findCorrespondingPokemon","isInactive","sidename","command","instantAdd","run","runMajor","resetSides","updateGen","ruleName","totalTime","graceTime","hasIndex","userid","app","user","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","teamPreview","targetIndex","forGen","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","parseBattleLine","maybeCloseMessagebar","nextLine","err","stack","line","updateBgm","play","resume","skipTurn","forceReset","animationOn","animationOff","shouldStep","startAnimations","animations","finishAnimations","interruptionCount","done","setQueue","queue","setMute","require","global"],"sources":["../src/battle.ts"],"sourcesContent":["/**\n * Pokemon Showdown Battle\n *\n * This is the main file for handling battle animations\n *\n * Licensing note: PS's client has complicated licensing:\n * - The client as a whole is AGPLv3\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\n *\n * Layout:\n *\n * - Battle\n *   - Side\n *     - Pokemon\n *   - BattleScene\n *     - BattleLog\n *       - BattleTextParser\n *\n * When a Battle receives a message, it splits the message into tokens\n * and parses what happens, updating its own state, and then telling\n * BattleScene to do any relevant animations. The tokens then get\n * passed directly into BattleLog. If the message is an in-battle\n * message, it'll be extracted by BattleTextParser, which adds it to\n * both the battle log itself, as well as the messagebar.\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\nimport {BattleSceneStub} from './battle-scene-stub';\nimport {BattleLog} from './battle-log';\nimport {BattleScene, PokemonSprite, BattleStatusAnims} from './battle-animations';\n\n/** [id, element?, ...misc] */\nexport type EffectState = any[] & {0: ID};\n/** [name, minTimeLeft, maxTimeLeft] */\nexport type WeatherState = [string, number, number];\nexport type HPColor = 'r' | 'y' | 'g';\n\nexport class Pokemon implements PokemonDetails, PokemonHealth {\n\tname = '';\n\tspeciesForme = '';\n\n\t/**\n\t * A string representing information extractable from textual\n\t * messages: side, nickname.\n\t *\n\t * Will be the empty string between Team Preview and the first\n\t * switch-in.\n\t *\n\t * Examples: `p1: Unown` or `p2: Sparky`\n\t */\n\tident = '';\n\t/**\n\t * A string representing visible information not included in\n\t * ident: species, level, gender, shininess. Level is left off\n\t * if it's 100; gender is left off if it's genderless.\n\t *\n\t * Note: Can be partially filled out in Team Preview, because certain\n\t * forme information and shininess isn't visible there. In those\n\t * cases, details can change during the first switch-in, but will\n\t * otherwise not change over the course of a game.\n\t *\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\n\t */\n\tdetails = '';\n\t/**\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\n\t *\n\t * As with ident, blank before the first switch-in, and will only\n\t * change during the first switch-in.\n\t */\n\tsearchid = '';\n\n\tside: Side;\n\tslot = 0;\n\n\tfainted = false;\n\thp = 0;\n\tmaxhp = 1000;\n\tlevel = 100;\n\tgender: GenderName = 'N';\n\tshiny = false;\n\n\thpcolor: HPColor = 'g';\n\tmoves: string[] = [];\n\tability = '';\n\tbaseAbility = '';\n\titem = '';\n\titemEffect = '';\n\tprevItem = '';\n\tprevItemEffect = '';\n\tteraType = '';\n\n\tboosts: {[stat: string]: number} = {};\n\tstatus: StatusName | 'tox' | '' | '???' = '';\n\tstatusStage = 0;\n\tvolatiles: {[effectid: string]: EffectState} = {};\n\tturnstatuses: {[effectid: string]: EffectState} = {};\n\tmovestatuses: {[effectid: string]: EffectState} = {};\n\tlastMove = '';\n\n\t/** [[moveName, ppUsed]] */\n\tmoveTrack: [string, number][] = [];\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\n\ttimesAttacked = 0;\n\n\tsprite: PokemonSprite;\n\n\tconstructor(data: PokemonDetails, side: Side) {\n\t\tthis.side = side;\n\t\tthis.speciesForme = data.speciesForme;\n\n\t\tthis.details = data.details;\n\t\tthis.name = data.name;\n\t\tthis.level = data.level;\n\t\tthis.shiny = data.shiny;\n\t\tthis.gender = data.gender || 'N';\n\t\tthis.ident = data.ident;\n\t\tthis.searchid = data.searchid;\n\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\n\t}\n\n\tisActive() {\n\t\treturn this.side.active.includes(this);\n\t}\n\n\t/** @deprecated */\n\tprivate getHPColor(): HPColor {\n\t\tif (this.hpcolor) return this.hpcolor;\n\t\tlet ratio = this.hp / this.maxhp;\n\t\tif (ratio > 0.5) return 'g';\n\t\tif (ratio > 0.2) return 'y';\n\t\treturn 'r';\n\t}\n\t/** @deprecated */\n\tprivate getHPColorClass() {\n\t\tswitch (this.getHPColor()) {\n\t\tcase 'y': return 'hpbar hpbar-yellow';\n\t\tcase 'r': return 'hpbar hpbar-red';\n\t\t}\n\t\treturn 'hpbar';\n\t}\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\n\t\tlet epsilon = 0.5 / 714;\n\n\t\tif (pixels === 0) return [0, 0];\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\n\t\tif (pixels === 9) {\n\t\t\tif (color === 'y') { // ratio is > 0.2\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\n\t\t\t} else { // ratio is <= 0.2\n\t\t\t\treturn [9 / 48, 0.2];\n\t\t\t}\n\t\t}\n\t\tif (pixels === 24) {\n\t\t\tif (color === 'g') { // ratio is > 0.5\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\n\t\t\t} else { // ratio is exactly 0.5\n\t\t\t\treturn [0.5, 0.5];\n\t\t\t}\n\t\t}\n\t\tif (pixels === 48) return [1, 1];\n\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\n\t}\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\n\t\tif (range[0] === range[1]) {\n\t\t\tlet percentage = Math.abs(range[0] * 100);\n\t\t\tif (Math.floor(percentage) === percentage) {\n\t\t\t\treturn percentage + '%';\n\t\t\t}\n\t\t\treturn percentage.toFixed(precision) + '%';\n\t\t}\n\t\tlet lower;\n\t\tlet upper;\n\t\tif (precision === 0) {\n\t\t\tlower = Math.floor(range[0] * 100);\n\t\t\tupper = Math.ceil(range[1] * 100);\n\t\t} else {\n\t\t\tlower = (range[0] * 100).toFixed(precision);\n\t\t\tupper = (range[1] * 100).toFixed(precision);\n\t\t}\n\t\treturn '' + lower + separator + upper + '%';\n\t}\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\n\tgetDamageRange(damage: any): [number, number] {\n\t\tif (damage[1] !== 48) {\n\t\t\tlet ratio = damage[0] / damage[1];\n\t\t\treturn [ratio, ratio];\n\t\t} else if (damage.length === undefined) {\n\t\t\t// wrong pixel damage.\n\t\t\t// this case exists for backward compatibility only.\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\n\t\t}\n\t\t// pixel damage\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\n\t\tif (damage[0] === 0) {\n\t\t\t// no change in displayed pixel width\n\t\t\treturn [0, newrange[1] - newrange[0]];\n\t\t}\n\t\tif (oldrange[0] < newrange[0]) { // swap order\n\t\t\tlet r = oldrange;\n\t\t\toldrange = newrange;\n\t\t\tnewrange = r;\n\t\t}\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\n\t}\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\n\t\tif (!hpstring || !hpstring.length) return null;\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\n\t\tif (parenIndex >= 0) {\n\t\t\t// old style damage and health reporting\n\t\t\tif (parsedamage) {\n\t\t\t\tlet damage = parseFloat(hpstring);\n\t\t\t\t// unusual check preseved for backward compatbility\n\t\t\t\tif (isNaN(damage)) damage = 50;\n\t\t\t\tif (heal) {\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\n\t\t\t\t} else {\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\n\t\t\t\t}\n\t\t\t\t// parse the absolute health information\n\t\t\t\tlet ret = this.healthParse(hpstring);\n\t\t\t\tif (ret && (ret[1] === 100)) {\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\n\t\t\t\t\treturn [damage, 100, damage];\n\t\t\t\t}\n\t\t\t\t// complicated expressions preserved for backward compatibility\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\n\t\t\t\treturn [pixels, 48, percent];\n\t\t\t}\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\n\t\t}\n\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\n\t\tlet oldmaxhp = this.maxhp;\n\t\tlet oldwidth = this.hpWidth(100);\n\t\tlet oldcolor = this.hpcolor;\n\n\t\tthis.side.battle.parseHealth(hpstring, this);\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\n\t\t\toldmaxhp = oldhp = this.maxhp;\n\t\t}\n\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\n\t\tlet delta = this.hp - oldnum;\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\n\t}\n\tcheckDetails(details?: string) {\n\t\tif (!details) return false;\n\t\tif (details === this.details) return true;\n\t\tif (this.searchid) return false;\n\t\tif (details.indexOf(', shiny') >= 0) {\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\n\t\t}\n\t\t// the actual forme was hidden on Team Preview\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\n\t\treturn (details === this.details);\n\t}\n\tgetIdent() {\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\n\t}\n\tremoveVolatile(volatile: ID) {\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\n\t\tif (!this.hasVolatile(volatile)) return;\n\t\tdelete this.volatiles[volatile];\n\t}\n\taddVolatile(volatile: ID, ...args: any[]) {\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\n\t\tthis.side.battle.scene.addEffect(this, volatile);\n\t}\n\thasVolatile(volatile: ID) {\n\t\treturn !!this.volatiles[volatile];\n\t}\n\tremoveTurnstatus(volatile: ID) {\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\n\t\tif (!this.hasTurnstatus(volatile)) return;\n\t\tdelete this.turnstatuses[volatile];\n\t}\n\taddTurnstatus(volatile: ID) {\n\t\tvolatile = toID(volatile);\n\t\tthis.side.battle.scene.addEffect(this, volatile);\n\t\tif (this.hasTurnstatus(volatile)) return;\n\t\tthis.turnstatuses[volatile] = [volatile];\n\t}\n\thasTurnstatus(volatile: ID) {\n\t\treturn !!this.turnstatuses[volatile];\n\t}\n\tclearTurnstatuses() {\n\t\tfor (let id in this.turnstatuses) {\n\t\t\tthis.removeTurnstatus(id as ID);\n\t\t}\n\t\tthis.turnstatuses = {};\n\t\tthis.side.battle.scene.updateStatbar(this);\n\t}\n\tremoveMovestatus(volatile: ID) {\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\n\t\tif (!this.hasMovestatus(volatile)) return;\n\t\tdelete this.movestatuses[volatile];\n\t}\n\taddMovestatus(volatile: ID) {\n\t\tvolatile = toID(volatile);\n\t\tif (this.hasMovestatus(volatile)) return;\n\t\tthis.movestatuses[volatile] = [volatile];\n\t\tthis.side.battle.scene.addEffect(this, volatile);\n\t}\n\thasMovestatus(volatile: ID) {\n\t\treturn !!this.movestatuses[volatile];\n\t}\n\tclearMovestatuses() {\n\t\tfor (let id in this.movestatuses) {\n\t\t\tthis.removeMovestatus(id as ID);\n\t\t}\n\t\tthis.movestatuses = {};\n\t}\n\tclearVolatiles() {\n\t\tthis.volatiles = {};\n\t\tthis.clearTurnstatuses();\n\t\tthis.clearMovestatuses();\n\t\tthis.side.battle.scene.clearEffects(this);\n\t}\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\n\t\tif (recursionSource === this.ident) return;\n\t\tmoveName = Dex.moves.get(moveName).name;\n\t\tif (moveName.charAt(0) === '*') return;\n\t\tif (moveName === 'Struggle') return;\n\t\tif (this.volatiles.transform) {\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\n\t\t\tif (!recursionSource) recursionSource = this.ident;\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\n\t\t\tmoveName = '*' + moveName;\n\t\t}\n\t\tfor (const entry of this.moveTrack) {\n\t\t\tif (moveName === entry[0]) {\n\t\t\t\tentry[1] += pp;\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.moveTrack.push([moveName, pp]);\n\t}\n\trememberAbility(ability: string, isNotBase?: boolean) {\n\t\tability = Dex.abilities.get(ability).name;\n\t\tthis.ability = ability;\n\t\tif (!this.baseAbility && !isNotBase) {\n\t\t\tthis.baseAbility = ability;\n\t\t}\n\t}\n\tgetBoost(boostStat: BoostStatName) {\n\t\tlet boostStatTable = {\n\t\t\tatk: 'Atk',\n\t\t\tdef: 'Def',\n\t\t\tspa: 'SpA',\n\t\t\tspd: 'SpD',\n\t\t\tspe: 'Spe',\n\t\t\taccuracy: 'Accuracy',\n\t\t\tevasion: 'Evasion',\n\t\t\tspc: 'Spc',\n\t\t};\n\t\tif (!this.boosts[boostStat]) {\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\n\t\t}\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\n\t\t\tif (this.boosts[boostStat] > 0) {\n\t\t\t\tlet goodBoostTable = [\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\n\t\t\t\t];\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t\t\t}\n\t\t\tlet badBoostTable = [\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\n\t\t\t];\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t\t}\n\t\tif (this.boosts[boostStat] > 0) {\n\t\t\tlet goodBoostTable = [\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\n\t\t\t];\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t\t}\n\t\tlet badBoostTable = [\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\n\t\t];\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\n\t}\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\n\t}\n\tgetBoostType(boostStat: BoostStatName) {\n\t\tif (!this.boosts[boostStat]) return 'neutral';\n\t\tif (this.boosts[boostStat] > 0) return 'good';\n\t\treturn 'bad';\n\t}\n\tclearVolatile() {\n\t\tthis.ability = this.baseAbility;\n\t\tthis.boosts = {};\n\t\tthis.clearVolatiles();\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\n\t\t\t\tthis.moveTrack.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t\t// this.lastMove = '';\n\t\tthis.statusStage = 0;\n\t\tthis.statusData.toxicTurns = 0;\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\n\t}\n\t/**\n\t * copyAll = false means Baton Pass,\n\t * copyAll = true means Illusion breaking\n\t * copyAll = 'shedtail' means Shed Tail\n\t */\n\tcopyVolatileFrom(pokemon: Pokemon, copySource?: | 'shedtail' | boolean) {\n\t\tthis.boosts = pokemon.boosts;\n\t\tthis.volatiles = pokemon.volatiles;\n\t\t// this.lastMove = pokemon.lastMove; // I think\n\t\tif (!copySource) {\n\t\t\tdelete this.volatiles['airballoon'];\n\t\t\tdelete this.volatiles['attract'];\n\t\t\tdelete this.volatiles['autotomize'];\n\t\t\tdelete this.volatiles['disable'];\n\t\t\tdelete this.volatiles['encore'];\n\t\t\tdelete this.volatiles['foresight'];\n\t\t\tdelete this.volatiles['gmaxchistrike'];\n\t\t\tdelete this.volatiles['imprison'];\n\t\t\tdelete this.volatiles['laserfocus'];\n\t\t\tdelete this.volatiles['mimic'];\n\t\t\tdelete this.volatiles['miracleeye'];\n\t\t\tdelete this.volatiles['nightmare'];\n\t\t\tdelete this.volatiles['smackdown'];\n\t\t\tdelete this.volatiles['stockpile1'];\n\t\t\tdelete this.volatiles['stockpile2'];\n\t\t\tdelete this.volatiles['stockpile3'];\n\t\t\tdelete this.volatiles['torment'];\n\t\t\tdelete this.volatiles['typeadd'];\n\t\t\tdelete this.volatiles['typechange'];\n\t\t\tdelete this.volatiles['yawn'];\n\t\t}\n\t\tif (copySource === 'shedtail') {\n\t\t\tfor (let i in this.volatiles) {\n\t\t\t\tif (i === 'substitute') continue;\n\t\t\t\tdelete this.volatiles[i];\n\t\t\t}\n\t\t\tthis.boosts = {};\n\t\t}\n\t\tdelete this.volatiles['transform'];\n\t\tdelete this.volatiles['formechange'];\n\t\tdelete this.volatiles['terastallize'];\n\n\t\tpokemon.boosts = {};\n\t\tpokemon.volatiles = {};\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\n\t\tpokemon.statusStage = 0;\n\t}\n\tcopyTypesFrom(pokemon: Pokemon) {\n\t\tconst [types, addedType] = pokemon.getTypes();\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\n\t\tif (addedType) {\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\n\t\t} else {\n\t\t\tthis.removeVolatile('typeadd' as ID);\n\t\t}\n\t}\n\tgetTypes(serverPokemon?: ServerPokemon): [ReadonlyArray<TypeName>, TypeName | ''] {\n\t\tlet types: ReadonlyArray<TypeName>;\n\t\tif (this.volatiles.typechange) {\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\n\t\t} else {\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\n\t\t}\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\n\t\t\tif (!types.length) types = ['Normal'];\n\t\t}\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\n\t\treturn [types, addedType];\n\t}\n\tisGrounded(serverPokemon?: ServerPokemon) {\n\t\tconst battle = this.side.battle;\n\t\tif (battle.hasPseudoWeather('Gravity')) {\n\t\t\treturn true;\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\n\t\t\treturn true;\n\t\t} else if (this.volatiles['smackdown']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\n\t\tlet ability = toID(this.effectiveAbility(serverPokemon));\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\n\t\t\titem = '' as ID;\n\t\t}\n\n\t\tif (item === 'ironball') {\n\t\t\treturn true;\n\t\t}\n\t\tif (ability === 'levitate') {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\n\t\t\treturn false;\n\t\t}\n\t\tif (item === 'airballoon') {\n\t\t\treturn false;\n\t\t}\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\n\t}\n\teffectiveAbility(serverPokemon?: ServerPokemon) {\n\t\tif (this.fainted || this.volatiles['gastroacid']) return '';\n\t\tconst ability = this.side.battle.dex.abilities.get(\n\t\t\tserverPokemon?.ability || this.ability || serverPokemon?.baseAbility || ''\n\t\t);\n\t\tif (this.side.battle.ngasActive() && !ability.isPermanent) {\n\t\t\treturn '';\n\t\t}\n\t\treturn ability.name;\n\t}\n\tgetTypeList(serverPokemon?: ServerPokemon) {\n\t\tconst [types, addedType] = this.getTypes(serverPokemon);\n\t\treturn addedType ? types.concat(addedType) : types;\n\t}\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\n\t}\n\tgetSpecies(serverPokemon?: ServerPokemon) {\n\t\treturn this.side.battle.dex.species.get(this.getSpeciesForme(serverPokemon));\n\t}\n\tgetBaseSpecies() {\n\t\treturn this.side.battle.dex.species.get(this.speciesForme);\n\t}\n\treset() {\n\t\tthis.clearVolatile();\n\t\tthis.hp = this.maxhp;\n\t\tthis.fainted = false;\n\t\tthis.status = '';\n\t\tthis.moveTrack = [];\n\t\tthis.name = this.name || this.speciesForme;\n\t}\n\t// This function is used for two things:\n\t//   1) The percentage to display beside the HP bar.\n\t//   2) The width to draw an HP bar.\n\t//\n\t// This function is NOT used in the calculation of any other displayed\n\t// percentages or ranges, which have their own, more complex, formulae.\n\thpWidth(maxWidth: number) {\n\t\tif (this.fainted || !this.hp) return 0;\n\n\t\t// special case for low health...\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\n\n\t\tif (this.maxhp === 48) {\n\t\t\t// Draw the health bar to the middle of the range.\n\t\t\t// This affects the width of the visual health bar *only*; it\n\t\t\t// does not affect the ranges displayed in any way.\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\n\t\t}\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\n\t\t\tpercentage = 99;\n\t\t}\n\t\treturn percentage * maxWidth / 100;\n\t}\n\tgetHPText(precision = 1) {\n\t\treturn Pokemon.getHPText(this, precision);\n\t}\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\n\t}\n\tdestroy() {\n\t\tif (this.sprite) this.sprite.destroy();\n\t\tthis.sprite = null!;\n\t\tthis.side = null!;\n\t}\n}\n\nexport class Side {\n\tbattle: Battle;\n\tname = '';\n\tid = '';\n\tsideid: SideID;\n\tn: number;\n\tisFar: boolean;\n\tfoe: Side = null!;\n\tally: Side | null = null;\n\tavatar: string = 'unknown';\n\trating: string = '';\n\ttotalPokemon = 6;\n\tx = 0;\n\ty = 0;\n\tz = 0;\n\tmissedPokemon: Pokemon = null!;\n\n\twisher: Pokemon | null = null;\n\n\tactive = [null] as (Pokemon | null)[];\n\tlastPokemon = null as Pokemon | null;\n\tpokemon = [] as Pokemon[];\n\n\t/** [effectName, levels, minDuration, maxDuration] */\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\n\tfaintCounter = 0;\n\n\tconstructor(battle: Battle, n: number) {\n\t\tthis.battle = battle;\n\t\tthis.n = n;\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\n\t\tthis.isFar = !!(n % 2);\n\t}\n\n\trollTrainerSprites() {\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\n\t}\n\n\tbehindx(offset: number) {\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\n\t}\n\tbehindy(offset: number) {\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\n\t}\n\tleftof(offset: number) {\n\t\treturn (!this.isFar ? -1 : 1) * offset;\n\t}\n\tbehind(offset: number) {\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\n\t}\n\n\tclearPokemon() {\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\n\t\tthis.pokemon = [];\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\n\t\tthis.lastPokemon = null;\n\t}\n\treset() {\n\t\tthis.clearPokemon();\n\t\tthis.sideConditions = {};\n\t\tthis.faintCounter = 0;\n\t}\n\tsetAvatar(avatar: string) {\n\t\tthis.avatar = avatar;\n\t}\n\tsetName(name: string, avatar?: string) {\n\t\tif (name) this.name = name;\n\t\tthis.id = toID(this.name);\n\t\tif (avatar) {\n\t\t\tthis.setAvatar(avatar);\n\t\t} else {\n\t\t\tthis.rollTrainerSprites();\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\n\t\t}\n\t}\n\taddSideCondition(effect: Effect) {\n\t\tlet condition = effect.id;\n\t\tif (this.sideConditions[condition]) {\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\n\t\t\t\tthis.sideConditions[condition][1]++;\n\t\t\t}\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\n\t\t\treturn;\n\t\t}\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\n\t\tswitch (condition) {\n\t\tcase 'auroraveil':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\n\t\t\tbreak;\n\t\tcase 'reflect':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\n\t\t\tbreak;\n\t\tcase 'safeguard':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\n\t\t\tbreak;\n\t\tcase 'lightscreen':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\n\t\t\tbreak;\n\t\tcase 'mist':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\n\t\t\tbreak;\n\t\tcase 'tailwind':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? 4 : 3, 0];\n\t\t\tbreak;\n\t\tcase 'luckychant':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\n\t\t\tbreak;\n\t\tcase 'stealthrock':\n\t\tcase 'spikes':\n\t\tcase 'toxicspikes':\n\t\tcase 'stickyweb':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\n\t\t\tbreak;\n\t\tcase 'gmaxwildfire':\n\t\tcase 'gmaxvolcalith':\n\t\tcase 'gmaxvinelash':\n\t\tcase 'gmaxcannonade':\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\n\t\t\tbreak;\n\t\tcase 'grasspledge':\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\n\t\t\tbreak;\n\t\tcase 'waterpledge':\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\n\t\t\tbreak;\n\t\tcase 'firepledge':\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\n\t\t\tbreak;\n\t\t}\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\n\t}\n\tremoveSideCondition(condition: string) {\n\t\tconst id = toID(condition);\n\t\tif (!this.sideConditions[id]) return;\n\t\tdelete this.sideConditions[id];\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\n\t}\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\n\n\t\tconst data = this.battle.parseDetails(name, ident, details);\n\t\tconst poke = new Pokemon(data, this);\n\t\tif (oldItem) poke.item = oldItem;\n\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\n\t\tpoke.reset();\n\n\t\tif (replaceSlot >= 0) {\n\t\t\tthis.pokemon[replaceSlot] = poke;\n\t\t} else {\n\t\t\tthis.pokemon.push(poke);\n\t\t}\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\n\t\t\t// check for Illusion\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\n\t\t\tlet toRemove = -1;\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\n\t\t\t\tif (!poke1.searchid) continue;\n\t\t\t\tif (poke1.searchid in existingTable) {\n\t\t\t\t\tlet poke2i = existingTable[poke1.searchid];\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\n\t\t\t\t\tif (poke === poke1) {\n\t\t\t\t\t\ttoRemove = poke2i;\n\t\t\t\t\t} else if (poke === poke2) {\n\t\t\t\t\t\ttoRemove = poke1i;\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\n\t\t\t\t\t\ttoRemove = poke2i;\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\n\t\t\t\t\t\ttoRemove = poke1i;\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\n\t\t\t\t\t\ttoRemove = poke2i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoRemove = poke1i;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\texistingTable[poke1.searchid] = poke1i;\n\t\t\t}\n\t\t\tif (toRemove >= 0) {\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\n\t\t\t\t\tlet illusionFound = null;\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\n\t\t\t\t\t\tif (curPoke === poke) continue;\n\t\t\t\t\t\tif (curPoke.fainted) continue;\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\n\t\t\t\t\t\t\tillusionFound = curPoke;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!illusionFound) {\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\n\t\t\t\t\t\t// and reguessed.\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\n\t\t\t\t\t\t\tillusionFound = curPoke;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (illusionFound) {\n\t\t\t\t\t\tillusionFound.fainted = true;\n\t\t\t\t\t\tillusionFound.hp = 0;\n\t\t\t\t\t\tillusionFound.status = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\n\t\t\t}\n\t\t}\n\t\tthis.battle.scene.updateSidebar(this);\n\n\t\treturn poke;\n\t}\n\n\tswitchIn(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\n\t\tthis.active[slot] = pokemon;\n\t\tpokemon.slot = slot;\n\t\tpokemon.clearVolatile();\n\t\tpokemon.lastMove = '';\n\t\tthis.battle.lastMove = 'switch-in';\n\t\tconst effect = Dex.getEffect(kwArgs.from);\n\t\tif (['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!, effect.id === 'shedtail' ? 'shedtail' : false);\n\t\t}\n\n\t\tthis.battle.scene.animSummon(pokemon, slot);\n\t}\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\n\t\tlet oldpokemon = this.active[slot];\n\t\tif (oldpokemon === pokemon) return;\n\t\tthis.lastPokemon = oldpokemon;\n\t\tif (oldpokemon) {\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\n\t\t\toldpokemon.clearVolatile();\n\t\t}\n\t\tpokemon.clearVolatile();\n\t\tpokemon.lastMove = '';\n\t\tthis.battle.lastMove = 'switch-in';\n\t\tthis.active[slot] = pokemon;\n\t\tpokemon.slot = slot;\n\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\n\t}\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\n\t\tlet oldpokemon = this.active[slot];\n\t\tif (pokemon === oldpokemon) return;\n\t\tthis.lastPokemon = oldpokemon;\n\t\tpokemon.clearVolatile();\n\t\tif (oldpokemon) {\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\n\t\t\tpokemon.hp = oldpokemon.hp;\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\n\t\t\tpokemon.status = oldpokemon.status;\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\n\t\t\t// technically we also know its status but only at the end of the turn, not here\n\t\t\toldpokemon.fainted = false;\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\n\t\t\toldpokemon.status = '???';\n\t\t}\n\t\tthis.active[slot] = pokemon;\n\t\tpokemon.slot = slot;\n\n\t\tif (oldpokemon) {\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\n\t\t}\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\n\t}\n\tswitchOut(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\n\t\tconst effect = Dex.getEffect(kwArgs.from);\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\n\t\t\tpokemon.clearVolatile();\n\t\t} else {\n\t\t\tpokemon.removeVolatile('transform' as ID);\n\t\t\tpokemon.removeVolatile('formechange' as ID);\n\t\t}\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail', 'teleport'].includes(effect.id)) {\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: effect.id});\n\t\t}\n\t\tpokemon.statusData.toxicTurns = 0;\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\n\t\tthis.lastPokemon = pokemon;\n\t\tthis.active[slot] = null;\n\n\t\tthis.battle.scene.animUnsummon(pokemon);\n\t}\n\tswapTo(pokemon: Pokemon, slot: number) {\n\t\tif (pokemon.slot === slot) return;\n\t\tlet target = this.active[slot];\n\n\t\tlet oslot = pokemon.slot;\n\n\t\tpokemon.slot = slot;\n\t\tif (target) target.slot = oslot;\n\n\t\tthis.active[slot] = pokemon;\n\t\tthis.active[oslot] = target;\n\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\n\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\n\t}\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\n\t\t// method provided for backwards compatibility only\n\t\tif (pokemon === target) return;\n\n\t\tlet oslot = pokemon.slot;\n\t\tlet nslot = target.slot;\n\n\t\tpokemon.slot = nslot;\n\t\ttarget.slot = oslot;\n\t\tthis.active[nslot] = pokemon;\n\t\tthis.active[oslot] = target;\n\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\n\t\tthis.battle.scene.animUnsummon(target, true);\n\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\n\t\tthis.battle.scene.animSummon(target, oslot, true);\n\t}\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\n\t\tpokemon.clearVolatile();\n\t\tthis.lastPokemon = pokemon;\n\t\tthis.active[slot] = null;\n\n\t\tpokemon.fainted = true;\n\t\tpokemon.hp = 0;\n\t\tif (pokemon.side.faintCounter < 100) pokemon.side.faintCounter++;\n\n\t\tthis.battle.scene.animFaint(pokemon);\n\t}\n\tdestroy() {\n\t\tthis.clearPokemon();\n\t\tthis.battle = null!;\n\t\tthis.foe = null!;\n\t}\n}\n\nexport interface PokemonDetails {\n\tdetails: string;\n\tname: string;\n\tspeciesForme: string;\n\tlevel: number;\n\tshiny: boolean;\n\tgender: GenderName | '';\n\tident: string;\n\tsearchid: string;\n}\nexport interface PokemonHealth {\n\thp: number;\n\tmaxhp: number;\n\thpcolor: HPColor | '';\n\tstatus: StatusName | 'tox' | '' | '???';\n\tfainted?: boolean;\n}\nexport interface ServerPokemon extends PokemonDetails, PokemonHealth {\n\tident: string;\n\tdetails: string;\n\tcondition: string;\n\tactive: boolean;\n\t/** unboosted stats */\n\tstats: {\n\t\tatk: number,\n\t\tdef: number,\n\t\tspa: number,\n\t\tspd: number,\n\t\tspe: number,\n\t};\n\t/** currently an ID, will revise to name */\n\tmoves: string[];\n\t/** currently an ID, will revise to name */\n\tbaseAbility: string;\n\t/** currently an ID, will revise to name */\n\tability?: string;\n\t/** currently an ID, will revise to name */\n\titem: string;\n\t/** currently an ID, will revise to name */\n\tpokeball: string;\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\n\tgigantamax: string | false;\n}\n\nexport class Battle {\n\tscene: BattleSceneStub;\n\n\tsidesSwitched = false;\n\n\tstepQueue: string[];\n\t/** See battle.instantAdd */\n\tpreemptStepQueue: string[] = [];\n\twaitForAnimations: true | false | 'simult' = true;\n\t/** the index of `stepQueue` currently being animated */\n\tcurrentStep = 0;\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\n\tseeking: number | null = null;\n\n\tactiveMoveIsSpread: string | null = null;\n\n\tsubscription: ((state:\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\n\t) => void) | null;\n\n\tmute = false;\n\tmessageFadeTime = 300;\n\tmessageShownTime = 1;\n\t/** for tracking when to accelerate animations in long battles full of double switches */\n\tturnsSinceMoved = 0;\n\n\t/**\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\n\t */\n\tturn = -1;\n\t/**\n\t * Are we at the end of the queue and waiting for more input?\n\t *\n\t * In addition to at the end of a battle, this is also true if you're\n\t * playing/watching a battle live, and waiting for a player to make a move.\n\t */\n\tatQueueEnd = false;\n\t/**\n\t * Has the battle ever been played or fast-forwarded?\n\t *\n\t * This is not exactly `turn > 0` because if you start playing a replay,\n\t * then pause before turn 1, `turn` will still be 0, but playback should\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\n\t */\n\tstarted = false;\n\t/**\n\t * Has playback gotten to the point where a player has won or tied?\n\t * (Affects whether BGM is playing)\n\t */\n\tended = false;\n\tisReplay = false;\n\tusesUpkeep = false;\n\tweather = '' as ID;\n\tpseudoWeather = [] as WeatherState[];\n\tweatherTimeLeft = 0;\n\tweatherMinTimeLeft = 0;\n\t/**\n\t * The side from which perspective we're viewing. Should be identical to\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\n\t * near side, and `mySide` is the active player.\n\t */\n\tmySide: Side = null!;\n\tnearSide: Side = null!;\n\tfarSide: Side = null!;\n\tp1: Side = null!;\n\tp2: Side = null!;\n\tp3?: Side = null!;\n\tp4?: Side = null!;\n\tpokemonControlled = 0;\n\tsides: Side[] = null!;\n\tmyPokemon: ServerPokemon[] | null = null;\n\tmyAllyPokemon: ServerPokemon[] | null = null;\n\tlastMove = '';\n\n\tgen = 8;\n\tdex: ModdedDex = Dex;\n\tteamPreviewCount = 0;\n\tspeciesClause = false;\n\ttier = '';\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\n\trated: string | boolean = false;\n\trules: {[ruleName: string]: 1 | 0} = {};\n\tisBlitz = false;\n\tendLastTurnPending = false;\n\ttotalTimeLeft = 0;\n\tgraceTimeLeft = 0;\n\t/**\n\t * true: timer on, state unknown\n\t * false: timer off\n\t * number: seconds left this turn\n\t */\n\tkickingInactive: number | boolean = false;\n\n\t// options\n\tid = '';\n\t/** used to forward some information to the room in the old client */\n\troomid = '';\n\thardcoreMode = false;\n\tignoreNicks = !!Dex.prefs('ignorenicks');\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\n\tignoreSpects = !!Dex.prefs('ignorespects');\n\tdebug: boolean;\n\tjoinButtons = false;\n\n\t/**\n\t * The actual pause state. Will only be true if playback is actually\n\t * paused, not just waiting for the opponent to make a move.\n\t */\n\tpaused: boolean;\n\n\tconstructor(options: {\n\t\t$frame?: JQuery<HTMLElement>,\n\t\t$logFrame?: JQuery<HTMLElement>,\n\t\tid?: ID,\n\t\tlog?: string[],\n\t\tpaused?: boolean,\n\t\tisReplay?: boolean,\n\t\tdebug?: boolean,\n\t\tsubscription?: Battle['subscription'],\n\t} = {}) {\n\t\tthis.id = options.id || '';\n\n\t\tif (options.$frame && options.$logFrame) {\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\n\t\t} else if (!options.$frame && !options.$logFrame) {\n\t\t\tthis.scene = new BattleSceneStub();\n\t\t} else {\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\n\t\t}\n\n\t\tthis.paused = !!options.paused;\n\t\tthis.started = !this.paused;\n\t\tthis.debug = !!options.debug;\n\t\tthis.stepQueue = options.log || [];\n\t\tthis.subscription = options.subscription || null;\n\n\t\tthis.p1 = new Side(this, 0);\n\t\tthis.p2 = new Side(this, 1);\n\t\tthis.sides = [this.p1, this.p2];\n\t\tthis.p2.foe = this.p1;\n\t\tthis.p1.foe = this.p2;\n\t\tthis.nearSide = this.mySide = this.p1;\n\t\tthis.farSide = this.p2;\n\n\t\tthis.resetStep();\n\t}\n\n\tsubscribe(listener: Battle['subscription']) {\n\t\tthis.subscription = listener;\n\t}\n\n\tremovePseudoWeather(weather: string) {\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\n\t\t\t\tthis.scene.updateWeather();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\n\t\tthis.scene.updateWeather();\n\t}\n\thasPseudoWeather(weather: string) {\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\n\t\t\tif (weather === pseudoWeatherName) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tgetAllActive() {\n\t\tconst pokemonList = [];\n\t\t// Sides 3 and 4 are synced with sides 1 and 2, so they don't need to be checked\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst side = this.sides[i];\n\t\t\tfor (const active of side.active) {\n\t\t\t\tif (active && !active.fainted) {\n\t\t\t\t\tpokemonList.push(active);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pokemonList;\n\t}\n\tngasActive() {\n\t\tfor (const active of this.getAllActive()) {\n\t\t\tif (active.ability === 'Neutralizing Gas' && !active.volatiles['gastroacid']) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tabilityActive(abilities: string | string[], excludePokemon?: Pokemon | ServerPokemon | null) {\n\t\tif (typeof abilities === 'string') abilities = [abilities];\n\t\tif (this.ngasActive()) {\n\t\t\tabilities = abilities.filter(a => this.dex.abilities.get(a).isPermanent);\n\t\t\tif (!abilities.length) return false;\n\t\t}\n\t\tfor (const active of this.getAllActive()) {\n\t\t\tif (active === excludePokemon) continue;\n\t\t\tif (excludePokemon && this.pokemonControlled === 1 &&\n\t\t\t\tactive.ident.slice(0, 2) === excludePokemon.ident.slice(0, 2)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (abilities.includes(active.ability) && !active.volatiles['gastroacid']) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treset() {\n\t\tthis.paused = true;\n\t\tthis.scene.pause();\n\t\tthis.resetStep();\n\t\tthis.subscription?.('paused');\n\t}\n\tresetStep() {\n\t\t// battle state\n\t\tthis.turn = -1;\n\t\tthis.started = !this.paused;\n\t\tthis.ended = false;\n\t\tthis.atQueueEnd = false;\n\t\tthis.weather = '' as ID;\n\t\tthis.weatherTimeLeft = 0;\n\t\tthis.weatherMinTimeLeft = 0;\n\t\tthis.pseudoWeather = [];\n\t\tthis.lastMove = '';\n\n\t\tfor (const side of this.sides) {\n\t\t\tif (side) side.reset();\n\t\t}\n\t\tthis.myPokemon = null;\n\t\tthis.myAllyPokemon = null;\n\n\t\t// DOM state\n\t\tthis.scene.reset();\n\n\t\t// activity queue state\n\t\tthis.activeMoveIsSpread = null;\n\t\tthis.currentStep = 0;\n\t\tthis.resetTurnsSinceMoved();\n\t\tthis.nextStep();\n\t}\n\tdestroy() {\n\t\tthis.scene.destroy();\n\n\t\tfor (let i = 0; i < this.sides.length; i++) {\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\n\t\t\tthis.sides[i] = null!;\n\t\t}\n\t\tthis.mySide = null!;\n\t\tthis.nearSide = null!;\n\t\tthis.farSide = null!;\n\t\tthis.p1 = null!;\n\t\tthis.p2 = null!;\n\t\tthis.p3 = null!;\n\t\tthis.p4 = null!;\n\t}\n\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\n\t\tthis.scene.log.add(args, kwArgs, preempt);\n\t}\n\n\tresetToCurrentTurn() {\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\n\t}\n\tswitchSides() {\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\n\t}\n\tsetPerspective(sideid: SideID) {\n\t\tif (this.mySide.sideid === sideid) return;\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\n\t\tconst side = this[sideid];\n\t\tif (!side) return;\n\t\tthis.mySide = side;\n\n\t\tif ((side.n % 2) === this.p1.n) {\n\t\t\tthis.sidesSwitched = false;\n\t\t\tthis.nearSide = this.p1;\n\t\t\tthis.farSide = this.p2;\n\t\t} else {\n\t\t\tthis.sidesSwitched = true;\n\t\t\tthis.nearSide = this.p2;\n\t\t\tthis.farSide = this.p1;\n\t\t}\n\t\tthis.nearSide.isFar = false;\n\t\tthis.farSide.isFar = true;\n\t\tif (this.sides.length > 2) {\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\n\t\t}\n\n\t\tthis.resetToCurrentTurn();\n\t}\n\n\t//\n\t// activities\n\t//\n\tstart() {\n\t\tthis.log(['start']);\n\t\tthis.resetTurnsSinceMoved();\n\t}\n\twinner(winner?: string) {\n\t\tthis.log(['win', winner || '']);\n\t\tthis.ended = true;\n\t\tthis.subscription?.('ended');\n\t}\n\tprematureEnd() {\n\t\tthis.log(['message', 'This replay ends here.']);\n\t\tthis.ended = true;\n\t\tthis.subscription?.('ended');\n\t}\n\tendLastTurn() {\n\t\tif (this.endLastTurnPending) {\n\t\t\tthis.endLastTurnPending = false;\n\t\t\tthis.scene.updateStatbars();\n\t\t}\n\t}\n\tsetHardcoreMode(mode: boolean) {\n\t\tthis.hardcoreMode = mode;\n\t\tthis.scene.updateSidebars();\n\t\tthis.scene.updateWeather(true);\n\t}\n\tsetTurn(turnNum: number) {\n\t\tif (turnNum === this.turn + 1) {\n\t\t\tthis.endLastTurnPending = true;\n\t\t}\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\n\t\tthis.turn = turnNum;\n\t\tthis.started = true;\n\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\n\n\t\tthis.scene.incrementTurn();\n\n\t\tif (this.seeking !== null) {\n\t\t\tif (turnNum >= this.seeking) {\n\t\t\t\tthis.stopSeeking();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.subscription?.('turn');\n\t\t}\n\t}\n\tresetTurnsSinceMoved() {\n\t\tthis.turnsSinceMoved = 0;\n\t\tthis.scene.updateAcceleration();\n\t}\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\n\t\tlet weather = toID(weatherName);\n\t\tif (!weather || weather === 'none') {\n\t\t\tweather = '' as ID;\n\t\t}\n\t\tif (isUpkeep) {\n\t\t\tif (this.weather && this.weatherTimeLeft) {\n\t\t\t\tthis.weatherTimeLeft--;\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\n\t\t\t}\n\t\t\tif (this.seeking === null) {\n\t\t\t\tthis.scene.upkeepWeather();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (weather) {\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\n\t\t\tif (poke) {\n\t\t\t\tif (ability) {\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t\t}\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\n\t\t\t} else if (isExtremeWeather) {\n\t\t\t\tthis.weatherTimeLeft = 0;\n\t\t\t\tthis.weatherMinTimeLeft = 0;\n\t\t\t} else {\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\n\t\t\t}\n\t\t}\n\t\tthis.weather = weather;\n\t\tthis.scene.updateWeather();\n\t}\n\tswapSideConditions() {\n\t\tconst sideConditions = [\n\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\n\t\t];\n\t\tif (this.gameType === 'freeforall') {\n\t\t\t// TODO: Add FFA support\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet side1 = this.sides[0];\n\t\t\tlet side2 = this.sides[1];\n\t\t\tfor (const id of sideConditions) {\n\t\t\t\tif (side1.sideConditions[id] && side2.sideConditions[id]) {\n\t\t\t\t\t[side1.sideConditions[id], side2.sideConditions[id]] = [\n\t\t\t\t\t\tside2.sideConditions[id], side1.sideConditions[id],\n\t\t\t\t\t];\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\n\t\t\t\t} else if (side1.sideConditions[id] && !side2.sideConditions[id]) {\n\t\t\t\t\tside2.sideConditions[id] = side1.sideConditions[id];\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\n\t\t\t\t\tside1.removeSideCondition(id);\n\t\t\t\t} else if (side2.sideConditions[id] && !side1.sideConditions[id]) {\n\t\t\t\t\tside1.sideConditions[id] = side2.sideConditions[id];\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\n\t\t\t\t\tside2.removeSideCondition(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tupdateTurnCounters() {\n\t\tfor (const pWeather of this.pseudoWeather) {\n\t\t\tif (pWeather[1]) pWeather[1]--;\n\t\t\tif (pWeather[2]) pWeather[2]--;\n\t\t}\n\t\tfor (const side of this.sides) {\n\t\t\tfor (const id in side.sideConditions) {\n\t\t\t\tlet cond = side.sideConditions[id];\n\t\t\t\tif (cond[2]) cond[2]--;\n\t\t\t\tif (cond[3]) cond[3]--;\n\t\t\t}\n\t\t}\n\t\tfor (const poke of [...this.nearSide.active, ...this.farSide.active]) {\n\t\t\tif (poke) {\n\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\n\t\t\t\tpoke.clearTurnstatuses();\n\t\t\t}\n\t\t}\n\t\tthis.scene.updateWeather();\n\t}\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\tthis.activateAbility(pokemon, fromeffect);\n\t\tpokemon.clearMovestatuses();\n\t\tif (move.id === 'focuspunch') {\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\n\t\t}\n\t\tthis.scene.updateStatbar(pokemon);\n\t\tif (fromeffect.id === 'sleeptalk') {\n\t\t\tpokemon.rememberMove(move.name, 0);\n\t\t}\n\t\tlet callerMoveForPressure = null;\n\t\t// will not include effects that are conditions named after moves like Magic Coat and Snatch, which is good\n\t\tif (fromeffect.id && kwArgs.from.startsWith(\"move:\")) {\n\t\t\tcallerMoveForPressure = fromeffect as Move;\n\t\t}\n\t\tif (!fromeffect.id || callerMoveForPressure || fromeffect.id === 'pursuit') {\n\t\t\tlet moveName = move.name;\n\t\t\tif (!callerMoveForPressure) {\n\t\t\t\tif (move.isZ) {\n\t\t\t\t\tpokemon.item = move.isZ;\n\t\t\t\t\tlet item = Dex.items.get(move.isZ);\n\t\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\n\t\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\n\t\t\t\t\tmoveName = moveName.slice(2);\n\t\t\t\t\tmove = Dex.moves.get(moveName);\n\t\t\t\t\tif (window.BattleItems) {\n\t\t\t\t\t\tfor (let item in BattleItems) {\n\t\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet pp = 1;\n\t\t\tif (this.abilityActive('Pressure') && move.id !== 'stickyweb') {\n\t\t\t\tconst foeTargets = [];\n\t\t\t\tconst moveTarget = move.pressureTarget;\n\n\t\t\t\tif (\n\t\t\t\t\t!target && this.gameType === 'singles' &&\n\t\t\t\t\t!['self', 'allies', 'allySide', 'adjacentAlly', 'adjacentAllyOrSelf', 'allyTeam'].includes(moveTarget)\n\t\t\t\t) {\n\t\t\t\t\t// Hardcode for moves without a target in singles\n\t\t\t\t\tfoeTargets.push(pokemon.side.foe.active[0]);\n\t\t\t\t} else if (['all', 'allAdjacent', 'allAdjacentFoes', 'foeSide'].includes(moveTarget)) {\n\t\t\t\t\tfor (const active of this.getAllActive()) {\n\t\t\t\t\t\tif (active === pokemon) continue;\n\t\t\t\t\t\t// Pressure affects allies in gen 3 and 4\n\t\t\t\t\t\tif (this.gen <= 4 || (active.side !== pokemon.side && active.side.ally !== pokemon.side)) {\n\t\t\t\t\t\t\tfoeTargets.push(active);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (target && target.side !== pokemon.side) {\n\t\t\t\t\tfoeTargets.push(target);\n\t\t\t\t}\n\n\t\t\t\tfor (const foe of foeTargets) {\n\t\t\t\t\tif (foe && !foe.fainted && foe.effectiveAbility() === 'Pressure') {\n\t\t\t\t\t\tpp += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!callerMoveForPressure) {\n\t\t\t\tpokemon.rememberMove(moveName, pp);\n\t\t\t} else {\n\t\t\t\tpokemon.rememberMove(callerMoveForPressure.name, pp - 1); // 1 pp was already deducted from using the move itself\n\t\t\t}\n\t\t}\n\t\tpokemon.lastMove = move.id;\n\t\tthis.lastMove = move.id;\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\n\t\t\tpokemon.side.wisher = pokemon;\n\t\t}\n\t}\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\n\t\tif (this.seeking !== null || kwArgs.still) return;\n\n\t\tif (!target) target = pokemon.side.foe.active[0];\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\n\t\tif (kwArgs.miss && target.side) {\n\t\t\ttarget = target.side.missedPokemon;\n\t\t}\n\t\tif (kwArgs.notarget) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\n\t\t\treturn;\n\t\t}\n\n\t\tlet usedMove = kwArgs.anim ? Dex.moves.get(kwArgs.anim) : move;\n\t\tif (!kwArgs.spread) {\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\n\t\t\treturn;\n\t\t}\n\n\t\tlet targets = [pokemon];\n\t\tif (kwArgs.spread === '.') {\n\t\t\t//  no target was hit by the attack\n\t\t\ttargets.push(target.side.missedPokemon);\n\t\t} else {\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\n\t\t\t\tif (!curTarget) {\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttargets.push(curTarget);\n\t\t\t}\n\t\t}\n\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\n\t}\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\n\t\tpokemon.clearMovestatuses();\n\t\tthis.scene.updateStatbar(pokemon);\n\t\tif (effect.id in BattleStatusAnims) {\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\n\t\t}\n\t\tthis.activateAbility(pokemon, effect);\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\n\t\tswitch (effect.id) {\n\t\tcase 'par':\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\n\t\t\tbreak;\n\t\tcase 'frz':\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\n\t\t\tbreak;\n\t\tcase 'slp':\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\n\t\t\tpokemon.statusData.sleepTurns++;\n\t\t\tbreak;\n\t\tcase 'truant':\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\n\t\t\tbreak;\n\t\tcase 'recharge':\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\n\t\t\tbreak;\n\t\tcase 'focuspunch':\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\n\t\t\tbreak;\n\t\tcase 'shelltrap':\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\n\t\t\tbreak;\n\t\tcase 'flinch':\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\n\t\t\tbreak;\n\t\tcase 'attract':\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\n\t\t\tbreak;\n\t\t}\n\t\tthis.scene.animReset(pokemon);\n\t}\n\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\n\t\tif (!pokemon || !effectOrName) return;\n\t\tif (typeof effectOrName !== 'string') {\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\n\t\t\teffectOrName = effectOrName.name;\n\t\t}\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\n\t}\n\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\n\t\tif (nextArgs && nextKwargs) {\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\n\t\t\t\targs[2] = 'ability: Sturdy';\n\t\t\t}\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\n\t\t\t)) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\n\t\t\t\tkwArgs.then = '.';\n\t\t\t}\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\n\t\t\t\tif (this.scene.closeMessagebar()) {\n\t\t\t\t\tthis.currentStep--;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tkwArgs.simult = '.';\n\t\t\t}\n\t\t}\n\t\tif (kwArgs.then) this.waitForAnimations = false;\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\n\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\n\t\tswitch (args[0]) {\n\t\tcase '-damage': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet damage = poke.healthParse(args[2], true);\n\t\t\tif (damage === null) break;\n\t\t\tlet range = poke.getDamageRange(damage);\n\n\t\t\tif (kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tthis.activateAbility(ofpoke, effect);\n\t\t\t\tif (effect.effectType === 'Item') {\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\n\t\t\t\t\t\titemPoke.item = effect.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'brn':\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'psn':\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'baddreams':\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'curse':\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'confusion':\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'leechseed':\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bind':\n\t\t\t\tcase 'wrap':\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.dex.moves.get(this.lastMove).category !== 'Status') {\n\t\t\t\t\tpoke.timesAttacked++;\n\t\t\t\t}\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\n\t\t\t\tif (damage[1] !== 100) {\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\n\t\t\t\t\t\thover += ' pixels';\n\t\t\t\t\t}\n\t\t\t\t\t// battle-log will convert this into <abbr>\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\n\t\t\t\t}\n\t\t\t\targs[3] = damageinfo;\n\t\t\t}\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-heal': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\n\t\t\tif (damage === null) break;\n\t\t\tlet range = poke.getDamageRange(damage);\n\n\t\t\tif (kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tthis.activateAbility(poke, effect);\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\n\t\t\t\t\t\tpoke.item = effect.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'lunardance':\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\n\t\t\t\t\t\ttrackedMove[1] = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// falls through\n\t\t\t\tcase 'healingwish':\n\t\t\t\t\tthis.lastMove = 'healing-wish';\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\n\t\t\t\t\tpoke.side.wisher = null;\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wish':\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'revivalblessing':\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\n\t\t\t\t\tconst {siden} = this.parsePokemonId(args[1]);\n\t\t\t\t\tconst side = this.sides[siden];\n\t\t\t\t\tpoke.fainted = false;\n\t\t\t\t\tpoke.status = '';\n\t\t\t\t\tthis.scene.updateSidebar(side);\n\t\t\t\t\t// Revived while still on the field\n\t\t\t\t\tif (!side.active[poke.slot]) {\n\t\t\t\t\t\tpoke.side.replace(poke);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-sethp': {\n\t\t\tfor (let k = 0; k < 2; k++) {\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\n\t\t\t\tif (cpoke) {\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\n\t\t\t\t\tlet diff = damage[0];\n\t\t\t\t\tif (diff > 0) {\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-boost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet stat = args[2] as BoostStatName;\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\n\t\t\tlet amount = parseInt(args[3], 10);\n\t\t\tif (amount === 0) {\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\n\t\t\t\tthis.log(args, kwArgs);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!poke.boosts[stat]) {\n\t\t\t\tpoke.boosts[stat] = 0;\n\t\t\t}\n\t\t\tpoke.boosts[stat] += amount;\n\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-unboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet stat = args[2] as BoostStatName;\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\n\t\t\tlet amount = parseInt(args[3], 10);\n\t\t\tif (amount === 0) {\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\n\t\t\t\tthis.log(args, kwArgs);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!poke.boosts[stat]) {\n\t\t\t\tpoke.boosts[stat] = 0;\n\t\t\t}\n\t\t\tpoke.boosts[stat] -= amount;\n\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-setboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet stat = args[2] as BoostStatName;\n\t\t\tlet amount = parseInt(args[3], 10);\n\t\t\tpoke.boosts[stat] = amount;\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-swapboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\n\t\t\tfor (const stat of stats) {\n\t\t\t\tlet tmp = poke.boosts[stat];\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\n\t\t\t\tpoke2.boosts[stat] = tmp;\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearpositiveboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\n\t\t\tlet effect = Dex.getEffect(args[3]);\n\t\t\tfor (const stat in poke.boosts) {\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\n\n\t\t\tif (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'spectralthief':\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearnegativeboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tfor (const stat in poke.boosts) {\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-copyboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\n\t\t\tfor (const stat of stats) {\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\n\t\t\t}\n\t\t\tif (this.gen >= 6) {\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'gmaxchistrike', 'laserfocus'];\n\t\t\t\tfor (const volatile of volatilesToCopy) {\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.boosts = {};\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-invertboost': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tfor (const stat in poke.boosts) {\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\n\t\t\t}\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-clearallboost': {\n\t\t\tlet timeOffset = this.scene.timeOffset;\n\t\t\tfor (const active of this.getAllActive()) {\n\t\t\t\tactive.boosts = {};\n\t\t\t\tthis.scene.timeOffset = timeOffset;\n\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\n\t\t\t}\n\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-crit': {\n\t\t\tlet poke = this.getPokemon(args[1]);\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-supereffective': {\n\t\t\tlet poke = this.getPokemon(args[1]);\n\t\t\tif (poke) {\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\n\t\t\t\tif (window.Config?.server?.afd) {\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-resisted': {\n\t\t\tlet poke = this.getPokemon(args[1]);\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-immune': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\n\t\t\tbreak;\n\t\t}\n\t\tcase '-miss': {\n\t\t\tlet target = this.getPokemon(args[2]);\n\t\t\tif (target) {\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fail': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'brn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'tox':\n\t\t\tcase 'psn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'slp':\n\t\t\t\tif (fromeffect.id === 'uproar') {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\n\t\t\t\t} else {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'par':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'frz':\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'unboost':\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (poke) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.scene.animReset(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-block': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'quickguard':\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'wideguard':\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'craftyshield':\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'protect':\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\n\t\t\t\tbreak;\n\n\t\t\tcase 'safetygoggles':\n\t\t\t\tpoke.item = 'Safety Goggles';\n\t\t\t\tbreak;\n\t\t\tcase 'protectivepads':\n\t\t\t\tpoke.item = 'Protective Pads';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-center': case '-notarget': case '-ohko':\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-zpower': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-prepare': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet moveid = toID(args[2]);\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-mustrecharge': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-status': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\n\t\t\tpoke.status = args[2] as StatusName;\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\n\t\t\tif (effect.effectType === 'Item') {\n\t\t\t\tofpoke.item = effect.name;\n\t\t\t}\n\n\t\t\tswitch (args[2]) {\n\t\t\tcase 'brn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'tox':\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\n\t\t\t\tbreak;\n\t\t\tcase 'psn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'slp':\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\n\t\t\t\tif (effect.id === 'rest') {\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'par':\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'frz':\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.scene.updateStatbar(poke);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-curestatus': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\n\t\t\tif (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'flamewheel':\n\t\t\t\tcase 'flareblitz':\n\t\t\t\tcase 'fusionflare':\n\t\t\t\tcase 'sacredfire':\n\t\t\t\tcase 'scald':\n\t\t\t\tcase 'steameruption':\n\t\t\t\t\tkwArgs.thaw = '.';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (poke) {\n\t\t\t\tpoke.status = '';\n\t\t\t\tswitch (args[2]) {\n\t\t\t\tcase 'brn':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'tox':\n\t\t\t\tcase 'psn':\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'slp':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'par':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'frz':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\n\t\t}\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tfor (const target of poke.side.pokemon) {\n\t\t\t\ttarget.status = '';\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\n\t\t\t}\n\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-item': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet item = Dex.items.get(args[2]);\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tpoke.item = item.name;\n\t\t\tpoke.itemEffect = '';\n\t\t\tpoke.removeVolatile('airballoon' as ID);\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\n\n\t\t\tif (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'pickup':\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\n\t\t\t\t\t// falls through\n\t\t\t\tcase 'recycle':\n\t\t\t\t\tpoke.itemEffect = 'found';\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'frisk':\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'magician':\n\t\t\t\tcase 'pickpocket':\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\n\t\t\t\t\t// falls through\n\t\t\t\tcase 'thief':\n\t\t\t\tcase 'covet':\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\n\t\t\t\t\tofpoke!.item = '';\n\t\t\t\t\tofpoke!.itemEffect = '';\n\t\t\t\t\tofpoke!.prevItem = item.name;\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\n\t\t\t\t\tpoke.itemEffect = 'stolen';\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'harvest':\n\t\t\t\t\tpoke.itemEffect = 'harvested';\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bestow':\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'switcheroo':\n\t\t\t\tcase 'trick':\n\t\t\t\t\tpoke.itemEffect = 'tricked';\n\t\t\t\t\t// falls through\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tswitch (item.id) {\n\t\t\t\tcase 'airballoon':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-enditem': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet item = Dex.items.get(args[2]);\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tif (this.gen > 4 || effect.id !== 'knockoff') {\n\t\t\t\tpoke.item = '';\n\t\t\t\tpoke.itemEffect = '';\n\t\t\t\tpoke.prevItem = item.name;\n\t\t\t\tpoke.prevItemEffect = '';\n\t\t\t}\n\t\t\tpoke.removeVolatile('airballoon' as ID);\n\t\t\tpoke.addVolatile('itemremoved' as ID);\n\t\t\tif (kwArgs.eat) {\n\t\t\t\tpoke.prevItemEffect = 'eaten';\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\n\t\t\t\tthis.lastMove = item.id;\n\t\t\t} else if (kwArgs.weaken) {\n\t\t\t\tpoke.prevItemEffect = 'eaten';\n\t\t\t\tthis.lastMove = item.id;\n\t\t\t} else if (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'fling':\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'knockoff':\n\t\t\t\t\tif (this.gen <= 4) {\n\t\t\t\t\t\tpoke.itemEffect = 'knocked off';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\n\t\t\t\t\t}\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stealeat':\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gem':\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'incinerate':\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tswitch (item.id) {\n\t\t\t\tcase 'airballoon':\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'focussash':\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'focusband':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'redcard':\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-ability': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ability = Dex.abilities.get(args[2]);\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\n\n\t\t\tif (kwArgs.silent) {\n\t\t\t\t// do nothing\n\t\t\t} else if (effect.id) {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'trace':\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\n\t\t\t\t\tthis.scene.wait(500);\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'powerofalchemy':\n\t\t\t\tcase 'receiver':\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\n\t\t\t\t\tthis.scene.wait(500);\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roleplay':\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'desolateland':\n\t\t\t\tcase 'primordialsea':\n\t\t\t\tcase 'deltastream':\n\t\t\t\t\tif (kwArgs.fail) {\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.activateAbility(poke, ability.name);\n\t\t\t}\n\t\t\tthis.scene.updateWeather();\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-endability': {\n\t\t\t// deprecated; use |-start| for Gastro Acid\n\t\t\t// and the third arg of |-ability| for Entrainment et al\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet ability = Dex.abilities.get(args[2]);\n\t\t\tpoke.ability = '(suppressed)';\n\n\t\t\tif (ability.id) {\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'detailschange': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.removeVolatile('formechange' as ID);\n\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\tpoke.removeVolatile('typechange' as ID);\n\n\t\t\tlet newSpeciesForme = args[2];\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\n\t\t\tif (commaIndex !== -1) {\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\n\t\t\t\tif (level.charAt(0) === 'L') {\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\n\t\t\t\t}\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\n\t\t\t}\n\t\t\tlet species = this.dex.species.get(newSpeciesForme);\n\n\t\t\tpoke.speciesForme = newSpeciesForme;\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\n\n\t\t\tpoke.details = args[2];\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\n\n\t\t\tif (poke.getSpeciesForme() === 'Palafin-Hero') {\n\t\t\t\tpoke.sprite.sp = Dex.getSpriteData(poke, poke.sprite.isFrontSprite, {\n\t\t\t\t\tgen: poke.sprite.scene.gen,\n\t\t\t\t\tmod: poke.sprite.scene.mod,\n\t\t\t\t});\n\t\t\t\tpoke.sprite.oldsp = null;\n\t\t\t} else {\n\t\t\t\tthis.scene.animTransform(poke, true, true);\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-transform': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\n\n\t\t\tif (!kwArgs.silent) {\n\t\t\t\tthis.activateAbility(poke, effect);\n\t\t\t}\n\n\t\t\tpoke.boosts = {...tpoke.boosts};\n\t\t\tpoke.copyTypesFrom(tpoke);\n\t\t\tpoke.ability = tpoke.ability;\n\t\t\tpoke.timesAttacked = tpoke.timesAttacked;\n\t\t\tconst targetForme = tpoke.volatiles.formechange;\n\t\t\tconst speciesForme = (targetForme && !targetForme[1].endsWith('-Gmax')) ? targetForme[1] : tpoke.speciesForme;\n\t\t\tconst pokemon = tpoke;\n\t\t\tconst shiny = tpoke.shiny;\n\t\t\tconst gender = tpoke.gender;\n\t\t\tconst level = tpoke.level;\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender, level);\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\n\t\t\t}\n\t\t\tthis.scene.animTransform(poke);\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-formechange': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet species = Dex.species.get(args[2]);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tlet isCustomAnim = species.name.startsWith('Wishiwashi');\n\t\t\tif (!poke.getSpeciesForme().endsWith('-Gmax') && !species.name.endsWith('-Gmax')) {\n\t\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\t\tpoke.removeVolatile('typechange' as ID);\n\t\t\t\tif (this.gen >= 6) poke.removeVolatile('autotomize' as ID);\n\t\t\t}\n\n\t\t\tif (!kwArgs.silent) {\n\t\t\t\tthis.activateAbility(poke, fromeffect);\n\t\t\t}\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-mega': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet item = Dex.items.get(args[3]);\n\t\t\tif (args[3]) {\n\t\t\t\tpoke.item = item.name;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-primal': case '-burst': {\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-terastallize': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet type = Dex.types.get(args[2]).name;\n\t\t\tpoke.teraType = type;\n\t\t\tthis.scene.animTransform(poke, true, true);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-start': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\n\t\t\tthis.activateAbility(poke, effect);\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'typechange':\n\t\t\t\tif (ofpoke && fromeffect.id === 'reflecttype') {\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\n\t\t\t\t} else {\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\n\t\t\t\t\tif (!kwArgs.silent) {\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.scene.updateStatbar(poke);\n\t\t\t\tbreak;\n\t\t\tcase 'typeadd':\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\n\t\t\t\tif (kwArgs.silent) break;\n\t\t\t\tthis.scene.typeAnim(poke, type);\n\t\t\t\tbreak;\n\t\t\tcase 'dynamax':\n\t\t\t\tpoke.addVolatile('dynamax' as ID, !!args[3]);\n\t\t\t\tthis.scene.animTransform(poke, true);\n\t\t\t\tbreak;\n\t\t\tcase 'powertrick':\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'foresight':\n\t\t\tcase 'miracleeye':\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'telekinesis':\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'confusion':\n\t\t\t\tif (!kwArgs.already) {\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'leechseed':\n\t\t\t\tthis.scene.updateStatbar(poke);\n\t\t\t\tbreak;\n\t\t\tcase 'healblock':\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'yawn':\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\n\t\t\t\tbreak;\n\t\t\tcase 'taunt':\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'imprison':\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'disable':\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'embargo':\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'torment':\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'ingrain':\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'aquaring':\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'stockpile1':\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'stockpile2':\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'stockpile3':\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'perish0':\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\n\t\t\t\tbreak;\n\t\t\tcase 'perish1':\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'perish2':\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'perish3':\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'encore':\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'bide':\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'attract':\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'autotomize':\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\n\t\t\t\tif (poke.volatiles.autotomize) {\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\n\t\t\t\t} else {\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'focusenergy':\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'curse':\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'nightmare':\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\n\t\t\t\tbreak;\n\t\t\tcase 'magnetrise':\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'smackdown':\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\n\t\t\t\tbreak;\n\t\t\tcase 'substitute':\n\t\t\t\tif (kwArgs.damage) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\n\t\t\t\t} else if (kwArgs.block) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Gen 1-2\n\t\t\tcase 'mist':\n\t\t\t\tthis.scene.resultAnim(poke, 'Mist', 'good');\n\t\t\t\tbreak;\n\t\t\t// Gen 1\n\t\t\tcase 'lightscreen':\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'reflect':\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoke.addVolatile(effect.id);\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-end': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tpoke.removeVolatile(effect.id);\n\n\t\t\tif (kwArgs.silent) {\n\t\t\t\t// do nothing\n\t\t\t} else {\n\t\t\t\tswitch (effect.id) {\n\t\t\t\tcase 'dynamax':\n\t\t\t\t\tthis.scene.animTransform(poke);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'powertrick':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'telekinesis':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skydrop':\n\t\t\t\t\tif (kwArgs.interrupt) {\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'confusion':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'leechseed':\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'healblock':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'attract':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'taunt':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'disable':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'embargo':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'torment':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'encore':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'bide':\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'illusion':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\n\t\t\t\t\tpoke.rememberAbility('Illusion');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'slowstart':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'perishsong': // for backwards compatibility\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'substitute':\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'stockpile':\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'protosynthesis':\n\t\t\t\t\tpoke.removeVolatile('protosynthesisatk' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisdef' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspa' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspd' as ID);\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspe' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'quarkdrive':\n\t\t\t\t\tpoke.removeVolatile('quarkdriveatk' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivedef' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespa' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespd' as ID);\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespe' as ID);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (effect.effectType === 'Move') {\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-singleturn': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoke.addTurnstatus(effect.id);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'roost':\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'quickguard':\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'wideguard':\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'craftyshield':\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'matblock':\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'protect':\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'endure':\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'helpinghand':\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'focuspunch':\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\n\t\t\t\tpoke.rememberMove(effect.name, 0);\n\t\t\t\tbreak;\n\t\t\tcase 'shelltrap':\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\n\t\t\t\tpoke.rememberMove(effect.name, 0);\n\t\t\t\tbreak;\n\t\t\tcase 'beakblast':\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.scene.updateStatbar(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-singlemove': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tpoke.addMovestatus(effect.id);\n\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'grudge':\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\n\t\t\t\tbreak;\n\t\t\tcase 'destinybond':\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-activate': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet target = this.getPokemon(args[3]);\n\t\t\tthis.activateAbility(poke, effect);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'poltergeist':\n\t\t\t\tpoke.item = kwArgs.item;\n\t\t\t\tpoke.itemEffect = 'disturbed';\n\t\t\t\tbreak;\n\t\t\tcase 'grudge':\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\n\t\t\t\tbreak;\n\t\t\tcase 'substitute':\n\t\t\t\tif (kwArgs.damage) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\n\t\t\t\t} else if (kwArgs.block) {\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'attract':\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\n\t\t\t\tbreak;\n\t\t\tcase 'bide':\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\n\t\t\t\tbreak;\n\n\t\t\t// move activations\n\t\t\tcase 'aromatherapy':\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'healbell':\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\n\t\t\t\tbreak;\n\t\t\tcase 'brickbreak':\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\n\t\t\t\tbreak;\n\t\t\tcase 'hyperdrill':\n\t\t\tcase 'hyperspacefury':\n\t\t\tcase 'hyperspacehole':\n\t\t\tcase 'phantomforce':\n\t\t\tcase 'shadowforce':\n\t\t\tcase 'feint':\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'eeriespell':\n\t\t\tcase 'gmaxdepletion':\n\t\t\tcase 'spite':\n\t\t\t\tlet move = Dex.moves.get(kwArgs.move).name;\n\t\t\t\tlet pp = Number(kwArgs.number);\n\t\t\t\tif (isNaN(pp)) pp = 4;\n\t\t\t\tpoke.rememberMove(move, pp);\n\t\t\t\tbreak;\n\t\t\tcase 'gravity':\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\n\t\t\t\tthis.scene.anim(poke, {time: 100});\n\t\t\t\tbreak;\n\t\t\tcase 'skillswap': case 'wanderingspirit':\n\t\t\t\tif (this.gen <= 4) break;\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\n\t\t\t\tif (pokeability) {\n\t\t\t\t\tpoke.ability = pokeability;\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\n\t\t\t\t}\n\t\t\t\tif (targetability) {\n\t\t\t\t\ttarget!.ability = targetability;\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\n\t\t\t\t}\n\t\t\t\tif (poke.side !== target!.side) {\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// ability activations\n\t\t\tcase 'electromorphosis':\n\t\t\tcase 'windpower':\n\t\t\t\tpoke.addMovestatus('charge' as ID);\n\t\t\t\tbreak;\n\t\t\tcase 'forewarn':\n\t\t\t\tif (target) {\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\n\t\t\t\t} else {\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\n\t\t\t\t\t}\n\t\t\t\t\tif (foeActive.length === 1) {\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'lingeringaroma':\n\t\t\tcase 'mummy':\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\n\t\t\t\tlet ability = Dex.abilities.get(kwArgs.ability);\n\t\t\t\tthis.activateAbility(target, ability.name);\n\t\t\t\tthis.activateAbility(poke, effect.name);\n\t\t\t\tthis.scene.wait(700);\n\t\t\t\tthis.activateAbility(target, effect.name, true);\n\t\t\t\tbreak;\n\n\t\t\t// item activations\n\t\t\tcase 'leppaberry':\n\t\t\tcase 'mysteryberry':\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\n\t\t\t\tbreak;\n\t\t\tcase 'focusband':\n\t\t\t\tpoke.item = 'Focus Band';\n\t\t\t\tbreak;\n\t\t\tcase 'quickclaw':\n\t\t\t\tpoke.item = 'Quick Claw';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-sidestart': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tside.addSideCondition(effect);\n\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'tailwind':\n\t\t\tcase 'auroraveil':\n\t\t\tcase 'reflect':\n\t\t\tcase 'lightscreen':\n\t\t\tcase 'safeguard':\n\t\t\tcase 'mist':\n\t\t\tcase 'gmaxwildfire':\n\t\t\tcase 'gmaxvolcalith':\n\t\t\tcase 'gmaxvinelash':\n\t\t\tcase 'gmaxcannonade':\n\t\t\tcase 'grasspledge':\n\t\t\tcase 'firepledge':\n\t\t\tcase 'waterpledge':\n\t\t\t\tthis.scene.updateWeather();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-sideend': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\n\t\t\tside.removeSideCondition(effect.name);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-swapsideconditions': {\n\t\t\tthis.swapSideConditions();\n\t\t\tthis.scene.updateWeather();\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-weather': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\n\t\t\tif (!effect.id || effect.id === 'none') {\n\t\t\t\tkwArgs.from = this.weather;\n\t\t\t}\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fieldstart': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\n\t\t\tthis.activateAbility(poke, fromeffect);\n\t\t\tlet maxTimeLeft = 0;\n\t\t\tif (effect.id.endsWith('terrain')) {\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\n\t\t\t}\n\t\t\tthis.addPseudoWeather(effect.name, 5, maxTimeLeft);\n\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'gravity':\n\t\t\t\tif (this.seeking !== null) break;\n\t\t\t\tfor (const active of this.getAllActive()) {\n\t\t\t\t\tthis.scene.runOtherAnim('gravity' as ID, [active]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fieldend': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\n\t\t\tthis.removePseudoWeather(effect.name);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-fieldactivate': {\n\t\t\tlet effect = Dex.getEffect(args[1]);\n\t\t\tswitch (effect.id) {\n\t\t\tcase 'perishsong':\n\t\t\t\tthis.scene.updateStatbars();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-anim': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet move = Dex.moves.get(args[2]);\n\t\t\tif (this.checkActive(poke)) return;\n\t\t\tlet poke2 = this.getPokemon(args[3]);\n\t\t\tthis.scene.beforeMove(poke);\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\n\t\t\tthis.scene.afterMove(poke);\n\t\t\tbreak;\n\t\t}\n\t\tcase '-hint': case '-message': case '-candynamax': {\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\n\t\t\tbreak;\n\t\t}}\n\t}\n\t/*\n\tparseSpriteData(name) {\n\t\tlet siden = 0,\n\t\t\tfoe = false;\n\t\twhile (true) {\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\n\t\t\t\tfoe = true;\n\t\t\t\tname = name.substr(6);\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\n\t\t\t\tsiden = this.p2.n;\n\t\t\t\tname = name.substr(4);\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\n\t\t\t\tsiden = this.p1.n;\n\t\t\t\tname = name.substr(5);\n\t\t\t} else break;\n\t\t}\n\t\tif (name.substr(name.length - 1) === ')') {\n\t\t\tlet parenIndex = name.lastIndexOf('(');\n\t\t\tif (parenIndex > 0) {\n\t\t\t\tlet species = name.substr(parenIndex + 1);\n\t\t\t\tname = species.substr(0, species.length - 1);\n\t\t\t}\n\t\t}\n\t\tif (foe) siden = (siden ? 0 : 1);\n\n\t\tlet data = Dex.species.get(name);\n\t\treturn data.spriteData[siden];\n\t}\n\t*/\n\t/**\n\t * @param name Leave blank for Team Preview\n\t * @param pokemonid Leave blank for Team Preview\n\t * @param details\n\t * @param output\n\t */\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\n\t\tconst isTeamPreview = !name;\n\t\toutput.details = details;\n\t\toutput.name = name;\n\t\toutput.speciesForme = name;\n\t\toutput.level = 100;\n\t\toutput.shiny = false;\n\t\toutput.gender = '';\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\n\t\tlet splitDetails = details.split(', ');\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\n\t\t\toutput.shiny = true;\n\t\t\tsplitDetails.pop();\n\t\t}\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\n\t\t\tsplitDetails.pop();\n\t\t}\n\t\tif (splitDetails[1]) {\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\n\t\t}\n\t\tif (splitDetails[0]) {\n\t\t\toutput.speciesForme = splitDetails[0];\n\t\t}\n\t\treturn output;\n\t}\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\n\t\tlet [hp, status] = hpstring.split(' ');\n\n\t\t// hp parse\n\t\toutput.hpcolor = '';\n\t\tif (hp === '0' || hp === '0.0') {\n\t\t\tif (!output.maxhp) output.maxhp = 100;\n\t\t\toutput.hp = 0;\n\t\t} else if (hp.indexOf('/') > 0) {\n\t\t\tlet [curhp, maxhp] = hp.split('/');\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toutput.hp = parseFloat(curhp);\n\t\t\toutput.maxhp = parseFloat(maxhp);\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\n\t\t\tconst colorchar = maxhp.slice(-1);\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\n\t\t\t\toutput.hpcolor = colorchar;\n\t\t\t}\n\t\t} else if (!isNaN(parseFloat(hp))) {\n\t\t\tif (!output.maxhp) output.maxhp = 100;\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\n\t\t}\n\n\t\t// status parse\n\t\tif (!status) {\n\t\t\toutput.status = '';\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\n\t\t\toutput.status = status;\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\n\t\t\toutput.status = status;\n\t\t} else if (status === 'fnt') {\n\t\t\toutput.hp = 0;\n\t\t\toutput.fainted = true;\n\t\t}\n\t\treturn output;\n\t}\n\tparsePokemonId(pokemonid: string) {\n\t\tlet name = pokemonid;\n\n\t\tlet siden = -1;\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\n\t\tif (/^p[1-9]($|: )/.test(name)) {\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\n\t\t\tname = name.slice(4);\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\n\t\t\tslot = slotChart[name.charAt(2)];\n\t\t\tname = name.slice(5);\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\n\t\t}\n\t\treturn {name, siden, slot, pokemonid};\n\t}\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\n\t\tpokemonid = parsedPokemonid;\n\n\t\tconst searchid = `${pokemonid}|${details}`;\n\t\tconst side = this.sides[siden];\n\n\t\t// search inactive revealed pokemon\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\n\t\t\tlet pokemon = side.pokemon[i];\n\t\t\tif (pokemon.fainted) continue;\n\t\t\t// already active, can't be switching in\n\t\t\tif (side.active.includes(pokemon)) continue;\n\t\t\t// just switched out, can't be switching in\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\n\n\t\t\tif (pokemon.searchid === searchid) {\n\t\t\t\t// exact match\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\n\t\t\t\t// switch-in matches Team Preview entry\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t}\n\n\t\t// pokemon not found, create a new pokemon object for it\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\n\t\tif (slot >= 0) pokemon.slot = slot;\n\t\treturn pokemon;\n\t}\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\n\t\tconst {siden} = this.parsePokemonId(sideid);\n\n\t\treturn this.sides[siden].addPokemon('', '', details);\n\t}\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\n\t\t\tif (pokemon.searchid === searchid) {\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tgetPokemon(pokemonid: string | undefined) {\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\n\t\t\treturn null;\n\t\t}\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\n\t\tpokemonid = parsedPokemonid;\n\n\t\t/** if true, don't match an active pokemon */\n\t\tconst isInactive = (slot < 0);\n\t\tconst side = this.sides[siden];\n\n\t\t// search player's pokemon\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\n\n\t\tfor (const pokemon of side.pokemon) {\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\n\t\t\t\treturn pokemon;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\tgetSide(sidename: string): Side {\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\n\t\tif (this.farSide.id === sidename) return this.farSide;\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\n\t\tif (this.farSide.name === sidename) return this.farSide;\n\t\treturn {\n\t\t\tname: sidename,\n\t\t\tid: sidename.replace(/ /g, ''),\n\t\t} as any;\n\t}\n\n\tadd(command?: string) {\n\t\tif (command) this.stepQueue.push(command);\n\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\n\t\t\tthis.atQueueEnd = false;\n\t\t\tthis.nextStep();\n\t\t}\n\t}\n\t/**\n\t * PS's preempt system is intended to show chat messages immediately,\n\t * instead of waiting for the battle to get to the point where the\n\t * message was said.\n\t *\n\t * In addition to being a nice quality-of-life feature, it's also\n\t * important to make sure timer updates happen in real-time.\n\t */\n\tinstantAdd(command: string) {\n\t\tthis.run(command, true);\n\t\tthis.preemptStepQueue.push(command);\n\t\tthis.add(command);\n\t}\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\n\t\tswitch (args[0]) {\n\t\tcase 'start': {\n\t\t\tthis.nearSide.active[0] = null;\n\t\t\tthis.farSide.active[0] = null;\n\t\t\tthis.scene.resetSides();\n\t\t\tthis.start();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'upkeep': {\n\t\t\tthis.usesUpkeep = true;\n\t\t\tthis.updateTurnCounters();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'turn': {\n\t\t\tthis.setTurn(parseInt(args[1], 10));\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'tier': {\n\t\t\tthis.tier = args[1];\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\n\t\t\t\tthis.speciesClause = true;\n\t\t\t}\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\n\t\t\t\tthis.messageFadeTime = 40;\n\t\t\t\tthis.isBlitz = true;\n\t\t\t}\n\t\t\tif (this.tier.includes(`Let's Go`)) {\n\t\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\n\t\t\t}\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'gametype': {\n\t\t\tthis.gameType = args[1] as any;\n\t\t\tswitch (args[1]) {\n\t\t\tcase 'multi':\n\t\t\tcase 'freeforall':\n\t\t\t\tthis.pokemonControlled = 1;\n\t\t\t\tif (!this.p3) this.p3 = new Side(this, 2);\n\t\t\t\tif (!this.p4) this.p4 = new Side(this, 3);\n\t\t\t\tthis.p3.foe = this.p2;\n\t\t\t\tthis.p4.foe = this.p1;\n\n\t\t\t\tif (args[1] === 'multi') {\n\t\t\t\t\tthis.p4.ally = this.p2;\n\t\t\t\t\tthis.p3.ally = this.p1;\n\t\t\t\t\tthis.p1.ally = this.p3;\n\t\t\t\t\tthis.p2.ally = this.p4;\n\t\t\t\t}\n\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\n\t\t\t\tbreak;\n\t\t\tcase 'doubles':\n\t\t\t\tthis.nearSide.active = [null, null];\n\t\t\t\tthis.farSide.active = [null, null];\n\t\t\t\tbreak;\n\t\t\tcase 'triples':\n\t\t\tcase 'rotation':\n\t\t\t\tthis.nearSide.active = [null, null, null];\n\t\t\t\tthis.farSide.active = [null, null, null];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfor (const side of this.sides) side.active = [null];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\n\t\t\tthis.scene.updateGen();\n\t\t\tthis.scene.resetSides();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'rule': {\n\t\t\tlet ruleName = args[1].split(': ')[0];\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\n\t\t\tif (ruleName === 'Blitz') {\n\t\t\t\tthis.messageFadeTime = 40;\n\t\t\t\tthis.isBlitz = true;\n\t\t\t}\n\t\t\tthis.rules[ruleName] = 1;\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'rated': {\n\t\t\tthis.rated = args[1] || true;\n\t\t\tthis.scene.updateGen();\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'inactive': {\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\n\t\t\t\treturn;\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\n\t\t\t\t// this is ugly but parseInt is documented to work this way\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\n\t\t\t\t// sentence\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\n\t\t\t\treturn;\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\n\t\t\t\tlet userid = window.app?.user?.get('userid');\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\n\t\t\t\t}\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\n\t\t\t\tif (this.isBlitz) return;\n\t\t\t}\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'inactiveoff': {\n\t\t\tthis.kickingInactive = false;\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'join': case 'j': case 'J': {\n\t\t\tif (this.roomid) {\n\t\t\t\tlet room = app!.rooms[this.roomid];\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\n\t\t\t\tlet userid = toUserid(user.name);\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\n\t\t\t\troom.users[userid] = user;\n\t\t\t\troom.userList.add(userid);\n\t\t\t\troom.userList.updateUserCount();\n\t\t\t\troom.userList.updateNoUsersOnline();\n\t\t\t}\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'leave': case 'l': case 'L': {\n\t\t\tif (this.roomid) {\n\t\t\t\tlet room = app!.rooms[this.roomid];\n\t\t\t\tlet user = args[1];\n\t\t\t\tlet userid = toUserid(user);\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\n\t\t\t\tdelete room.users[userid];\n\t\t\t\troom.userList.remove(userid);\n\t\t\t\troom.userList.updateUserCount();\n\t\t\t\troom.userList.updateNoUsersOnline();\n\t\t\t}\n\t\t\tthis.log(args, undefined, preempt);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'name': case 'n': case 'N': {\n\t\t\tif (this.roomid) {\n\t\t\t\tlet room = app!.rooms[this.roomid];\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\n\t\t\t\tlet oldid = args[2];\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\n\t\t\t\t\tapp!.user.set({\n\t\t\t\t\t\taway: user.away,\n\t\t\t\t\t\tstatus: user.status,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tlet userid = toUserid(user.name);\n\t\t\t\troom.users[userid] = user;\n\t\t\t\troom.userList.remove(oldid);\n\t\t\t\troom.userList.add(userid);\n\t\t\t}\n\t\t\tif (!this.ignoreSpects) {\n\t\t\t\tthis.log(args, undefined, preempt);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'player': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tside.setName(args[2]);\n\t\t\tif (args[3]) side.setAvatar(args[3]);\n\t\t\tif (args[4]) side.rating = args[4];\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\n\t\t\tthis.log(args);\n\t\t\tthis.scene.updateSidebar(side);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'teamsize': {\n\t\t\tlet side = this.getSide(args[1]);\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\n\t\t\tthis.scene.updateSidebar(side);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'win': case 'tie': {\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'prematureend': {\n\t\t\tthis.prematureEnd();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'clearpoke': {\n\t\t\tthis.p1.clearPokemon();\n\t\t\tthis.p2.clearPokemon();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'poke': {\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\n\t\t\tif (args[3] === 'mail') {\n\t\t\t\tpokemon.item = '(mail)';\n\t\t\t} else if (args[3] === 'item') {\n\t\t\t\tpokemon.item = '(exists)';\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'updatepoke': {\n\t\t\tconst {siden} = this.parsePokemonId(args[1]);\n\t\t\tconst side = this.sides[siden];\n\t\t\tfor (let i = 0; i < side.pokemon.length; i++) {\n\t\t\t\tconst pokemon = side.pokemon[i];\n\t\t\t\tif (pokemon.details !== args[2] && pokemon.checkDetails(args[2])) {\n\t\t\t\t\tside.addPokemon('', '', args[2], i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tcase 'teampreview': {\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\n\t\t\tthis.scene.teamPreview();\n\t\t\tbreak;\n\t\t}\n\t\tcase 'switch': case 'drag': case 'replace': {\n\t\t\tthis.endLastTurn();\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\n\t\t\tlet slot = poke.slot;\n\t\t\tpoke.healthParse(args[3]);\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\n\t\t\tif (args[0] === 'switch') {\n\t\t\t\tif (poke.side.active[slot]) {\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!, kwArgs);\n\t\t\t\t}\n\t\t\t\tpoke.side.switchIn(poke, kwArgs);\n\t\t\t} else if (args[0] === 'replace') {\n\t\t\t\tpoke.side.replace(poke);\n\t\t\t} else {\n\t\t\t\tpoke.side.dragIn(poke);\n\t\t\t}\n\t\t\tthis.scene.updateWeather();\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'faint': {\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tpoke.side.faint(poke);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'swap': {\n\t\t\tif (isNaN(Number(args[2]))) {\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\n\t\t\t} else {\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\n\t\t\t\tif (kwArgs.from) {\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\n\t\t\t\t\tif (target) args[2] = target.ident;\n\t\t\t\t}\n\t\t\t\tpoke.side.swapTo(poke, targetIndex);\n\t\t\t}\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'move': {\n\t\t\tthis.endLastTurn();\n\t\t\tthis.resetTurnsSinceMoved();\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet move = Dex.moves.get(args[2]);\n\t\t\tif (this.checkActive(poke)) return;\n\t\t\tlet poke2 = this.getPokemon(args[3]);\n\t\t\tthis.scene.beforeMove(poke);\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tthis.scene.afterMove(poke);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'cant': {\n\t\t\tthis.endLastTurn();\n\t\t\tthis.resetTurnsSinceMoved();\n\t\t\tlet poke = this.getPokemon(args[1])!;\n\t\t\tlet effect = Dex.getEffect(args[2]);\n\t\t\tlet move = Dex.moves.get(args[3]);\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\n\t\t\tthis.log(args, kwArgs);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'gen': {\n\t\t\tthis.gen = parseInt(args[1], 10);\n\t\t\tthis.dex = Dex.forGen(this.gen);\n\t\t\tthis.scene.updateGen();\n\t\t\tthis.log(args);\n\t\t\tbreak;\n\t\t}\n\t\tcase 'callback': {\n\t\t\tthis.subscription?.('callback');\n\t\t\tbreak;\n\t\t}\n\t\tcase 'fieldhtml': {\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\n\t\t\tbreak;\n\t\t}\n\t\tcase 'controlshtml': {\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\n\t\t\tbreak;\n\t\t}\n\t\tdefault: {\n\t\t\tthis.log(args, kwArgs, preempt);\n\t\t\tbreak;\n\t\t}}\n\t}\n\n\trun(str: string, preempt?: boolean) {\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\n\t\t\tthis.preemptStepQueue.shift();\n\t\t\tthis.scene.preemptCatchup();\n\t\t\treturn;\n\t\t}\n\t\tif (!str) return;\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\n\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\n\t\t\tthis.currentStep--;\n\t\t\tthis.activeMoveIsSpread = null;\n\t\t\treturn;\n\t\t}\n\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\n\t\tlet nextArgs: Args = [''];\n\t\tlet nextKwargs: KWArgs = {};\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\n\t\tif (nextLine.slice(0, 2) === '|-') {\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\n\t\t}\n\n\t\tif (this.debug) {\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\n\t\t\t} else {\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\n\t\t\t\t} else {\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\n\t\t\t\t}\n\t\t\t} catch (err: any) {\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\n\t\t\t\tif (err.stack) {\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\n\t\t\t\t\tfor (const line of stack) {\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.log(['error', line]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.subscription?.('error');\n\t\t\t}\n\t\t}\n\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\n\t\t\tif (this.turn === -1) {\n\t\t\t\tthis.turn = 0;\n\t\t\t\tthis.scene.updateBgm();\n\t\t\t}\n\t\t}\n\t}\n\tcheckActive(poke: Pokemon) {\n\t\tif (!poke.side.active[poke.slot]) {\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\n\t\t\tpoke.side.replace(poke);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t\tthis.scene.pause();\n\t\tthis.subscription?.('paused');\n\t}\n\t/**\n\t * Properties relevant to battle playback, for replay UI implementers:\n\t * - `ended`: has the game ended in a win/loss?\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\n\t * - `seeking`: are we trying to skip to a specific turn\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\n\t * - `paused`: are we playing at all?\n\t */\n\tplay() {\n\t\tthis.paused = false;\n\t\tthis.started = true;\n\t\tthis.scene.resume();\n\t\tthis.nextStep();\n\t\tthis.subscription?.('playing');\n\t}\n\tskipTurn() {\n\t\tthis.seekTurn(this.turn + 1);\n\t}\n\tseekTurn(turn: number, forceReset?: boolean) {\n\t\tif (isNaN(turn)) return;\n\t\tturn = Math.max(Math.floor(turn), 0);\n\n\t\tif (this.seeking !== null && this.seeking > turn && !forceReset) {\n\t\t\tthis.seeking = turn;\n\t\t\treturn;\n\t\t}\n\n\t\tif (turn === 0) {\n\t\t\tthis.seeking = null;\n\t\t\tthis.resetStep();\n\t\t\tthis.scene.animationOn();\n\t\t\tif (this.paused) this.subscription?.('paused');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.seeking = turn;\n\n\t\tif (turn <= this.turn || forceReset) {\n\t\t\tthis.scene.animationOff();\n\t\t\tthis.resetStep();\n\t\t} else if (this.atQueueEnd) {\n\t\t\tthis.scene.animationOn();\n\t\t\tthis.seeking = null;\n\t\t} else {\n\t\t\tthis.scene.animationOff();\n\t\t\tthis.nextStep();\n\t\t}\n\t}\n\tstopSeeking() {\n\t\tthis.seeking = null;\n\t\tthis.scene.animationOn();\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\n\t}\n\tshouldStep() {\n\t\tif (this.atQueueEnd) return false;\n\t\tif (this.seeking !== null) return true;\n\t\treturn !(this.paused && this.turn >= 0);\n\t}\n\tnextStep() {\n\t\tif (!this.shouldStep()) return;\n\n\t\tthis.scene.startAnimations();\n\t\tlet animations = undefined;\n\n\t\tdo {\n\t\t\tthis.waitForAnimations = true;\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\n\t\t\t\tthis.atQueueEnd = true;\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\n\t\t\t\tthis.stopSeeking();\n\t\t\t\tif (this.ended) {\n\t\t\t\t\tthis.scene.updateBgm();\n\t\t\t\t}\n\t\t\t\tthis.subscription?.('atqueueend');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\n\t\t\tthis.currentStep++;\n\t\t\tif (this.waitForAnimations === true) {\n\t\t\t\tanimations = this.scene.finishAnimations();\n\t\t\t} else if (this.waitForAnimations === 'simult') {\n\t\t\t\tthis.scene.timeOffset = 0;\n\t\t\t}\n\t\t} while (!animations && this.shouldStep());\n\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\n\t\t\t// initial Play button, team preview\n\t\t\tthis.scene.pause();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!animations) return;\n\n\t\tconst interruptionCount = this.scene.interruptionCount;\n\t\tanimations.done(() => {\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\n\t\t\t\tthis.nextStep();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetQueue(queue: string[]) {\n\t\tthis.stepQueue = queue;\n\t\tthis.resetStep();\n\t}\n\n\tsetMute(mute: boolean) {\n\t\tthis.scene.setMute(mute);\n\t}\n}\n\nif (typeof require === 'function') {\n\t// in Node\n\t(global as any).Battle = Battle;\n\t(global as any).Pokemon = Pokemon;\n}\n"],"mappings":"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"}