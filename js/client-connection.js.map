{"version":3,"file":"client-connection.js","names":["PSConnection","socket","connected","queue","connect","server","PS","port","protocol","url","host","prefix","SockJS","timeout","onopen","console","log","msg","send","update","onmessage","e","receive","data","onclose","isOffline","roomid","rooms","disconnect","close","connection","push","PSLoginServer","query","id","location","pathname","endsWith","Config","routes","client","POKEMON_SHOWDOWN_TESTCLIENT_KEY","sid","replace","Net","get","method","body","then","res","JSON","parse","slice","HttpError","message","statusCode","name","Error","captureStackTrace","err","NetRequest","uri","opts","Promise","resolve","reject","xhr","XMLHttpRequest","includes","encodeQuery","open","onreadystatechange","DONE","readyState","status","responseText","statusText","setRequestHeader","post","urlencodedData","key","encodeURIComponent"],"sources":["../src/client-connection.ts"],"sourcesContent":["/**\n * Connection library\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\ndeclare var SockJS: any;\n\nclass PSConnection {\n\tsocket: any = null;\n\tconnected = false;\n\tqueue = [] as string[];\n\tconstructor() {\n\t\tthis.connect();\n\t}\n\tconnect() {\n\t\tconst server = PS.server;\n\t\tconst port = server.protocol === 'https' ? '' : ':' + server.port;\n\t\tconst url = server.protocol + '://' + server.host + port + server.prefix;\n\t\tconst socket = this.socket = new SockJS(url, [], {timeout: 5 * 60 * 1000});\n\t\tsocket.onopen = () => {\n\t\t\tconsole.log('\\u2705 (CONNECTED)');\n\t\t\tthis.connected = true;\n\t\t\tPS.connected = true;\n\t\t\tfor (const msg of this.queue) socket.send(msg);\n\t\t\tthis.queue = [];\n\t\t\tPS.update();\n\t\t};\n\t\tsocket.onmessage = (e: MessageEvent) => {\n\t\t\tPS.receive('' + e.data);\n\t\t};\n\t\tsocket.onclose = () => {\n\t\t\tconsole.log('\\u2705 (DISCONNECTED)');\n\t\t\tthis.connected = false;\n\t\t\tPS.connected = false;\n\t\t\tPS.isOffline = true;\n\t\t\tfor (const roomid in PS.rooms) {\n\t\t\t\tPS.rooms[roomid]!.connected = false;\n\t\t\t}\n\t\t\tthis.socket = null;\n\t\t\tPS.update();\n\t\t};\n\t}\n\tdisconnect() {\n\t\tthis.socket.close();\n\t\tPS.connection = null;\n\t}\n\tsend(msg: string) {\n\t\tif (!this.connected) {\n\t\t\tthis.queue.push(msg);\n\t\t\treturn;\n\t\t}\n\t\tthis.socket.send(msg);\n\t}\n}\n\nPS.connection = new PSConnection();\n\nconst PSLoginServer = new class {\n\tquery(data: PostData): Promise<{[k: string]: any} | null> {\n\t\tlet url = '/~~' + PS.server.id + '/action.php';\n\t\tif (location.pathname.endsWith('.html')) {\n\t\t\turl = 'https://' + Config.routes.client + url;\n\t\t\t// @ts-ignore\n\t\t\tif (typeof POKEMON_SHOWDOWN_TESTCLIENT_KEY === 'string') {\n\t\t\t\t// @ts-ignore\n\t\t\t\tdata.sid = POKEMON_SHOWDOWN_TESTCLIENT_KEY.replace(/\\%2C/g, ',');\n\t\t\t}\n\t\t}\n\t\treturn Net(url).get({method: data ? 'POST' : 'GET', body: data}).then(\n\t\t\tres => res ? JSON.parse(res.slice(1)) : null\n\t\t).catch(\n\t\t\t() => null\n\t\t);\n\t}\n};\n\ninterface PostData {\n\t[key: string]: string | number;\n}\ninterface NetRequestOptions {\n\tmethod?: 'GET' | 'POST';\n\tbody?: string | PostData;\n\tquery?: PostData;\n}\nclass HttpError extends Error {\n\tstatusCode?: number;\n\tbody: string;\n\tconstructor(message: string, statusCode: number | undefined, body: string) {\n\t\tsuper(message);\n\t\tthis.name = 'HttpError';\n\t\tthis.statusCode = statusCode;\n\t\tthis.body = body;\n\t\ttry {\n\t\t\t(Error as any).captureStackTrace(this, HttpError);\n\t\t} catch (err) {}\n\t}\n}\nclass NetRequest {\n\turi: string;\n\tconstructor(uri: string) {\n\t\tthis.uri = uri;\n\t}\n\n\t/**\n\t * Makes a basic http/https request to the URI.\n\t * Returns the response data.\n\t *\n\t * Will throw if the response code isn't 200 OK.\n\t *\n\t * @param opts request opts\n\t */\n\tget(opts: NetRequestOptions = {}): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\tlet uri = this.uri;\n\t\t\tif (opts.query) {\n\t\t\t\turi += (uri.includes('?') ? '&' : '?') + Net.encodeQuery(opts.query);\n\t\t\t}\n\t\t\txhr.open(opts.method || 'GET', uri);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tconst DONE = 4;\n\t\t\t\tif (xhr.readyState === DONE) {\n\t\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\t\tresolve(xhr.responseText || '');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst err = new HttpError(xhr.statusText || \"Connection error\", xhr.status, xhr.responseText);\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (opts.body) {\n\t\t\t\txhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\t\t\txhr.send(Net.encodeQuery(opts.body));\n\t\t\t} else {\n\t\t\t\txhr.send();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Makes a http/https POST request to the given link.\n\t * @param opts request opts\n\t * @param body POST body\n\t */\n\tpost(opts: Omit<NetRequestOptions, 'body'>, body: PostData | string): Promise<string>;\n\t/**\n\t * Makes a http/https POST request to the given link.\n\t * @param opts request opts\n\t */\n\tpost(opts?: NetRequestOptions): Promise<string>;\n\tpost(opts: NetRequestOptions = {}, body?: PostData | string) {\n\t\tif (!body) body = opts.body;\n\t\treturn this.get({\n\t\t\t...opts,\n\t\t\tmethod: 'POST',\n\t\t\tbody,\n\t\t});\n\t}\n}\n\nfunction Net(uri: string) {\n\treturn new NetRequest(uri);\n}\n\nNet.encodeQuery = function (data: string | PostData) {\n\tif (typeof data === 'string') return data;\n\tlet urlencodedData = '';\n\tfor (const key in data) {\n\t\tif (urlencodedData) urlencodedData += '&';\n\t\turlencodedData += encodeURIComponent(key) + '=' + encodeURIComponent((data as any)[key]);\n\t}\n\treturn urlencodedData;\n};\n"],"mappings":"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"}